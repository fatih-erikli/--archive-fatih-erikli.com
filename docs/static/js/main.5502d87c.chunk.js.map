{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["replaceStateTimeoutId","INITIAL_SHAPES","points","x","y","fill","reflect","p","p0","p1","dx","dy","a","b","Math","round","DRAW_STATE_SELECTION_STARTED","DRAW_STATE_LABELS","handleContextMenu","drawState","showContextMenuSetterFunction","contextMenuPositionSetterFunction","shapes","shapesSetterFunction","drawStateSetterFunction","currentShapeIndex","currentSegmentIndex","event","preventDefault","clientRect","document","querySelector","getBoundingClientRect","cursorPosition","clientX","left","clientY","top","shape","head","point","reflection","midpoint","isControlPoint","newPoints","splice","map","index","handleMouseDown","currentShapeIndexSetterFunction","selectedShapeIndexSetterFunction","currentSegmentIndexSetterFunction","mouseDownCursorPositionSetterFunction","mouseDownShapePointsSetterFunction","selectionRectangle","setMouseDownSelectionRectangle","selectedPointIndexesSetterFunction","contextMenuSetterFunction","isMouseDownSetterFunction","buttons","target","dataset","shapeIndex","pointIndex","Number","isEmptySpace","isSegmentLine","isSegment","isPolygon","flatPoints","flat","selectedPointIndexes","isPointInRectangle","filter","Boolean","findLastOpenShapeIndex","findIndex","last","length","first","continueDrawing","mouseDownCursorPosition","selectionRectangleSetterFunction","currentFillColor","_hasSelection","calculateSelectionRectangle","innerLoop","_","selectionIsValid","canvasBoundingClientRect","right","bottom","newShapes","lastOpenShapeIndex","newAppState","newShape","cursorPositionOrClosingPoint","distance","handleMouseMove","cursorPositionSetterFunction","mouseDownShapePoints","keyStates","setSelectionRectangle","mouseDownSelectionRectangle","isMouseDown","console","log","controlPointMutation","lastOpenShape","_shapeIndex","cachedPointIndex","indexOf","segmentIndex","isShiftPressed","max","min","x1","y1","x2","y2","sqrt","handleKeyUp","keyStatesSetterFunction","isCtrlPressed","minX","minY","width","height","rectangle","parseRGBA","color","parts","split","r","g","parseFloat","buildSVGPath","divider","svgString","forEach","isLast","App","useState","setDrawState","setCursorPosition","setMouseDownCursorPosition","setIsMouseDown","setMouseDownShapePoints","setCurrentShapeIndex","selectedShapeIndex","setSelectedShapeIndex","setCurrentSegmentIndex","name","defaults","state","setState","value","clearTimeout","setTimeout","window","location","href","hashStates","found","builtHashStates","reduce","prev","current","hashName","hashValue","JSON","stringify","join","history","pushState","fragment","parse","decodeURIComponent","useHashedState","setShapes","refreshShapesState","setKeyStates","setSelectedPointIndexes","setCurrentFillColor","currentStrokeColor","setCurrentStrokeColor","showFillColorPicker","setFillColorPicker","showStrokeColorPicker","setShowStrokeColorPicker","showContextMenu","setShowContextMenu","contextMenuPosition","setContextMenuPosition","useEffect","onpopstate","onhashchange","selectedShape","stroke","tabIndex","onKeyDown","keyStateUpdates","shiftKey","ctrlKey","onKeyUp","className","onContextMenu","onMouseDown","onMouseMove","onMouseUp","style","float","backgroundColor","onClick","position","onChange","pickedColor","rgb","updateCurrentShapeFill","marginLeft","updateCurrentShapeStroke","xmlns","Array","undefined","shapeWithCursor","pointsAsSVGString","d","tail","onClosingPoint","lines","cx","cy","keyIndex","push","isPointInSelectionRectangle","_pointIndex","isPointInCurrentSelection","previewSize","id","svgImage","createElement","body","appendChild","onload","canvas","clientWidth","clientHeight","getContext","drawImage","imageDataURL","toDataURL","parentElement","removeChild","URL","revokeObjectURL","src","downloadLink","download","click","createObjectURL","Blob","getElementById","outerHTML","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5502d87c.chunk.js","sourcesContent":["import { useState, React, useEffect } from \"react\";\nimport { ChromePicker as ColorPicker } from \"react-color\";\nimport \"./App.css\";\n\nconst INITIAL_SHAPES = [\n  {\n    points: [\n      { x: 151, y: 289.3000030517578 },\n      { x: 145, y: 269.3000030517578 },\n      { x: 141, y: 262.3000030517578 },\n      { x: 113, y: 213.3000030517578 },\n      { x: 113, y: 160.3000030517578 },\n      { x: 144, y: 136.3000030517578 },\n      { x: 159, y: 125.30000305175781 },\n      { x: 166, y: 122.30000305175781 },\n      { x: 145, y: 96.30000305175781 },\n      { x: 232, y: 57.30000305175781 },\n      { x: 287.5, y: 61.30000305175781 },\n      { x: 304.5, y: 59.30000305175781 },\n      { x: 308.5, y: 42.30000305175781 },\n      { x: 344.5, y: 83.11666870117188 },\n      { x: 362, y: 81.30000305175781 },\n      { x: 381.5, y: 112.11666870117188 },\n      { x: 415, y: 143.3000030517578 },\n      { x: 414, y: 197.3000030517578 },\n      { x: 399.5, y: 225.11666870117188 },\n      { x: 398, y: 256.3000030517578 },\n      { x: 389, y: 275.3000030517578 },\n      { x: 372, y: 347.3000030517578 },\n      { x: 373, y: 283.3000030517578 },\n      { x: 363, y: 266.3000030517578 },\n      { x: 357, y: 209.3000030517578 },\n      { x: 304, y: 176.3000030517578 },\n      { x: 253, y: 171.3000030517578 },\n      { x: 181, y: 155.3000030517578 },\n      { x: 158, y: 215.3000030517578 },\n      { x: 159, y: 337.3000030517578 },\n      { x: 151, y: 289.3000030517578 },\n    ],\n    fill: \"rgba(240, 240, 240, 0.9)\",\n  },\n  {\n    points: [\n      { x: 249, y: 410.6333312988281 },\n      { x: 262, y: 412.066650390625 },\n      { x: 277, y: 409.6333312988281 },\n      { x: 270, y: 429.01666259765625 },\n      { x: 263, y: 433.6333312988281 },\n      { x: 254, y: 428.01666259765625 },\n      { x: 249, y: 410.6333312988281 },\n    ],\n    fill: \"rgba(244, 244, 244, 0.9)\",\n  },\n  {\n    points: [\n      { x: 215, y: 399.3833312988281 },\n      { x: 223, y: 387.3833312988281 },\n      { x: 254, y: 380.3833312988281 },\n      { x: 262, y: 377.3833312988281 },\n      { x: 268, y: 377.3833312988281 },\n      { x: 272, y: 380.3833312988281 },\n      { x: 280, y: 381.3833312988281 },\n      { x: 302, y: 385.3833312988281 },\n      { x: 312, y: 390.3833312988281 },\n      { x: 315, y: 397.3833312988281 },\n      { x: 317, y: 398.3833312988281 },\n      { x: 322, y: 389.3833312988281 },\n      { x: 313, y: 375.3833312988281 },\n      { x: 285, y: 365.3833312988281 },\n      { x: 279, y: 361.3833312988281 },\n      { x: 277, y: 359.3833312988281 },\n      { x: 269, y: 361.3833312988281 },\n      { x: 265, y: 361.3833312988281 },\n      { x: 260, y: 359.3833312988281 },\n      { x: 255, y: 358.3833312988281 },\n      { x: 251, y: 359.3833312988281 },\n      { x: 243, y: 365.3833312988281 },\n      { x: 229, y: 367.3833312988281 },\n      { x: 218, y: 371.3833312988281 },\n      { x: 210, y: 378.3833312988281 },\n      { x: 205, y: 390.3833312988281 },\n      { x: 208, y: 395.3833312988281 },\n      { x: 215, y: 399.3833312988281 },\n    ],\n    fill: \"rgba(240, 240, 240, 0.9)\",\n  },\n  {\n    points: [\n      { x: 276, y: 264.1000061035156 },\n      { x: 297, y: 259.1000061035156 },\n      { x: 316, y: 252.6999969482422 },\n      { x: 338, y: 253.10000610351562 },\n      { x: 355, y: 263.1000061035156 },\n      { x: 341, y: 244.10000610351562 },\n      { x: 329, y: 241.6999969482422 },\n      { x: 316, y: 242.10000610351562 },\n      { x: 292, y: 244.10000610351562 },\n      { x: 280, y: 249.10000610351562 },\n      { x: 276, y: 264.1000061035156 },\n    ],\n    fill: \"rgba(242, 242, 242, 0.9)\",\n  },\n  {\n    points: [\n      { x: 167, y: 270.1000061035156 },\n      { x: 185, y: 259.1000061035156 },\n      { x: 198, y: 256.6999969482422 },\n      { x: 216, y: 261.1000061035156 },\n      { x: 238, y: 267.1000061035156 },\n      { x: 238, y: 253.10000610351562 },\n      { x: 226, y: 247.6999969482422 },\n      { x: 214, y: 246.10000610351562 },\n      { x: 196, y: 245.6999969482422 },\n      { x: 180, y: 248.10000610351562 },\n      { x: 171, y: 255.10000610351562 },\n      { x: 167, y: 270.1000061035156 },\n    ],\n    fill: \"rgba(252, 252, 252, 0.9)\",\n  },\n  {\n    points: [\n      { x: 284, y: 284.3000030517578 },\n      { x: 295, y: 275.3000030517578 },\n      { x: 307, y: 273.3000030517578 },\n      { x: 323, y: 273.3000030517578 },\n      { x: 329, y: 275.9499969482422 },\n      { x: 338, y: 282.3000030517578 },\n      { x: 330.5, y: 278.91666412353516 },\n      { x: 328.5, y: 277.6500015258789 },\n      { x: 326, y: 276.3000030517578 },\n      { x: 311, y: 273.3000030517578 },\n      { x: 304, y: 274.3000030517578 },\n      { x: 297, y: 276.3000030517578 },\n      { x: 286, y: 284.3000030517578 },\n      { x: 284, y: 284.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 282, y: 284.3000030517578 },\n      { x: 294, y: 287.3000030517578 },\n      { x: 302, y: 290.3000030517578 },\n      { x: 311, y: 290.3000030517578 },\n      { x: 319, y: 288.3000030517578 },\n      { x: 328, y: 283.3000030517578 },\n      { x: 336, y: 282.3000030517578 },\n      { x: 330, y: 284.3000030517578 },\n      { x: 326, y: 286.3000030517578 },\n      { x: 320, y: 290.3000030517578 },\n      { x: 316, y: 291.3000030517578 },\n      { x: 303, y: 292.3000030517578 },\n      { x: 294, y: 289.3000030517578 },\n      { x: 282, y: 284.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 176, y: 287.3000030517578 },\n      { x: 186, y: 282.3000030517578 },\n      { x: 190, y: 280.3000030517578 },\n      { x: 195, y: 278.3000030517578 },\n      { x: 208, y: 278.3000030517578 },\n      { x: 211, y: 279.31666564941406 },\n      { x: 215, y: 281.3000030517578 },\n      { x: 225, y: 287.3000030517578 },\n      { x: 230, y: 289.3000030517578 },\n      { x: 234, y: 290.3000030517578 },\n      { x: 234, y: 289.3000030517578 },\n      { x: 229, y: 287.3000030517578 },\n      { x: 222, y: 284.3000030517578 },\n      { x: 215, y: 279.3000030517578 },\n      { x: 209, y: 276.3000030517578 },\n      { x: 201, y: 276.3000030517578 },\n      { x: 194, y: 276.3000030517578 },\n      { x: 184, y: 280.3000030517578 },\n      { x: 182, y: 282.3000030517578 },\n      { x: 176, y: 287.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 229, y: 289.3000030517578 },\n      { x: 219, y: 292.3000030517578 },\n      { x: 214, y: 295.3000030517578 },\n      { x: 207, y: 295.8999938964844 },\n      { x: 200, y: 296.3000030517578 },\n      { x: 186, y: 294.6999969482422 },\n      { x: 182, y: 291.3000030517578 },\n      { x: 177, y: 287.3000030517578 },\n      { x: 183, y: 291.3000030517578 },\n      { x: 187, y: 293.3000030517578 },\n      { x: 201, y: 294.3000030517578 },\n      { x: 212, y: 294.3000030517578 },\n      { x: 219, y: 291.3000030517578 },\n      { x: 229, y: 289.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 197, y: 281.3000030517578 },\n      { x: 196, y: 285 },\n      { x: 196, y: 289.3000030517578 },\n      { x: 198, y: 292.3000030517578 },\n      { x: 203, y: 294.3000030517578 },\n      { x: 203, y: 294.1500015258789 },\n      { x: 209, y: 293 },\n      { x: 212, y: 291 },\n      { x: 213, y: 287.3000030517578 },\n      { x: 212, y: 283.3000030517578 },\n      { x: 207, y: 280.3000030517578 },\n      { x: 203, y: 279.3000030517578 },\n      { x: 199, y: 280.3000030517578 },\n      { x: 197, y: 281.3000030517578 },\n    ],\n    fill: \"rgba(233, 233, 233, 1)\",\n  },\n  {\n    points: [\n      { x: 305, y: 277.3000030517578 },\n      { x: 305, y: 284.3000030517578 },\n      { x: 308, y: 288.3000030517578 },\n      { x: 314, y: 289.3000030517578 },\n      { x: 321, y: 285.3000030517578 },\n      { x: 321, y: 280.3000030517578 },\n      { x: 318, y: 276.3000030517578 },\n      { x: 313, y: 274.3000030517578 },\n      { x: 308, y: 275.3000030517578 },\n      { x: 305, y: 277.3000030517578 },\n    ],\n    fill: \"rgba(233, 233, 233, 0.9)\",\n  },\n  {\n    points: [\n      { x: 231, y: 393.29998779296875 },\n      { x: 253, y: 388.29998779296875 },\n      { x: 261, y: 387.29998779296875 },\n      { x: 265, y: 387.3000030517578 },\n      { x: 268, y: 387.29998779296875 },\n      { x: 277, y: 388.29998779296875 },\n      { x: 286, y: 390.29998779296875 },\n      { x: 294, y: 393.29998779296875 },\n      { x: 278, y: 391.29998779296875 },\n      { x: 273, y: 391.29998779296875 },\n      { x: 263, y: 391.29998779296875 },\n      { x: 254, y: 391.29998779296875 },\n      { x: 247, y: 392.29998779296875 },\n      { x: 239, y: 394.29998779296875 },\n      { x: 231, y: 393.29998779296875 },\n    ],\n  },\n  {\n    points: [\n      { x: 231, y: 391.4499969482422 },\n      { x: 240, y: 399.4499969482422 },\n      { x: 246, y: 400.3000030517578 },\n      { x: 252, y: 400.4499969482422 },\n      { x: 276, y: 400.4499969482422 },\n      { x: 285, y: 396.4499969482422 },\n      { x: 290, y: 394.21665954589844 },\n      { x: 294, y: 392.4499969482422 },\n      { x: 281, y: 395.4499969482422 },\n      { x: 277, y: 397.4499969482422 },\n      { x: 267, y: 398.4499969482422 },\n      { x: 252, y: 397.4499969482422 },\n      { x: 242, y: 397.4499969482422 },\n      { x: 231, y: 391.4499969482422 },\n    ],\n    fill: \"rgba(252, 252, 252, 0.9)\",\n  },\n];\n\nconst reflect = (p, p0, p1) => {\n  // https://gist.github.com/balint42/b99934b2a6990a53e14b\n  let dx, dy, a, b, x, y;\n  dx = p1.x - p0.x;\n  dy = p1.y - p0.y;\n  a = (dx * dx - dy * dy) / (dx * dx + dy * dy);\n  b = (2 * dx * dy) / (dx * dx + dy * dy);\n  x = Math.round(a * (p.x - p0.x) + b * (p.y - p0.y) + p0.x);\n  y = Math.round(b * (p.x - p0.x) - a * (p.y - p0.y) + p0.y);\n  return { x, y };\n};\n\nconst DRAW_STATE_READY = 1;\nconst DRAW_STATE_START = 2;\nconst DRAW_STATE_MOVE_SEGMENT = 3;\nconst DRAW_STATE_INSERT_SEGMENT = 4;\nconst DRAW_STATE_SELECTION = 5;\nconst DRAW_STATE_MOVE_SHAPE = 6;\nconst DRAW_STATE_ON_SHAPE = 7;\nconst DRAW_STATE_ON_SEGMENT = 8;\nconst DRAW_STATE_REMOVE_SEGMENT = 9;\nconst DRAW_STATE_REMOVE_SHAPE = 10;\nconst DRAW_STATE_SELECTION_STARTED = 11;\nconst DRAW_STATE_ON_SEGMENT_SELECTION = 12;\nconst DRAW_STATE_MOVE_SELECTED_SEGMENTS = 13;\nconst DRAW_STATE_SELECTION_SET = 14;\n\nconst SHAPE_CLOSE_DISTANCE = 2;\nconst SEGMENT_CIRCLE_RADIUS = 2;\n\nconst DRAW_STATE_LABELS = {\n  [DRAW_STATE_READY]: \"Click on canvas and drag it to start drawing\",\n  [DRAW_STATE_START]: \"Click on another point to connect with the latest\",\n  [DRAW_STATE_MOVE_SEGMENT]: \"Moving a segment of a shape\",\n  [DRAW_STATE_INSERT_SEGMENT]:\n    \"Click on the a point on the line to insert a segment\",\n  [DRAW_STATE_SELECTION]: \"Select points to move\",\n  [DRAW_STATE_ON_SHAPE]: \"Drag the shape to move\",\n  [DRAW_STATE_MOVE_SHAPE]: \"Moving a shape\",\n  [DRAW_STATE_ON_SEGMENT]: \"Drag the segment to move it\",\n  [DRAW_STATE_REMOVE_SEGMENT]: \"Click on the segment to remove\",\n  [DRAW_STATE_REMOVE_SHAPE]: \"Click on the shape to remove\",\n  [DRAW_STATE_SELECTION_STARTED]: \"Selection started\",\n  [DRAW_STATE_ON_SEGMENT_SELECTION]: \"Move selected segments\",\n  [DRAW_STATE_MOVE_SELECTED_SEGMENTS]: \"Moving selected segments\",\n  [DRAW_STATE_SELECTION_SET]: \"Selection set\",\n};\n\nfunction handleContextMenu(\n  drawState,\n  showContextMenuSetterFunction,\n  contextMenuPositionSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n) {\n  return (event) => {\n    event.preventDefault();\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    const cursorPosition = {\n      x: event.clientX - clientRect.left,\n      y: event.clientY - clientRect.top,\n    };\n    contextMenuPositionSetterFunction({\n      x: cursorPosition.x + clientRect.left,\n      y: cursorPosition.y + clientRect.top,\n    });\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        isControlPoint: true,\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    } else {\n      showContextMenuSetterFunction(true);\n    }\n  };\n}\n\nfunction handleMouseDown(\n  drawState,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  selectedShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  cursorPosition,\n  mouseDownCursorPositionSetterFunction,\n  mouseDownShapePointsSetterFunction,\n  selectionRectangle,\n  setMouseDownSelectionRectangle,\n  selectedPointIndexesSetterFunction,\n  contextMenuSetterFunction,\n  isMouseDownSetterFunction\n) {\n  return (event) => {\n    isMouseDownSetterFunction(true);\n    contextMenuSetterFunction(false);\n    if (event.buttons === 2) {\n      event.preventDefault();\n      return false;\n    }\n\n    if (drawState === DRAW_STATE_READY) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n    }\n\n    if (drawState === DRAW_STATE_ON_SEGMENT) {\n      const { shapeIndex, pointIndex } = event.target.dataset;\n      currentShapeIndexSetterFunction(Number(shapeIndex));\n      selectedShapeIndexSetterFunction(Number(shapeIndex));\n      currentSegmentIndexSetterFunction(Number(pointIndex));\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_SET) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      const isEmptySpace =\n        !event.target.dataset.isSegmentLine &&\n        !event.target.dataset.isSegment &&\n        !event.target.dataset.isPolygon;\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      if (isEmptySpace) {\n        drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n      } else {\n        const flatPoints = shapes.map((shape) => shape.points).flat();\n        mouseDownShapePointsSetterFunction(flatPoints);\n        const selectedPointIndexes = flatPoints\n          .map((point, index) =>\n            isPointInRectangle(point, selectionRectangle) ? { index } : null\n          )\n          .filter(Boolean)\n          .map(({ index }) => index);\n        setMouseDownSelectionRectangle({\n          x: selectionRectangle.x,\n          y: selectionRectangle.y,\n        });\n        selectedPointIndexesSetterFunction(selectedPointIndexes);\n        drawStateSetterFunction(DRAW_STATE_MOVE_SELECTED_SEGMENTS);\n      }\n    }\n\n    if (drawState === DRAW_STATE_ON_SHAPE) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      selectedShapeIndexSetterFunction(currentShapeIndex);\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      mouseDownShapePointsSetterFunction(shapes[currentShapeIndex].points);\n      drawStateSetterFunction(DRAW_STATE_MOVE_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n  };\n}\n\nfunction findLastOpenShapeIndex(shapes) {\n  return shapes.findIndex(({ points }) => {\n    const last = points[points.length - 1];\n    const first = points[0];\n    return points.length < 3 || !(first.x === last.x && first.y === last.y);\n  });\n}\n\nfunction continueDrawing(\n  cursorPosition,\n  drawStateSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawState,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  mouseDownCursorPosition,\n  selectionRectangleSetterFunction,\n  currentFillColor,\n  isMouseDownSetterFunction\n) {\n  return (event) => {\n    isMouseDownSetterFunction(false);\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      drawStateSetterFunction(DRAW_STATE_READY);\n      currentShapeIndexSetterFunction(-1);\n      currentSegmentIndexSetterFunction(-1);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_STARTED) {\n      const selectionRectangle = calculateSelectionRectangle(\n        mouseDownCursorPosition,\n        cursorPosition\n      );\n      selectionRectangleSetterFunction(selectionRectangle);\n      let _hasSelection;\n      for (const shape of shapes) {\n        innerLoop: for (const point of shape.points) {\n          _hasSelection = isPointInRectangle(point, selectionRectangle);\n          if (_hasSelection) {\n            break innerLoop;\n          }\n        }\n        if (_hasSelection) {\n          break;\n        }\n      }\n      drawStateSetterFunction(\n        _hasSelection ? DRAW_STATE_SELECTION_SET : DRAW_STATE_READY\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      drawStateSetterFunction(DRAW_STATE_SELECTION_SET);\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      drawStateSetterFunction(DRAW_STATE_ON_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.filter((_, index) => index !== currentShapeIndex)\n      );\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.filter(\n            (point, pointIndex) =>\n              !(shapeIndex === currentShapeIndex) ||\n              (shapeIndex === currentShapeIndex &&\n                currentSegmentIndex !== pointIndex)\n          ),\n        }))\n      );\n    }\n\n    const selectionIsValid =\n      mouseDownCursorPosition.x !== cursorPosition.x &&\n      mouseDownCursorPosition.y !== cursorPosition.y;\n\n    const isEmptySpace =\n      !event.target.dataset.isSegmentLine &&\n      !event.target.dataset.isSegment &&\n      !event.target.dataset.isPolygon;\n\n    if (drawState === DRAW_STATE_START || (!selectionIsValid && isEmptySpace)) {\n      const canvasBoundingClientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      if (\n        event.clientX < canvasBoundingClientRect.left ||\n        event.clientX > canvasBoundingClientRect.right ||\n        event.clientY < canvasBoundingClientRect.top ||\n        event.clientY > canvasBoundingClientRect.bottom\n      ) {\n        return;\n      }\n\n      const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n\n      let newShapes;\n      let newAppState = DRAW_STATE_START;\n      if (lastOpenShapeIndex === -1) {\n        newShapes = [...shapes, { points: [cursorPosition] }];\n      } else {\n        newShapes = shapes.map((shape, index) => {\n          let newShape;\n          if (index === lastOpenShapeIndex) {\n            let cursorPositionOrClosingPoint;\n\n            if (\n              distance(\n                cursorPosition.x,\n                cursorPosition.y,\n                shape.points[0].x,\n                shape.points[0].y\n              ) < SHAPE_CLOSE_DISTANCE\n            ) {\n              cursorPositionOrClosingPoint = shape.points[0];\n              newAppState = DRAW_STATE_READY;\n            } else {\n              cursorPositionOrClosingPoint = cursorPosition;\n            }\n\n            newShape = {\n              fill: currentFillColor,\n              points: [...shape.points, cursorPositionOrClosingPoint],\n            };\n          } else {\n            newShape = shape;\n          }\n\n          return newShape;\n        });\n      }\n\n      drawStateSetterFunction(newAppState);\n      shapesSetterFunction(newShapes);\n    }\n  };\n}\n\nfunction handleMouseMove(\n  cursorPositionSetterFunction,\n  drawState,\n  currentShapeIndex,\n  currentSegmentIndex,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  mouseDownCursorPosition,\n  mouseDownShapePoints,\n  keyStates,\n  selectionRectangle,\n  setSelectionRectangle,\n  mouseDownSelectionRectangle,\n  selectedPointIndexes,\n  isMouseDown\n) {\n  return ({ clientX, clientY, target }) => {\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    let cursorPosition = {\n      x: clientX - clientRect.left,\n      y: clientY - clientRect.top,\n    };\n\n    cursorPositionSetterFunction(cursorPosition);\n\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      console.log(cursorPosition, currentShapeIndex, currentSegmentIndex);\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            currentShapeIndex === shapeIndex &&\n            (currentSegmentIndex === pointIndex ||\n              (currentSegmentIndex === shape.points.length - 1 &&\n                pointIndex === 0))\n              ? {...point, ...cursorPosition}\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_START) {\n      if (isMouseDown) {\n        const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n        const lastOpenShape = shapes[lastOpenShapeIndex];\n        const isLastDrawnPointIsControlPoint =\n          lastOpenShape.points.length > 2 &&\n          Boolean(\n            lastOpenShape.points[lastOpenShape.points.length - 1].isControlPoint\n          );\n        let controlPointMutation;\n        if (isLastDrawnPointIsControlPoint) {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: shape.points.map((point, index) =>\n                  index === shape.points.length - 1\n                    ? { ...point, ...cursorPosition }\n                    : point\n                ),\n              };\n            } else {\n              return shape;\n            }\n          });\n        } else {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: [\n                  ...shape.points,\n                  { ...cursorPosition },\n                  { isControlPoint: true, ...cursorPosition },\n                ],\n              };\n            } else {\n              return shape;\n            }\n          });\n        }\n        shapesSetterFunction(controlPointMutation);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      let _shapeIndex = 0;\n      setSelectionRectangle({\n        ...selectionRectangle,\n        x:\n          mouseDownSelectionRectangle.x -\n          (mouseDownCursorPosition.x - cursorPosition.x),\n        y:\n          mouseDownSelectionRectangle.y -\n          (mouseDownCursorPosition.y - cursorPosition.y),\n      });\n      shapesSetterFunction(\n        shapes.map((shape) => ({\n          ...shape,\n          points: shape.points.map((point) => {\n            const cachedPointIndex = _shapeIndex;\n            _shapeIndex++;\n            return selectedPointIndexes.indexOf(cachedPointIndex) > -1\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[cachedPointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[cachedPointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point;\n          }),\n        }))\n      );\n    }\n\n    if (\n      drawState === DRAW_STATE_READY ||\n      drawState === DRAW_STATE_ON_SHAPE ||\n      drawState === DRAW_STATE_ON_SEGMENT ||\n      drawState === DRAW_STATE_ON_SEGMENT_SELECTION ||\n      drawState === DRAW_STATE_REMOVE_SHAPE ||\n      drawState === DRAW_STATE_REMOVE_SEGMENT\n    ) {\n      const {\n        isSegmentLine,\n        isSegment,\n        isPolygon,\n        shapeIndex,\n        segmentIndex,\n        pointIndex,\n      } = target.dataset;\n      // todo: merge pointIndex and segmentIndex\n      if (isSegmentLine) {\n        drawStateSetterFunction(DRAW_STATE_INSERT_SEGMENT);\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(segmentIndex));\n      } else if (isPolygon) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SHAPE\n            : DRAW_STATE_ON_SHAPE\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n      } else if (isSegment) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SEGMENT\n            : DRAW_STATE_ON_SEGMENT\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(pointIndex));\n      } else {\n        drawStateSetterFunction(DRAW_STATE_READY);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            shapeIndex === currentShapeIndex\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[pointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[pointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const midpointDistance = distance(\n        midpoint.x,\n        midpoint.y,\n        cursorPosition.x,\n        cursorPosition.y\n      );\n      if (\n        midpointDistance > 1 ||\n        midpoint.y > Math.max(head.y, point.y) ||\n        midpoint.y < Math.min(head.y, point.y) ||\n        midpoint.x > Math.max(head.x, point.x) ||\n        midpoint.x < Math.min(head.x, point.x)\n      ) {\n        drawStateSetterFunction(DRAW_STATE_READY);\n        currentShapeIndexSetterFunction(-1);\n        currentSegmentIndexSetterFunction(-1);\n      }\n    }\n  };\n}\n\nlet replaceStateTimeoutId;\n\nfunction useHashedState(name, defaults) {\n  const [state, setState] = useState(defaults);\n  return [\n    state,\n    (value, callback = () => {}) => {\n      if (replaceStateTimeoutId) {\n        clearTimeout(replaceStateTimeoutId);\n      }\n\n      replaceStateTimeoutId = setTimeout(() => {\n        const [_, ...hashStates] = (\n          window.location.href.indexOf(\"#\") > -1\n            ? window.location.href.split(\"#\")\n            : [null]\n        ).filter(Boolean);\n\n        let found = false;\n        const builtHashStates = hashStates\n          .reduce((prev, current) => {\n            let [hashName, hashValue] = current.split(\"=\");\n            if (name === hashName) {\n              found = true;\n              hashValue = JSON.stringify(value);\n              hashName = name;\n            }\n\n            return [...prev, `${hashName}=${hashValue}`];\n          }, [])\n          .join(\"#\");\n\n        if (!found) {\n          window.history.pushState(\n            null,\n            null,\n            `${\n              builtHashStates && `#${builtHashStates}`\n            }#${name}=${JSON.stringify(value)}`\n          );\n        } else {\n          window.history.pushState(null, null, `#${builtHashStates}`);\n        }\n      }, 50);\n      setState(value);\n    },\n    () => {\n      const [head, fragment] = window.location.href.split(`#${name}=`);\n      if (fragment) {\n        const [value] = fragment.split(\"#\");\n        setState(JSON.parse(decodeURIComponent(value)));\n      }\n    },\n  ];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const a = x1 - x2;\n  const b = y1 - y2;\n  return Math.sqrt(a * a + b * b);\n}\n\nfunction handleKeyDown(keyStatesSetterFunction) {\n  return (event) => {\n    let keyStateUpdates = {};\n    event.shiftKey && (keyStateUpdates[\"isShiftPressed\"] = true);\n    event.ctrlKey && (keyStateUpdates[\"isCtrlPressed\"] = true);\n    keyStatesSetterFunction(keyStateUpdates);\n  };\n}\n\nfunction handleKeyUp(keyStatesSetterFunction) {\n  return (_) => {\n    keyStatesSetterFunction({ isCtrlPressed: false, isShiftPressed: false });\n  };\n}\n\nfunction calculateSelectionRectangle(mouseDownCursorPosition, cursorPosition) {\n  const minX = Math.min(mouseDownCursorPosition.x, cursorPosition.x);\n  const minY = Math.min(mouseDownCursorPosition.y, cursorPosition.y);\n  const maxX = Math.max(mouseDownCursorPosition.x, cursorPosition.x);\n  const maxY = Math.max(mouseDownCursorPosition.y, cursorPosition.y);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nfunction isPointInRectangle(point, rectangle) {\n  return (\n    point.x > rectangle.x &&\n    point.x < rectangle.x + rectangle.width &&\n    point.y > rectangle.y &&\n    point.y < rectangle.y + rectangle.height\n  );\n}\n\nfunction updateCurrentShapeFill(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, fill: pickedColor } : shape\n    )\n  );\n}\n\nfunction updateCurrentShapeStroke(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, stroke: pickedColor } : shape\n    )\n  );\n}\n\nfunction parseRGBA(color) {\n  if (typeof color !== \"string\") {\n    return color;\n  }\n\n  const commaSaparatedString = color.split(\"(\")[1].split(\")\")[0];\n  const parts = commaSaparatedString.split(\",\");\n  const [r, g, b, a] = parts;\n  return {\n    r: Number(r),\n    g: Number(g),\n    b: Number(b),\n    a: parseFloat(a),\n  };\n}\n\nfunction buildSVGPath(points, divider = 1) {\n  let svgString = \"\";\n  points.forEach(({ x, y, isControlPoint }, index) => {\n    const isLast = index === points.length - 1;\n    const isFirst = index === 0;\n\n    if (isFirst) {\n      svgString = `M ${x / divider},${y / divider}`;\n    }\n\n    if (isLast) {\n      svgString = `${svgString} Z ${points[0].x / divider},${\n        points[0].y / divider\n      }`;\n      return;\n    }\n\n    if (isControlPoint) {\n      svgString = `${svgString} ${x / divider},${y / divider} `;\n    } else if (points[index + 1].isControlPoint) {\n      svgString = `${svgString} Q ${x / divider},${y / divider} `;\n    } else {\n      svgString = `${svgString} L ${x / divider},${y / divider} `;\n    }\n  });\n  return svgString;\n}\n\nfunction App() {\n  const [drawState, setDrawState] = useState(DRAW_STATE_READY);\n  const [cursorPosition, setCursorPosition] = useState({ x: -1, y: -1 });\n  const [mouseDownCursorPosition, setMouseDownCursorPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [mouseDownShapePoints, setMouseDownShapePoints] = useState([]);\n  const [currentShapeIndex, setCurrentShapeIndex] = useState(-1);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(-1);\n  const [currentSegmentIndex, setCurrentSegmentIndex] = useState(-1);\n  const [shapes, setShapes, refreshShapesState] = useHashedState(\n    \"shapes\",\n    INITIAL_SHAPES\n  );\n  const [keyStates, setKeyStates] = useState({\n    isCtrlPressed: false,\n    isShiftPressed: false,\n  });\n  const [selectionRectangle, setSelectionRectangle] = useState(null);\n  const [mouseDownSelectionRectangle, setMouseDownSelectionRectangle] =\n    useState({ x: -1, y: -1 });\n  const [selectedPointIndexes, setSelectedPointIndexes] = useState([]);\n  const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n  const previews = [256, 128];\n  const [currentFillColor, setCurrentFillColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [currentStrokeColor, setCurrentStrokeColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [showFillColorPicker, setFillColorPicker] = useState(false);\n  const [showStrokeColorPicker, setShowStrokeColorPicker] = useState(false);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  useEffect(() => {\n    refreshShapesState();\n    window.onpopstate = refreshShapesState;\n    window.onhashchange = refreshShapesState;\n  }, []);\n  useEffect(() => {\n    const selectedShape = shapes[selectedShapeIndex];\n    if (!selectedShape) {\n      return;\n    }\n    const { stroke, fill } = selectedShape;\n    fill && setCurrentFillColor(parseRGBA(fill));\n    stroke && setCurrentStrokeColor(parseRGBA(stroke));\n  }, [selectedShapeIndex]);\n\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown(setKeyStates)}\n      onKeyUp={handleKeyUp(setKeyStates)}\n      className=\"app-container\"\n      onContextMenu={handleContextMenu(\n        drawState,\n        setShowContextMenu,\n        setContextMenuPosition,\n        shapes,\n        setShapes,\n        setDrawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n      )}\n      onMouseDown={handleMouseDown(\n        drawState,\n        setDrawState,\n        setCurrentShapeIndex,\n        setSelectedShapeIndex,\n        setCurrentSegmentIndex,\n        shapes,\n        setShapes,\n        currentShapeIndex,\n        currentSegmentIndex,\n        cursorPosition,\n        setMouseDownCursorPosition,\n        setMouseDownShapePoints,\n        selectionRectangle,\n        setMouseDownSelectionRectangle,\n        setSelectedPointIndexes,\n        setShowContextMenu,\n        setIsMouseDown\n      )}\n      onMouseMove={handleMouseMove(\n        setCursorPosition,\n        drawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n        shapes,\n        setShapes,\n        setDrawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        mouseDownCursorPosition,\n        mouseDownShapePoints,\n        keyStates,\n        selectionRectangle,\n        setSelectionRectangle,\n        mouseDownSelectionRectangle,\n        selectedPointIndexes,\n        isMouseDown\n      )}\n      onMouseUp={continueDrawing(\n        cursorPosition,\n        setDrawState,\n        shapes,\n        setShapes,\n        drawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        currentShapeIndex,\n        currentSegmentIndex,\n        mouseDownCursorPosition,\n        setSelectionRectangle,\n        currentFillColor,\n        setIsMouseDown\n      )}\n    >\n      <h1\n        style={{\n          float: \"left\",\n        }}\n      >\n        Hello, my name is Fatih.\n      </h1>\n      <div\n        style={{\n          float: \"right\",\n        }}\n        className={\"header-tools\"}\n      >\n        <span\n          style={{\n            backgroundColor: `rgba(${currentFillColor.r}, ${currentFillColor.g}, ${currentFillColor.b}, ${currentFillColor.a})`,\n          }}\n          className={\"color-picker-preview\"}\n          onClick={() => {\n            setFillColorPicker(!showFillColorPicker);\n          }}\n        ></span>\n        <span className={\"color-picker-label\"}>Fill</span>\n        {showFillColorPicker && (\n          <div\n            style={{\n              position: \"absolute\",\n            }}\n          >\n            <ColorPicker\n              color={currentFillColor}\n              onChange={(color) => {\n                const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                setCurrentFillColor({\n                  r: color.rgb.r,\n                  g: color.rgb.g,\n                  b: color.rgb.b,\n                  a: color.rgb.a,\n                });\n                updateCurrentShapeFill(\n                  shapes,\n                  setShapes,\n                  selectedShapeIndex,\n                  pickedColor\n                );\n              }}\n            />\n          </div>\n        )}\n        <span\n          style={{\n            marginLeft: 20,\n            backgroundColor: `rgba(${currentStrokeColor.r}, ${currentStrokeColor.g}, ${currentStrokeColor.b}, ${currentStrokeColor.a})`,\n          }}\n          className={\"color-picker-preview\"}\n          onClick={() => {\n            setShowStrokeColorPicker(!showStrokeColorPicker);\n          }}\n        ></span>\n        <span className={\"color-picker-label\"}>Stroke</span>\n        {showStrokeColorPicker && (\n          <div\n            style={{\n              position: \"absolute\",\n            }}\n          >\n            <ColorPicker\n              color={currentStrokeColor}\n              onChange={(color) => {\n                const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                setCurrentStrokeColor({\n                  r: color.rgb.r,\n                  g: color.rgb.g,\n                  b: color.rgb.b,\n                  a: color.rgb.a,\n                });\n                updateCurrentShapeStroke(\n                  shapes,\n                  setShapes,\n                  selectedShapeIndex,\n                  pickedColor\n                );\n              }}\n            />\n          </div>\n        )}\n      </div>\n      {keyStates.isShiftPressed && \"shift\"}\n      {keyStates.isCtrlPressed && \"ctrl\"}\n      <div className=\"editor\">\n        <div className={\"canvas-wrapper\"}>\n          <h3>\n            #Canvas{\" \"}\n            <span className={\"drawing-info\"}>\n              {DRAW_STATE_LABELS[drawState]}\n            </span>\n          </h3>\n          {showContextMenu && (\n            <div\n              className={\"context-menu\"}\n              style={{\n                top: contextMenuPosition.y,\n                left: contextMenuPosition.x,\n              }}\n            >\n              context menu\n            </div>\n          )}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"canvas\"\n            width={512}\n            height={512}\n          >\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`y-${index}`}\n                x1={0}\n                x2={512}\n                className={\"guideline\"}\n                y1={index * 8}\n                y2={index * 8}\n              />\n            ))}\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`x-${index}`}\n                y1={0}\n                y2={512}\n                className={\"guideline\"}\n                x1={index * 8}\n                x2={index * 8}\n              />\n            ))}\n            <line\n              x1={0}\n              x2={512}\n              style={{ stroke: \"blue\" }}\n              y1={32 * 8}\n              y2={32 * 8}\n            />\n            <line\n              y1={0}\n              y2={512}\n              style={{ stroke: \"blue\" }}\n              x1={32 * 8}\n              x2={32 * 8}\n            />\n            {shapes.map((shape, index) => {\n              const shapeWithCursor = [...shape.points, cursorPosition];\n              const pointsAsSVGString = buildSVGPath(shapeWithCursor);\n\n              return (\n                <g key={index}>\n                  <path\n                    d={pointsAsSVGString}\n                    data-is-polygon={true}\n                    data-shape-index={index}\n                    fill={\"rgba(196, 196, 196, 0.5)\"}\n                  />\n                  {(() => {\n                    let [head, ...tail] =\n                      drawState === DRAW_STATE_START &&\n                      lastOpenShapeIndex === index\n                        ? shapeWithCursor\n                        : shape.points;\n                    const onClosingPoint =\n                      distance(\n                        head.x,\n                        head.y,\n                        cursorPosition.x,\n                        cursorPosition.y\n                      ) > SHAPE_CLOSE_DISTANCE;\n                    const lines = [\n                      <circle\n                        data-shape-index={index}\n                        data-point-index={0}\n                        className={\"segment\"}\n                        data-is-segment={true}\n                        data-is-closing-point={true}\n                        key={`closing-point-${index}`}\n                        cx={head.x}\n                        cy={head.y}\n                        fill={onClosingPoint ? \"orange\" : \"blue\"}\n                        r={SEGMENT_CIRCLE_RADIUS}\n                      />,\n                    ];\n                    let keyIndex = 0;\n                    for (const point of tail) {\n                      keyIndex++;\n                      lines.push(\n                        <g key={`segments-${index}-${keyIndex}`}>\n                          {drawState === DRAW_STATE_INSERT_SEGMENT &&\n                            currentShapeIndex === index &&\n                            currentSegmentIndex === keyIndex && (\n                              <circle\n                                className={\"segment\"}\n                                data-is-segment={true}\n                                cx={100}\n                                cy={200}\n                                fill={\"black\"}\n                                r={SEGMENT_CIRCLE_RADIUS}\n                                {...(() => {\n                                  const reflection = reflect(\n                                    cursorPosition,\n                                    head,\n                                    point\n                                  );\n                                  return {\n                                    cx: (reflection.x + cursorPosition.x) / 2,\n                                    cy: (reflection.y + cursorPosition.y) / 2,\n                                  };\n                                })()}\n                              />\n                            )}\n                          <circle\n                            data-shape-index={index}\n                            data-point-index={keyIndex}\n                            className={\"segment\"}\n                            data-is-segment={true}\n                            cx={point.x}\n                            cy={point.y}\n                            fill={\n                              (() => {\n                                let isPointInSelectionRectangle;\n\n                                if (drawState === DRAW_STATE_SELECTION_SET) {\n                                  isPointInSelectionRectangle =\n                                    isPointInRectangle(\n                                      point,\n                                      selectionRectangle\n                                    );\n                                } else if (\n                                  drawState ===\n                                  DRAW_STATE_MOVE_SELECTED_SEGMENTS\n                                ) {\n                                  let _shapeIndex = 0;\n                                  let _pointIndex = 0;\n                                  for (shape of shapes) {\n                                    if (index === _shapeIndex) {\n                                      break;\n                                    }\n                                    _shapeIndex++;\n                                    _pointIndex += shape.points.length;\n                                  }\n                                  return (\n                                    selectedPointIndexes.indexOf(\n                                      _pointIndex + keyIndex\n                                    ) > -1\n                                  );\n                                } else {\n                                  isPointInSelectionRectangle = false;\n                                }\n\n                                const isPointInCurrentSelection =\n                                  drawState === DRAW_STATE_SELECTION_STARTED &&\n                                  isPointInRectangle(\n                                    point,\n                                    calculateSelectionRectangle(\n                                      mouseDownCursorPosition,\n                                      cursorPosition\n                                    )\n                                  );\n\n                                return (\n                                  isPointInSelectionRectangle ||\n                                  isPointInCurrentSelection\n                                );\n                              })()\n                                ? \"blue\"\n                                : \"silver\"\n                            }\n                            r={SEGMENT_CIRCLE_RADIUS}\n                          />\n                          <line\n                            stroke={\"black\"}\n                            x1={head.x}\n                            y1={head.y}\n                            x2={point.x}\n                            y2={point.y}\n                            data-is-segment-line={true}\n                            data-shape-index={index}\n                            data-segment-index={keyIndex}\n                          />\n                        </g>\n                      );\n                      head = point;\n                    }\n                    return lines;\n                  })()}\n                </g>\n              );\n            })}\n            {drawState === DRAW_STATE_SELECTION_STARTED &&\n              (() => {\n                const { x, y, width, height } = calculateSelectionRectangle(\n                  mouseDownCursorPosition,\n                  cursorPosition\n                );\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    className={\"selection-rectangle\"}\n                  ></rect>\n                );\n              })()}\n          </svg>\n        </div>\n        <div className=\"tools\">\n          <div className=\"preview\">\n            {previews.map((previewSize, index) => (\n              <div\n                className={\"preview-square\"}\n                key={`preview-${index}`}\n                style={{ width: previewSize }}\n              >\n                <h3>\n                  {previewSize}x{previewSize}\n                </h3>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"canvas\"\n                  id={`preview-${index}`}\n                  width={previewSize}\n                  height={previewSize}\n                >\n                  {shapes.map((shape, index) => {\n                    const divider = 512 / previewSize;\n                    const pointsAsSVGString = buildSVGPath(\n                      [...shape.points, cursorPosition],\n                      divider\n                    );\n\n                    return (\n                      <g key={index}>\n                        <path\n                          d={pointsAsSVGString}\n                          stroke={shape.stroke || \"black\"}\n                          fill={shape.fill}\n                        />\n                      </g>\n                    );\n                  })}\n                </svg>\n                <a\n                  href=\"#\"\n                  className={\"download-link\"}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    const svgImage = document.createElement(\"img\");\n                    svgImage.width = previewSize;\n                    svgImage.height = previewSize;\n                    document.body.appendChild(svgImage);\n                    svgImage.onload = () => {\n                      const canvas = document.createElement(\"canvas\");\n                      canvas.width = svgImage.clientWidth;\n                      canvas.height = svgImage.clientHeight;\n                      const canvasCtx = canvas.getContext(\"2d\");\n                      canvasCtx.drawImage(svgImage, 0, 0);\n                      const imageDataURL = canvas.toDataURL(\"image/png\");\n                      svgImage.parentElement.removeChild(svgImage);\n                      URL.revokeObjectURL(svgImage.src);\n                      const downloadLink = document.createElement(\"a\");\n                      downloadLink.href = imageDataURL;\n                      downloadLink.download = `icon-${previewSize}.png`;\n                      downloadLink.click();\n                    };\n                    svgImage.src = URL.createObjectURL(\n                      new Blob(\n                        [document.getElementById(`preview-${index}`).outerHTML],\n                        {\n                          type: \"image/svg+xml\",\n                        }\n                      )\n                    );\n                  }}\n                >\n                  download\n                </a>\n              </div>\n            ))}\n          </div>\n\n          <div id=\"bio\">\n            I am a software developer. I am interested in functional\n            programming. I create developer productivity tools in my free time.\n            I created \"arguman.org\" in past. I study sociology in Istanbul\n            University. I research about system engineering and create\n            computational sociology models.\n          </div>\n        </div>\n        <h1 id=\"experiences-label\">Experiences</h1>\n        <div id=\"page\">\n          <div className=\"work-experience\">\n            <h1>EPAM Systems</h1>\n            <h2>Resource Manager &amp; Senior Software Engineer</h2>\n            <p>\n              I was responsible for the UI development of an embedded smart-tv\n              application. I mainly worked on the networking interface of the\n              application. It is a NodeJS application that using Wayland\n              compositor to interact with the backend services.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>EPAM Systems</h1>\n            <h2>Lead Software Engineer</h2>\n            <p>\n              I mainly worked on development of an interactive map for a seat\n              selection in a ticket-selling web site. I worked with React and\n              GraphQL.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Adphorus</h1>\n            <h2>Senior Software Engineer</h2>\n            <p>\n              Adphorus is an intelligent ad and creative management tool. I\n              worked on the development of the UI with React and Redux.\n              Basically the tool allows you to create an ad and publish it on\n              several platforms such as Facebook and Twitter. I was working\n              closely with the Product team to provide users an abstract\n              interface which works for all the platforms.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Hipolabs</h1>\n            <h2>Senior Software Engineer</h2>\n            <p>\n              I worked on the application chroma; which is an attribution editor\n              for collec- tion items and natural species. I worked as a\n              full-stack developer. Backend system built with Python and Tornado\n              web framework and running on AWS. The frontend and the attribution\n              editor is built with AngularJS.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Metglobal</h1>\n            <h2>Senior Software Engineer &amp; Community Manager</h2>\n            <p>\n              Metglobal is a leading travel-tech company in Turkey. I was\n              responsible for the development travel websites and hotel search\n              engines. I also lead the development relationships community and\n              initiated a software development and research lab in the company.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Freelancer</h1>\n            <p>\n              Worked on several projects in both backend and frontend sites.\n              Most of them are not active anymore. I mainly used Django web\n              framework and pure javascript without any framework.\n            </p>\n          </div>\n          <div className=\"languages\">\n            <h1>Languages</h1>\n            <p>\n              Turkish — My Native Language <br />\n              English — Professional working efficiency <br />\n              Polish — I lived in Poland for 4 years.\n            </p>\n          </div>\n          <div className=\"open-source-projects\">\n            <h1>Open-source projects</h1>\n            <p>\n              github.com/inveniosoftware/dictdiffer <br />\n              github.com/arguman/arguman/arguman.org <br />\n              github.com/react-designer/react-designer <br />\n              github.com/fatih-erikli/disease-simulation\n            </p>\n          </div>\n        </div>\n      </div>\n      <footer>Fatih Erikli — 2021 — Creative Commons</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}