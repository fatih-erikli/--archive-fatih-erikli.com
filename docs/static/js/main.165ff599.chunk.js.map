{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["replaceStateTimeoutId","INITIAL_SHAPES","reflect","p","p0","p1","dx","dy","a","b","x","y","Math","round","DRAW_STATE_SELECTION_STARTED","DRAW_STATE_LABELS","handleContextMenu","drawState","showContextMenuSetterFunction","contextMenuPositionSetterFunction","shapes","shapesSetterFunction","drawStateSetterFunction","currentShapeIndex","currentSegmentIndex","event","preventDefault","clientRect","document","querySelector","getBoundingClientRect","cursorPosition","clientX","left","clientY","top","shape","head","points","point","reflection","midpoint","isControlPoint","newPoints","splice","map","index","handleMouseDown","currentShapeIndexSetterFunction","selectedShapeIndexSetterFunction","currentSegmentIndexSetterFunction","mouseDownCursorPositionSetterFunction","mouseDownShapePointsSetterFunction","selectionRectangle","setMouseDownSelectionRectangle","selectedPointIndexesSetterFunction","contextMenuSetterFunction","isMouseDownSetterFunction","buttons","target","dataset","shapeIndex","pointIndex","Number","isEmptySpace","isSegmentLine","isSegment","isPolygon","flatPoints","flat","selectedPointIndexes","isPointInRectangle","filter","Boolean","findLastOpenShapeIndex","findIndex","last","length","first","continueDrawing","mouseDownCursorPosition","selectionRectangleSetterFunction","currentFillColor","_hasSelection","calculateSelectionRectangle","innerLoop","_","selectionIsValid","canvasBoundingClientRect","right","bottom","newShapes","lastOpenShapeIndex","newAppState","newShape","cursorPositionOrClosingPoint","distance","fill","handleMouseMove","cursorPositionSetterFunction","mouseDownShapePoints","keyStates","setSelectionRectangle","mouseDownSelectionRectangle","isMouseDown","console","log","controlPointMutation","lastOpenShape","_shapeIndex","cachedPointIndex","indexOf","segmentIndex","isShiftPressed","max","min","x1","y1","x2","y2","sqrt","handleKeyUp","keyStatesSetterFunction","isCtrlPressed","minX","minY","width","height","rectangle","parseRGBA","color","parts","split","r","g","parseFloat","buildSVGPath","divider","svgString","forEach","isLast","App","useState","setDrawState","setCursorPosition","setMouseDownCursorPosition","setIsMouseDown","setMouseDownShapePoints","setCurrentShapeIndex","selectedShapeIndex","setSelectedShapeIndex","setCurrentSegmentIndex","name","defaults","state","setState","value","clearTimeout","setTimeout","window","location","href","hashStates","found","builtHashStates","reduce","prev","current","hashName","hashValue","JSON","stringify","join","history","pushState","fragment","parse","decodeURIComponent","useHashedState","setShapes","refreshShapesState","setKeyStates","setSelectedPointIndexes","setCurrentFillColor","currentStrokeColor","setCurrentStrokeColor","showFillColorPicker","setFillColorPicker","showStrokeColorPicker","setShowStrokeColorPicker","showContextMenu","setShowContextMenu","contextMenuPosition","setContextMenuPosition","useEffect","onpopstate","onhashchange","selectedShape","stroke","tabIndex","onKeyDown","keyStateUpdates","shiftKey","ctrlKey","onKeyUp","className","onContextMenu","onMouseDown","onMouseMove","onMouseUp","style","float","backgroundColor","onClick","position","onChange","pickedColor","rgb","updateCurrentShapeFill","marginLeft","updateCurrentShapeStroke","xmlns","Array","undefined","shapeWithCursor","pointsAsSVGString","d","tail","onClosingPoint","lines","cx","cy","keyIndex","push","isPointInSelectionRectangle","_pointIndex","isPointInCurrentSelection","previewSize","id","svgImage","createElement","body","appendChild","onload","canvas","clientWidth","clientHeight","getContext","drawImage","imageDataURL","toDataURL","parentElement","removeChild","URL","revokeObjectURL","src","downloadLink","download","click","createObjectURL","Blob","getElementById","outerHTML","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yJAskBIA,E,8GAlkBEC,EAAiB,CAAC,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,oBAAoB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,oBAAoB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,kBAAkB,CAAC,EAAI,mBAAmB,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,kBAAkB,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,kBAAkB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IA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","file":"static/js/main.165ff599.chunk.js","sourcesContent":["import { useState, React, useEffect } from \"react\";\nimport { ChromePicker as ColorPicker } from \"react-color\";\nimport \"./App.css\";\n\nconst INITIAL_SHAPES = [{\"points\":[{\"x\":151,\"y\":290.3000030517578},{\"x\":145,\"y\":270.3000030517578},{\"x\":141,\"y\":263.3000030517578},{\"x\":113,\"y\":214.3000030517578},{\"x\":113,\"y\":161.3000030517578},{\"x\":144,\"y\":137.3000030517578},{\"x\":159,\"y\":126.30000305175781},{\"x\":166,\"y\":123.30000305175781},{\"x\":145,\"y\":97.30000305175781},{\"x\":232,\"y\":58.30000305175781},{\"isControlPoint\":true,\"x\":260.1000061035156,\"y\":60.275001525878906},{\"x\":287.5,\"y\":62.30000305175781},{\"x\":304.5,\"y\":60.30000305175781},{\"isControlPoint\":true,\"x\":316.6000061035156,\"y\":45.775001525878906},{\"x\":344.5,\"y\":84.11666870117188},{\"isControlPoint\":true,\"x\":367.6000061035156,\"y\":87.2750015258789},{\"x\":382.20001220703125,\"y\":112.46665954589844},{\"isControlPoint\":true,\"x\":411.1000061035156,\"y\":119.55000305175781},{\"x\":417,\"y\":172.3000030517578},{\"x\":398.5,\"y\":218.11666870117188},{\"x\":379,\"y\":275.3000030517578},{\"x\":366,\"y\":338.3000030517578},{\"x\":366,\"y\":282.3000030517578},{\"x\":363,\"y\":267.3000030517578},{\"x\":344,\"y\":184.3000030517578},{\"x\":343.6000061035156,\"y\":183.85832977294922},{\"isControlPoint\":true,\"x\":275.1166687011719,\"y\":164.9000015258789},{\"x\":209,\"y\":173.3000030517578},{\"x\":172,\"y\":156.3000030517578},{\"x\":158,\"y\":216.3000030517578},{\"x\":159,\"y\":338.3000030517578},{\"x\":151,\"y\":290.3000030517578}],\"fill\":\"rgba(240, 240, 240, 0.9)\"},{\"points\":[{\"x\":249,\"y\":410.6333312988281},{\"x\":262,\"y\":412.066650390625},{\"x\":277,\"y\":409.6333312988281},{\"x\":270,\"y\":429.01666259765625},{\"x\":263,\"y\":433.6333312988281},{\"x\":254,\"y\":428.01666259765625},{\"x\":249,\"y\":410.6333312988281}],\"fill\":\"rgba(244, 244, 244, 0.9)\"},{\"points\":[{\"x\":215,\"y\":399.3833312988281},{\"x\":223,\"y\":387.3833312988281},{\"x\":254,\"y\":380.3833312988281},{\"x\":262,\"y\":377.3833312988281},{\"x\":268,\"y\":377.3833312988281},{\"x\":272,\"y\":380.3833312988281},{\"x\":280,\"y\":381.3833312988281},{\"x\":302,\"y\":385.3833312988281},{\"x\":312,\"y\":390.3833312988281},{\"x\":315,\"y\":397.3833312988281},{\"x\":317,\"y\":398.3833312988281},{\"x\":322,\"y\":389.3833312988281},{\"x\":313,\"y\":375.3833312988281},{\"x\":285,\"y\":365.3833312988281},{\"x\":279,\"y\":361.3833312988281},{\"x\":277,\"y\":359.3833312988281},{\"x\":269,\"y\":361.3833312988281},{\"x\":265,\"y\":361.3833312988281},{\"x\":260,\"y\":359.3833312988281},{\"x\":255,\"y\":358.3833312988281},{\"x\":251,\"y\":359.3833312988281},{\"x\":243,\"y\":365.3833312988281},{\"x\":229,\"y\":367.3833312988281},{\"x\":218,\"y\":371.3833312988281},{\"x\":210,\"y\":378.3833312988281},{\"x\":205,\"y\":390.3833312988281},{\"x\":208,\"y\":395.3833312988281},{\"x\":215,\"y\":399.3833312988281}],\"fill\":\"rgba(240, 240, 240, 0.9)\"},{\"points\":[{\"x\":276,\"y\":264.1000061035156},{\"x\":297,\"y\":259.1000061035156},{\"x\":316,\"y\":252.6999969482422},{\"x\":338,\"y\":253.10000610351562},{\"x\":355,\"y\":263.1000061035156},{\"x\":341,\"y\":244.10000610351562},{\"x\":329,\"y\":241.6999969482422},{\"x\":316,\"y\":242.10000610351562},{\"x\":292,\"y\":244.10000610351562},{\"x\":280,\"y\":249.10000610351562},{\"x\":276,\"y\":264.1000061035156}],\"fill\":\"rgba(242, 242, 242, 0.9)\"},{\"points\":[{\"x\":167,\"y\":270.1000061035156},{\"x\":185,\"y\":259.1000061035156},{\"x\":198,\"y\":256.6999969482422},{\"x\":216,\"y\":261.1000061035156},{\"x\":238,\"y\":267.1000061035156},{\"x\":238,\"y\":253.10000610351562},{\"x\":226,\"y\":247.6999969482422},{\"x\":214,\"y\":246.10000610351562},{\"x\":196,\"y\":245.6999969482422},{\"x\":180,\"y\":248.10000610351562},{\"x\":171,\"y\":255.10000610351562},{\"x\":167,\"y\":270.1000061035156}],\"fill\":\"rgba(252, 252, 252, 0.9)\"},{\"points\":[{\"x\":284,\"y\":284.3000030517578},{\"x\":295,\"y\":275.3000030517578},{\"x\":307,\"y\":273.3000030517578},{\"x\":323,\"y\":273.3000030517578},{\"x\":329,\"y\":275.9499969482422},{\"x\":338,\"y\":282.3000030517578},{\"x\":330.5,\"y\":278.91666412353516},{\"x\":328.5,\"y\":277.6500015258789},{\"x\":326,\"y\":276.3000030517578},{\"x\":311,\"y\":273.3000030517578},{\"x\":304,\"y\":274.3000030517578},{\"x\":297,\"y\":276.3000030517578},{\"x\":286,\"y\":284.3000030517578},{\"x\":284,\"y\":284.3000030517578}]},{\"points\":[{\"x\":282,\"y\":284.3000030517578},{\"x\":294,\"y\":287.3000030517578},{\"x\":302,\"y\":290.3000030517578},{\"x\":311,\"y\":290.3000030517578},{\"x\":319,\"y\":288.3000030517578},{\"x\":328,\"y\":283.3000030517578},{\"x\":336,\"y\":282.3000030517578},{\"x\":330,\"y\":284.3000030517578},{\"x\":326,\"y\":286.3000030517578},{\"x\":320,\"y\":290.3000030517578},{\"x\":316,\"y\":291.3000030517578},{\"x\":303,\"y\":292.3000030517578},{\"x\":294,\"y\":289.3000030517578},{\"x\":282,\"y\":284.3000030517578}]},{\"points\":[{\"x\":176,\"y\":287.3000030517578},{\"x\":186,\"y\":282.3000030517578},{\"x\":190,\"y\":280.3000030517578},{\"x\":195,\"y\":278.3000030517578},{\"x\":208,\"y\":278.3000030517578},{\"x\":211,\"y\":279.31666564941406},{\"x\":215,\"y\":281.3000030517578},{\"x\":225,\"y\":287.3000030517578},{\"x\":230,\"y\":289.3000030517578},{\"x\":234,\"y\":290.3000030517578},{\"x\":234,\"y\":289.3000030517578},{\"x\":229,\"y\":287.3000030517578},{\"x\":222,\"y\":284.3000030517578},{\"x\":215,\"y\":279.3000030517578},{\"x\":209,\"y\":276.3000030517578},{\"x\":201,\"y\":276.3000030517578},{\"x\":194,\"y\":276.3000030517578},{\"x\":184,\"y\":280.3000030517578},{\"x\":182,\"y\":282.3000030517578},{\"x\":176,\"y\":287.3000030517578}]},{\"points\":[{\"x\":229,\"y\":289.3000030517578},{\"x\":219,\"y\":292.3000030517578},{\"x\":214,\"y\":295.3000030517578},{\"x\":207,\"y\":295.8999938964844},{\"x\":200,\"y\":296.3000030517578},{\"x\":186,\"y\":294.6999969482422},{\"x\":182,\"y\":291.3000030517578},{\"x\":177,\"y\":287.3000030517578},{\"x\":183,\"y\":291.3000030517578},{\"x\":187,\"y\":293.3000030517578},{\"x\":201,\"y\":294.3000030517578},{\"x\":212,\"y\":294.3000030517578},{\"x\":219,\"y\":291.3000030517578},{\"x\":229,\"y\":289.3000030517578}]},{\"points\":[{\"x\":197,\"y\":281.3000030517578},{\"x\":196,\"y\":285},{\"x\":196,\"y\":289.3000030517578},{\"x\":198,\"y\":292.3000030517578},{\"x\":203,\"y\":294.3000030517578},{\"x\":203,\"y\":294.1500015258789},{\"x\":209,\"y\":293},{\"x\":212,\"y\":291},{\"x\":213,\"y\":287.3000030517578},{\"x\":212,\"y\":283.3000030517578},{\"x\":207,\"y\":280.3000030517578},{\"x\":203,\"y\":279.3000030517578},{\"x\":199,\"y\":280.3000030517578},{\"x\":197,\"y\":281.3000030517578}],\"fill\":\"rgba(233, 233, 233, 1)\"},{\"points\":[{\"x\":303,\"y\":277.3000030517578},{\"x\":303,\"y\":284.3000030517578},{\"x\":305,\"y\":288.3000030517578},{\"x\":311,\"y\":289.3000030517578},{\"isControlPoint\":true,\"x\":315.1000061035156,\"y\":288.2750015258789},{\"x\":315.1000061035156,\"y\":288.2750015258789},{\"x\":318,\"y\":285.3000030517578},{\"x\":318,\"y\":280.3000030517578},{\"x\":316,\"y\":276.3000030517578},{\"x\":311,\"y\":274.3000030517578},{\"x\":306,\"y\":275.3000030517578},{\"x\":303,\"y\":277.3000030517578}],\"fill\":\"rgba(233, 233, 233, 0.9)\"},{\"points\":[{\"x\":231,\"y\":393.29998779296875},{\"x\":253,\"y\":388.29998779296875},{\"x\":261,\"y\":387.29998779296875},{\"x\":265,\"y\":387.3000030517578},{\"x\":268,\"y\":387.29998779296875},{\"x\":277,\"y\":388.29998779296875},{\"x\":286,\"y\":390.29998779296875},{\"x\":294,\"y\":393.29998779296875},{\"x\":278,\"y\":391.29998779296875},{\"x\":273,\"y\":391.29998779296875},{\"x\":263,\"y\":391.29998779296875},{\"x\":254,\"y\":391.29998779296875},{\"x\":247,\"y\":392.29998779296875},{\"x\":239,\"y\":394.29998779296875},{\"x\":231,\"y\":393.29998779296875}]},{\"points\":[{\"x\":231,\"y\":391.4499969482422},{\"x\":240,\"y\":399.4499969482422},{\"x\":246,\"y\":400.3000030517578},{\"x\":252,\"y\":400.4499969482422},{\"x\":276,\"y\":400.4499969482422},{\"x\":285,\"y\":396.4499969482422},{\"x\":290,\"y\":394.21665954589844},{\"x\":294,\"y\":392.4499969482422},{\"x\":281,\"y\":395.4499969482422},{\"x\":277,\"y\":397.4499969482422},{\"x\":267,\"y\":398.4499969482422},{\"x\":252,\"y\":397.4499969482422},{\"x\":242,\"y\":397.4499969482422},{\"x\":231,\"y\":391.4499969482422}],\"fill\":\"rgba(252, 252, 252, 0.9)\"}];\n\nconst reflect = (p, p0, p1) => {\n  // https://gist.github.com/balint42/b99934b2a6990a53e14b\n  let dx, dy, a, b, x, y;\n  dx = p1.x - p0.x;\n  dy = p1.y - p0.y;\n  a = (dx * dx - dy * dy) / (dx * dx + dy * dy);\n  b = (2 * dx * dy) / (dx * dx + dy * dy);\n  x = Math.round(a * (p.x - p0.x) + b * (p.y - p0.y) + p0.x);\n  y = Math.round(b * (p.x - p0.x) - a * (p.y - p0.y) + p0.y);\n  return { x, y };\n};\n\nconst DRAW_STATE_READY = 1;\nconst DRAW_STATE_START = 2;\nconst DRAW_STATE_MOVE_SEGMENT = 3;\nconst DRAW_STATE_INSERT_SEGMENT = 4;\nconst DRAW_STATE_SELECTION = 5;\nconst DRAW_STATE_MOVE_SHAPE = 6;\nconst DRAW_STATE_ON_SHAPE = 7;\nconst DRAW_STATE_ON_SEGMENT = 8;\nconst DRAW_STATE_REMOVE_SEGMENT = 9;\nconst DRAW_STATE_REMOVE_SHAPE = 10;\nconst DRAW_STATE_SELECTION_STARTED = 11;\nconst DRAW_STATE_ON_SEGMENT_SELECTION = 12;\nconst DRAW_STATE_MOVE_SELECTED_SEGMENTS = 13;\nconst DRAW_STATE_SELECTION_SET = 14;\n\nconst SHAPE_CLOSE_DISTANCE = 2;\nconst SEGMENT_CIRCLE_RADIUS = 2;\n\nconst DRAW_STATE_LABELS = {\n  [DRAW_STATE_READY]: \"Click on canvas and drag it to start drawing\",\n  [DRAW_STATE_START]: \"Click on another point to connect with the latest\",\n  [DRAW_STATE_MOVE_SEGMENT]: \"Moving a segment of a shape\",\n  [DRAW_STATE_INSERT_SEGMENT]:\n    \"Click on the a point on the line to insert a segment\",\n  [DRAW_STATE_SELECTION]: \"Select points to move\",\n  [DRAW_STATE_ON_SHAPE]: \"Drag the shape to move\",\n  [DRAW_STATE_MOVE_SHAPE]: \"Moving a shape\",\n  [DRAW_STATE_ON_SEGMENT]: \"Drag the segment to move it\",\n  [DRAW_STATE_REMOVE_SEGMENT]: \"Click on the segment to remove\",\n  [DRAW_STATE_REMOVE_SHAPE]: \"Click on the shape to remove\",\n  [DRAW_STATE_SELECTION_STARTED]: \"Selection started\",\n  [DRAW_STATE_ON_SEGMENT_SELECTION]: \"Move selected segments\",\n  [DRAW_STATE_MOVE_SELECTED_SEGMENTS]: \"Moving selected segments\",\n  [DRAW_STATE_SELECTION_SET]: \"Selection set\",\n};\n\nfunction handleContextMenu(\n  drawState,\n  showContextMenuSetterFunction,\n  contextMenuPositionSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n) {\n  return (event) => {\n    event.preventDefault();\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    const cursorPosition = {\n      x: event.clientX - clientRect.left,\n      y: event.clientY - clientRect.top,\n    };\n    contextMenuPositionSetterFunction({\n      x: cursorPosition.x + clientRect.left,\n      y: cursorPosition.y + clientRect.top,\n    });\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        isControlPoint: true,\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    } else {\n      showContextMenuSetterFunction(true);\n    }\n  };\n}\n\nfunction handleMouseDown(\n  drawState,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  selectedShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  cursorPosition,\n  mouseDownCursorPositionSetterFunction,\n  mouseDownShapePointsSetterFunction,\n  selectionRectangle,\n  setMouseDownSelectionRectangle,\n  selectedPointIndexesSetterFunction,\n  contextMenuSetterFunction,\n  isMouseDownSetterFunction\n) {\n  return (event) => {\n    isMouseDownSetterFunction(true);\n    contextMenuSetterFunction(false);\n    if (event.buttons === 2) {\n      event.preventDefault();\n      return false;\n    }\n\n    if (drawState === DRAW_STATE_READY) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n    }\n\n    if (drawState === DRAW_STATE_ON_SEGMENT) {\n      const { shapeIndex, pointIndex } = event.target.dataset;\n      currentShapeIndexSetterFunction(Number(shapeIndex));\n      selectedShapeIndexSetterFunction(Number(shapeIndex));\n      currentSegmentIndexSetterFunction(Number(pointIndex));\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_SET) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      const isEmptySpace =\n        !event.target.dataset.isSegmentLine &&\n        !event.target.dataset.isSegment &&\n        !event.target.dataset.isPolygon;\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      if (isEmptySpace) {\n        drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n      } else {\n        const flatPoints = shapes.map((shape) => shape.points).flat();\n        mouseDownShapePointsSetterFunction(flatPoints);\n        const selectedPointIndexes = flatPoints\n          .map((point, index) =>\n            isPointInRectangle(point, selectionRectangle) ? { index } : null\n          )\n          .filter(Boolean)\n          .map(({ index }) => index);\n        setMouseDownSelectionRectangle({\n          x: selectionRectangle.x,\n          y: selectionRectangle.y,\n        });\n        selectedPointIndexesSetterFunction(selectedPointIndexes);\n        drawStateSetterFunction(DRAW_STATE_MOVE_SELECTED_SEGMENTS);\n      }\n    }\n\n    if (drawState === DRAW_STATE_ON_SHAPE) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      selectedShapeIndexSetterFunction(currentShapeIndex);\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      mouseDownShapePointsSetterFunction(shapes[currentShapeIndex].points);\n      drawStateSetterFunction(DRAW_STATE_MOVE_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n  };\n}\n\nfunction findLastOpenShapeIndex(shapes) {\n  return shapes.findIndex(({ points }) => {\n    const last = points[points.length - 1];\n    const first = points[0];\n    return points.length < 3 || !(first.x === last.x && first.y === last.y);\n  });\n}\n\nfunction continueDrawing(\n  cursorPosition,\n  drawStateSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawState,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  mouseDownCursorPosition,\n  selectionRectangleSetterFunction,\n  currentFillColor,\n  isMouseDownSetterFunction\n) {\n  return (event) => {\n    isMouseDownSetterFunction(false);\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      drawStateSetterFunction(DRAW_STATE_READY);\n      currentShapeIndexSetterFunction(-1);\n      currentSegmentIndexSetterFunction(-1);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_STARTED) {\n      const selectionRectangle = calculateSelectionRectangle(\n        mouseDownCursorPosition,\n        cursorPosition\n      );\n      selectionRectangleSetterFunction(selectionRectangle);\n      let _hasSelection;\n      for (const shape of shapes) {\n        innerLoop: for (const point of shape.points) {\n          _hasSelection = isPointInRectangle(point, selectionRectangle);\n          if (_hasSelection) {\n            break innerLoop;\n          }\n        }\n        if (_hasSelection) {\n          break;\n        }\n      }\n      drawStateSetterFunction(\n        _hasSelection ? DRAW_STATE_SELECTION_SET : DRAW_STATE_READY\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      drawStateSetterFunction(DRAW_STATE_SELECTION_SET);\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      drawStateSetterFunction(DRAW_STATE_ON_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.filter((_, index) => index !== currentShapeIndex)\n      );\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.filter(\n            (point, pointIndex) =>\n              !(shapeIndex === currentShapeIndex) ||\n              (shapeIndex === currentShapeIndex &&\n                currentSegmentIndex !== pointIndex)\n          ),\n        }))\n      );\n    }\n\n    const selectionIsValid =\n      mouseDownCursorPosition.x !== cursorPosition.x &&\n      mouseDownCursorPosition.y !== cursorPosition.y;\n\n    const isEmptySpace =\n      !event.target.dataset.isSegmentLine &&\n      !event.target.dataset.isSegment &&\n      !event.target.dataset.isPolygon;\n\n    if (drawState === DRAW_STATE_START || (!selectionIsValid && isEmptySpace)) {\n      const canvasBoundingClientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      if (\n        event.clientX < canvasBoundingClientRect.left ||\n        event.clientX > canvasBoundingClientRect.right ||\n        event.clientY < canvasBoundingClientRect.top ||\n        event.clientY > canvasBoundingClientRect.bottom\n      ) {\n        return;\n      }\n\n      const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n\n      let newShapes;\n      let newAppState = DRAW_STATE_START;\n      if (lastOpenShapeIndex === -1) {\n        newShapes = [...shapes, { points: [cursorPosition] }];\n      } else {\n        newShapes = shapes.map((shape, index) => {\n          let newShape;\n          if (index === lastOpenShapeIndex) {\n            let cursorPositionOrClosingPoint;\n\n            if (\n              distance(\n                cursorPosition.x,\n                cursorPosition.y,\n                shape.points[0].x,\n                shape.points[0].y\n              ) < SHAPE_CLOSE_DISTANCE\n            ) {\n              cursorPositionOrClosingPoint = shape.points[0];\n              newAppState = DRAW_STATE_READY;\n            } else {\n              cursorPositionOrClosingPoint = cursorPosition;\n            }\n\n            newShape = {\n              fill: currentFillColor,\n              points: [...shape.points, cursorPositionOrClosingPoint],\n            };\n          } else {\n            newShape = shape;\n          }\n\n          return newShape;\n        });\n      }\n\n      drawStateSetterFunction(newAppState);\n      shapesSetterFunction(newShapes);\n    }\n  };\n}\n\nfunction handleMouseMove(\n  cursorPositionSetterFunction,\n  drawState,\n  currentShapeIndex,\n  currentSegmentIndex,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  mouseDownCursorPosition,\n  mouseDownShapePoints,\n  keyStates,\n  selectionRectangle,\n  setSelectionRectangle,\n  mouseDownSelectionRectangle,\n  selectedPointIndexes,\n  isMouseDown\n) {\n  return ({ clientX, clientY, target }) => {\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    let cursorPosition = {\n      x: clientX - clientRect.left,\n      y: clientY - clientRect.top,\n    };\n\n    cursorPositionSetterFunction(cursorPosition);\n\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      console.log(cursorPosition, currentShapeIndex, currentSegmentIndex);\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            currentShapeIndex === shapeIndex &&\n            (currentSegmentIndex === pointIndex ||\n              (currentSegmentIndex === shape.points.length - 1 &&\n                pointIndex === 0))\n              ? {...point, ...cursorPosition}\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_START) {\n      if (isMouseDown) {\n        const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n        const lastOpenShape = shapes[lastOpenShapeIndex];\n        const isLastDrawnPointIsControlPoint =\n          lastOpenShape.points.length > 2 &&\n          Boolean(\n            lastOpenShape.points[lastOpenShape.points.length - 1].isControlPoint\n          );\n        let controlPointMutation;\n        if (isLastDrawnPointIsControlPoint) {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: shape.points.map((point, index) =>\n                  index === shape.points.length - 1\n                    ? { ...point, ...cursorPosition }\n                    : point\n                ),\n              };\n            } else {\n              return shape;\n            }\n          });\n        } else {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: [\n                  ...shape.points,\n                  { ...cursorPosition },\n                  { isControlPoint: true, ...cursorPosition },\n                ],\n              };\n            } else {\n              return shape;\n            }\n          });\n        }\n        shapesSetterFunction(controlPointMutation);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      let _shapeIndex = 0;\n      setSelectionRectangle({\n        ...selectionRectangle,\n        x:\n          mouseDownSelectionRectangle.x -\n          (mouseDownCursorPosition.x - cursorPosition.x),\n        y:\n          mouseDownSelectionRectangle.y -\n          (mouseDownCursorPosition.y - cursorPosition.y),\n      });\n      shapesSetterFunction(\n        shapes.map((shape) => ({\n          ...shape,\n          points: shape.points.map((point) => {\n            const cachedPointIndex = _shapeIndex;\n            _shapeIndex++;\n            return selectedPointIndexes.indexOf(cachedPointIndex) > -1\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[cachedPointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[cachedPointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point;\n          }),\n        }))\n      );\n    }\n\n    if (\n      drawState === DRAW_STATE_READY ||\n      drawState === DRAW_STATE_ON_SHAPE ||\n      drawState === DRAW_STATE_ON_SEGMENT ||\n      drawState === DRAW_STATE_ON_SEGMENT_SELECTION ||\n      drawState === DRAW_STATE_REMOVE_SHAPE ||\n      drawState === DRAW_STATE_REMOVE_SEGMENT\n    ) {\n      const {\n        isSegmentLine,\n        isSegment,\n        isPolygon,\n        shapeIndex,\n        segmentIndex,\n        pointIndex,\n      } = target.dataset;\n      // todo: merge pointIndex and segmentIndex\n      if (isSegmentLine) {\n        drawStateSetterFunction(DRAW_STATE_INSERT_SEGMENT);\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(segmentIndex));\n      } else if (isPolygon) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SHAPE\n            : DRAW_STATE_ON_SHAPE\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n      } else if (isSegment) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SEGMENT\n            : DRAW_STATE_ON_SEGMENT\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(pointIndex));\n      } else {\n        drawStateSetterFunction(DRAW_STATE_READY);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            shapeIndex === currentShapeIndex\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[pointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[pointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const midpointDistance = distance(\n        midpoint.x,\n        midpoint.y,\n        cursorPosition.x,\n        cursorPosition.y\n      );\n      if (\n        midpointDistance > 1 ||\n        midpoint.y > Math.max(head.y, point.y) ||\n        midpoint.y < Math.min(head.y, point.y) ||\n        midpoint.x > Math.max(head.x, point.x) ||\n        midpoint.x < Math.min(head.x, point.x)\n      ) {\n        drawStateSetterFunction(DRAW_STATE_READY);\n        currentShapeIndexSetterFunction(-1);\n        currentSegmentIndexSetterFunction(-1);\n      }\n    }\n  };\n}\n\nlet replaceStateTimeoutId;\n\nfunction useHashedState(name, defaults) {\n  const [state, setState] = useState(defaults);\n  return [\n    state,\n    (value, callback = () => {}) => {\n      if (replaceStateTimeoutId) {\n        clearTimeout(replaceStateTimeoutId);\n      }\n\n      replaceStateTimeoutId = setTimeout(() => {\n        const [_, ...hashStates] = (\n          window.location.href.indexOf(\"#\") > -1\n            ? window.location.href.split(\"#\")\n            : [null]\n        ).filter(Boolean);\n\n        let found = false;\n        const builtHashStates = hashStates\n          .reduce((prev, current) => {\n            let [hashName, hashValue] = current.split(\"=\");\n            if (name === hashName) {\n              found = true;\n              hashValue = JSON.stringify(value);\n              hashName = name;\n            }\n\n            return [...prev, `${hashName}=${hashValue}`];\n          }, [])\n          .join(\"#\");\n\n        if (!found) {\n          window.history.pushState(\n            null,\n            null,\n            `${\n              builtHashStates && `#${builtHashStates}`\n            }#${name}=${JSON.stringify(value)}`\n          );\n        } else {\n          window.history.pushState(null, null, `#${builtHashStates}`);\n        }\n      }, 50);\n      setState(value);\n    },\n    () => {\n      const [head, fragment] = window.location.href.split(`#${name}=`);\n      if (fragment) {\n        const [value] = fragment.split(\"#\");\n        setState(JSON.parse(decodeURIComponent(value)));\n      }\n    },\n  ];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const a = x1 - x2;\n  const b = y1 - y2;\n  return Math.sqrt(a * a + b * b);\n}\n\nfunction handleKeyDown(keyStatesSetterFunction) {\n  return (event) => {\n    let keyStateUpdates = {};\n    event.shiftKey && (keyStateUpdates[\"isShiftPressed\"] = true);\n    event.ctrlKey && (keyStateUpdates[\"isCtrlPressed\"] = true);\n    keyStatesSetterFunction(keyStateUpdates);\n  };\n}\n\nfunction handleKeyUp(keyStatesSetterFunction) {\n  return (_) => {\n    keyStatesSetterFunction({ isCtrlPressed: false, isShiftPressed: false });\n  };\n}\n\nfunction calculateSelectionRectangle(mouseDownCursorPosition, cursorPosition) {\n  const minX = Math.min(mouseDownCursorPosition.x, cursorPosition.x);\n  const minY = Math.min(mouseDownCursorPosition.y, cursorPosition.y);\n  const maxX = Math.max(mouseDownCursorPosition.x, cursorPosition.x);\n  const maxY = Math.max(mouseDownCursorPosition.y, cursorPosition.y);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nfunction isPointInRectangle(point, rectangle) {\n  return (\n    point.x > rectangle.x &&\n    point.x < rectangle.x + rectangle.width &&\n    point.y > rectangle.y &&\n    point.y < rectangle.y + rectangle.height\n  );\n}\n\nfunction updateCurrentShapeFill(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, fill: pickedColor } : shape\n    )\n  );\n}\n\nfunction updateCurrentShapeStroke(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, stroke: pickedColor } : shape\n    )\n  );\n}\n\nfunction parseRGBA(color) {\n  if (typeof color !== \"string\") {\n    return color;\n  }\n\n  const commaSaparatedString = color.split(\"(\")[1].split(\")\")[0];\n  const parts = commaSaparatedString.split(\",\");\n  const [r, g, b, a] = parts;\n  return {\n    r: Number(r),\n    g: Number(g),\n    b: Number(b),\n    a: parseFloat(a),\n  };\n}\n\nfunction buildSVGPath(points, divider = 1) {\n  let svgString = \"\";\n  points.forEach(({ x, y, isControlPoint }, index) => {\n    const isLast = index === points.length - 1;\n    const isFirst = index === 0;\n\n    if (isFirst) {\n      svgString = `M ${x / divider},${y / divider}`;\n    }\n\n    if (isLast) {\n      svgString = `${svgString} Z ${points[0].x / divider},${\n        points[0].y / divider\n      }`;\n      return;\n    }\n\n    if (isControlPoint) {\n      svgString = `${svgString} ${x / divider},${y / divider} `;\n    } else if (points[index + 1].isControlPoint) {\n      svgString = `${svgString} Q ${x / divider},${y / divider} `;\n    } else {\n      svgString = `${svgString} L ${x / divider},${y / divider} `;\n    }\n  });\n  return svgString;\n}\n\nfunction App() {\n  const [drawState, setDrawState] = useState(DRAW_STATE_READY);\n  const [cursorPosition, setCursorPosition] = useState({ x: -1, y: -1 });\n  const [mouseDownCursorPosition, setMouseDownCursorPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [mouseDownShapePoints, setMouseDownShapePoints] = useState([]);\n  const [currentShapeIndex, setCurrentShapeIndex] = useState(-1);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(-1);\n  const [currentSegmentIndex, setCurrentSegmentIndex] = useState(-1);\n  const [shapes, setShapes, refreshShapesState] = useHashedState(\n    \"shapes\",\n    INITIAL_SHAPES\n  );\n  const [keyStates, setKeyStates] = useState({\n    isCtrlPressed: false,\n    isShiftPressed: false,\n  });\n  const [selectionRectangle, setSelectionRectangle] = useState(null);\n  const [mouseDownSelectionRectangle, setMouseDownSelectionRectangle] =\n    useState({ x: -1, y: -1 });\n  const [selectedPointIndexes, setSelectedPointIndexes] = useState([]);\n  const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n  const previews = [256, 128];\n  const [currentFillColor, setCurrentFillColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [currentStrokeColor, setCurrentStrokeColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [showFillColorPicker, setFillColorPicker] = useState(false);\n  const [showStrokeColorPicker, setShowStrokeColorPicker] = useState(false);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  useEffect(() => {\n    refreshShapesState();\n    window.onpopstate = refreshShapesState;\n    window.onhashchange = refreshShapesState;\n  }, []);\n  useEffect(() => {\n    const selectedShape = shapes[selectedShapeIndex];\n    if (!selectedShape) {\n      return;\n    }\n    const { stroke, fill } = selectedShape;\n    fill && setCurrentFillColor(parseRGBA(fill));\n    stroke && setCurrentStrokeColor(parseRGBA(stroke));\n  }, [selectedShapeIndex]);\n  console.log(shapes);\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown(setKeyStates)}\n      onKeyUp={handleKeyUp(setKeyStates)}\n      className=\"app-container\"\n      onContextMenu={handleContextMenu(\n        drawState,\n        setShowContextMenu,\n        setContextMenuPosition,\n        shapes,\n        setShapes,\n        setDrawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n      )}\n      onMouseDown={handleMouseDown(\n        drawState,\n        setDrawState,\n        setCurrentShapeIndex,\n        setSelectedShapeIndex,\n        setCurrentSegmentIndex,\n        shapes,\n        setShapes,\n        currentShapeIndex,\n        currentSegmentIndex,\n        cursorPosition,\n        setMouseDownCursorPosition,\n        setMouseDownShapePoints,\n        selectionRectangle,\n        setMouseDownSelectionRectangle,\n        setSelectedPointIndexes,\n        setShowContextMenu,\n        setIsMouseDown\n      )}\n      onMouseMove={handleMouseMove(\n        setCursorPosition,\n        drawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n        shapes,\n        setShapes,\n        setDrawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        mouseDownCursorPosition,\n        mouseDownShapePoints,\n        keyStates,\n        selectionRectangle,\n        setSelectionRectangle,\n        mouseDownSelectionRectangle,\n        selectedPointIndexes,\n        isMouseDown\n      )}\n      onMouseUp={continueDrawing(\n        cursorPosition,\n        setDrawState,\n        shapes,\n        setShapes,\n        drawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        currentShapeIndex,\n        currentSegmentIndex,\n        mouseDownCursorPosition,\n        setSelectionRectangle,\n        currentFillColor,\n        setIsMouseDown\n      )}\n    >\n      <h1\n        style={{\n          float: \"left\",\n        }}\n      >\n        Hello, my name is Fatih.\n      </h1>\n      <div\n        style={{\n          float: \"right\",\n        }}\n        className={\"header-tools\"}\n      >\n        <span\n          style={{\n            backgroundColor: `rgba(${currentFillColor.r}, ${currentFillColor.g}, ${currentFillColor.b}, ${currentFillColor.a})`,\n          }}\n          className={\"color-picker-preview\"}\n          onClick={() => {\n            setFillColorPicker(!showFillColorPicker);\n          }}\n        ></span>\n        <span className={\"color-picker-label\"}>Fill</span>\n        {showFillColorPicker && (\n          <div\n            style={{\n              position: \"absolute\",\n            }}\n          >\n            <ColorPicker\n              color={currentFillColor}\n              onChange={(color) => {\n                const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                setCurrentFillColor({\n                  r: color.rgb.r,\n                  g: color.rgb.g,\n                  b: color.rgb.b,\n                  a: color.rgb.a,\n                });\n                updateCurrentShapeFill(\n                  shapes,\n                  setShapes,\n                  selectedShapeIndex,\n                  pickedColor\n                );\n              }}\n            />\n          </div>\n        )}\n        <span\n          style={{\n            marginLeft: 20,\n            backgroundColor: `rgba(${currentStrokeColor.r}, ${currentStrokeColor.g}, ${currentStrokeColor.b}, ${currentStrokeColor.a})`,\n          }}\n          className={\"color-picker-preview\"}\n          onClick={() => {\n            setShowStrokeColorPicker(!showStrokeColorPicker);\n          }}\n        ></span>\n        <span className={\"color-picker-label\"}>Stroke</span>\n        {showStrokeColorPicker && (\n          <div\n            style={{\n              position: \"absolute\",\n            }}\n          >\n            <ColorPicker\n              color={currentStrokeColor}\n              onChange={(color) => {\n                const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                setCurrentStrokeColor({\n                  r: color.rgb.r,\n                  g: color.rgb.g,\n                  b: color.rgb.b,\n                  a: color.rgb.a,\n                });\n                updateCurrentShapeStroke(\n                  shapes,\n                  setShapes,\n                  selectedShapeIndex,\n                  pickedColor\n                );\n              }}\n            />\n          </div>\n        )}\n      </div>\n      {keyStates.isShiftPressed && \"shift\"}\n      {keyStates.isCtrlPressed && \"ctrl\"}\n      <div className=\"editor\">\n        <div className={\"canvas-wrapper\"}>\n          <h3>\n            #Canvas{\" \"}\n            <span className={\"drawing-info\"}>\n              {DRAW_STATE_LABELS[drawState]}\n            </span>\n          </h3>\n          {showContextMenu && (\n            <div\n              className={\"context-menu\"}\n              style={{\n                top: contextMenuPosition.y,\n                left: contextMenuPosition.x,\n              }}\n            >\n              context menu\n            </div>\n          )}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"canvas\"\n            width={512}\n            height={512}\n          >\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`y-${index}`}\n                x1={0}\n                x2={512}\n                className={\"guideline\"}\n                y1={index * 8}\n                y2={index * 8}\n              />\n            ))}\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`x-${index}`}\n                y1={0}\n                y2={512}\n                className={\"guideline\"}\n                x1={index * 8}\n                x2={index * 8}\n              />\n            ))}\n            <line\n              x1={0}\n              x2={512}\n              style={{ stroke: \"blue\" }}\n              y1={32 * 8}\n              y2={32 * 8}\n            />\n            <line\n              y1={0}\n              y2={512}\n              style={{ stroke: \"blue\" }}\n              x1={32 * 8}\n              x2={32 * 8}\n            />\n            {shapes.map((shape, index) => {\n              const shapeWithCursor = [...shape.points, cursorPosition];\n              const pointsAsSVGString = buildSVGPath(shapeWithCursor);\n\n              return (\n                <g key={index}>\n                  <path\n                    d={pointsAsSVGString}\n                    data-is-polygon={true}\n                    data-shape-index={index}\n                    fill={\"rgba(196, 196, 196, 0.5)\"}\n                  />\n                  {(() => {\n                    let [head, ...tail] =\n                      drawState === DRAW_STATE_START &&\n                      lastOpenShapeIndex === index\n                        ? shapeWithCursor\n                        : shape.points;\n                    const onClosingPoint =\n                      distance(\n                        head.x,\n                        head.y,\n                        cursorPosition.x,\n                        cursorPosition.y\n                      ) > SHAPE_CLOSE_DISTANCE;\n                    const lines = [\n                      <circle\n                        data-shape-index={index}\n                        data-point-index={0}\n                        className={\"segment\"}\n                        data-is-segment={true}\n                        data-is-closing-point={true}\n                        key={`closing-point-${index}`}\n                        cx={head.x}\n                        cy={head.y}\n                        fill={onClosingPoint ? \"orange\" : \"blue\"}\n                        r={SEGMENT_CIRCLE_RADIUS}\n                      />,\n                    ];\n                    let keyIndex = 0;\n                    for (const point of tail) {\n                      keyIndex++;\n                      lines.push(\n                        <g key={`segments-${index}-${keyIndex}`}>\n                          {drawState === DRAW_STATE_INSERT_SEGMENT &&\n                            currentShapeIndex === index &&\n                            currentSegmentIndex === keyIndex && (\n                              <circle\n                                className={\"segment\"}\n                                data-is-segment={true}\n                                cx={100}\n                                cy={200}\n                                fill={\"black\"}\n                                r={SEGMENT_CIRCLE_RADIUS}\n                                {...(() => {\n                                  const reflection = reflect(\n                                    cursorPosition,\n                                    head,\n                                    point\n                                  );\n                                  return {\n                                    cx: (reflection.x + cursorPosition.x) / 2,\n                                    cy: (reflection.y + cursorPosition.y) / 2,\n                                  };\n                                })()}\n                              />\n                            )}\n                          <circle\n                            data-shape-index={index}\n                            data-point-index={keyIndex}\n                            className={\"segment\"}\n                            data-is-segment={true}\n                            cx={point.x}\n                            cy={point.y}\n                            fill={\n                              (() => {\n                                let isPointInSelectionRectangle;\n\n                                if (drawState === DRAW_STATE_SELECTION_SET) {\n                                  isPointInSelectionRectangle =\n                                    isPointInRectangle(\n                                      point,\n                                      selectionRectangle\n                                    );\n                                } else if (\n                                  drawState ===\n                                  DRAW_STATE_MOVE_SELECTED_SEGMENTS\n                                ) {\n                                  let _shapeIndex = 0;\n                                  let _pointIndex = 0;\n                                  for (shape of shapes) {\n                                    if (index === _shapeIndex) {\n                                      break;\n                                    }\n                                    _shapeIndex++;\n                                    _pointIndex += shape.points.length;\n                                  }\n                                  return (\n                                    selectedPointIndexes.indexOf(\n                                      _pointIndex + keyIndex\n                                    ) > -1\n                                  );\n                                } else {\n                                  isPointInSelectionRectangle = false;\n                                }\n\n                                const isPointInCurrentSelection =\n                                  drawState === DRAW_STATE_SELECTION_STARTED &&\n                                  isPointInRectangle(\n                                    point,\n                                    calculateSelectionRectangle(\n                                      mouseDownCursorPosition,\n                                      cursorPosition\n                                    )\n                                  );\n\n                                return (\n                                  isPointInSelectionRectangle ||\n                                  isPointInCurrentSelection\n                                );\n                              })()\n                                ? \"blue\"\n                                : \"silver\"\n                            }\n                            r={SEGMENT_CIRCLE_RADIUS}\n                          />\n                          <line\n                            stroke={\"black\"}\n                            x1={head.x}\n                            y1={head.y}\n                            x2={point.x}\n                            y2={point.y}\n                            data-is-segment-line={true}\n                            data-shape-index={index}\n                            data-segment-index={keyIndex}\n                          />\n                        </g>\n                      );\n                      head = point;\n                    }\n                    return lines;\n                  })()}\n                </g>\n              );\n            })}\n            {drawState === DRAW_STATE_SELECTION_STARTED &&\n              (() => {\n                const { x, y, width, height } = calculateSelectionRectangle(\n                  mouseDownCursorPosition,\n                  cursorPosition\n                );\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    className={\"selection-rectangle\"}\n                  ></rect>\n                );\n              })()}\n          </svg>\n        </div>\n        <div className=\"tools\">\n          <div className=\"preview\">\n            {previews.map((previewSize, index) => (\n              <div\n                className={\"preview-square\"}\n                key={`preview-${index}`}\n                style={{ width: previewSize }}\n              >\n                <h3>\n                  {previewSize}x{previewSize}\n                </h3>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"canvas\"\n                  id={`preview-${index}`}\n                  width={previewSize}\n                  height={previewSize}\n                >\n                  {shapes.map((shape, index) => {\n                    const divider = 512 / previewSize;\n                    const pointsAsSVGString = buildSVGPath(\n                      [...shape.points, cursorPosition],\n                      divider\n                    );\n\n                    return (\n                      <g key={index}>\n                        <path\n                          d={pointsAsSVGString}\n                          stroke={shape.stroke || \"black\"}\n                          fill={shape.fill}\n                        />\n                      </g>\n                    );\n                  })}\n                </svg>\n                <a\n                  href=\"#\"\n                  className={\"download-link\"}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    const svgImage = document.createElement(\"img\");\n                    svgImage.width = previewSize;\n                    svgImage.height = previewSize;\n                    document.body.appendChild(svgImage);\n                    svgImage.onload = () => {\n                      const canvas = document.createElement(\"canvas\");\n                      canvas.width = svgImage.clientWidth;\n                      canvas.height = svgImage.clientHeight;\n                      const canvasCtx = canvas.getContext(\"2d\");\n                      canvasCtx.drawImage(svgImage, 0, 0);\n                      const imageDataURL = canvas.toDataURL(\"image/png\");\n                      svgImage.parentElement.removeChild(svgImage);\n                      URL.revokeObjectURL(svgImage.src);\n                      const downloadLink = document.createElement(\"a\");\n                      downloadLink.href = imageDataURL;\n                      downloadLink.download = `icon-${previewSize}.png`;\n                      downloadLink.click();\n                    };\n                    svgImage.src = URL.createObjectURL(\n                      new Blob(\n                        [document.getElementById(`preview-${index}`).outerHTML],\n                        {\n                          type: \"image/svg+xml\",\n                        }\n                      )\n                    );\n                  }}\n                >\n                  download\n                </a>\n              </div>\n            ))}\n          </div>\n\n          <div id=\"bio\">\n          I’m a self-taught full-stack software developer. I code with Python in backend; with Django framework, and other micro frameworks such as Flask. I am experienced in AsyncIO which is a Python equivalent of non-blocking servers such as NodeJS. In frontend, I worked with many libraries and state management tools.\n          <a href=\"cv.pdf\">Resume.</a>\n          </div>\n        </div>\n      </div>\n      <footer>Fatih Erikli — 2021 — Creative Commons</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}