{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["replaceStateTimeoutId","INITIAL_SHAPES","points","x","y","isControlPoint","fill","reflect","p","p0","p1","dx","dy","a","b","Math","round","DRAW_STATE_SELECTION_STARTED","DRAW_STATE_LABELS","CONTEXT_MENU_ACTION_DUPLICATE","CONTEXT_MENU_ACTIONS","handleContextMenu","drawState","showContextMenuSetterFunction","contextMenuPositionSetterFunction","shapes","shapesSetterFunction","drawStateSetterFunction","currentShapeIndex","currentSegmentIndex","event","preventDefault","clientRect","document","querySelector","getBoundingClientRect","cursorPosition","clientX","left","clientY","top","shape","head","point","reflection","midpoint","newPoints","splice","map","index","handleMouseDown","currentShapeIndexSetterFunction","selectedShapeIndexSetterFunction","currentSegmentIndexSetterFunction","mouseDownCursorPositionSetterFunction","mouseDownShapePointsSetterFunction","selectionRectangle","setMouseDownSelectionRectangle","selectedPointIndexesSetterFunction","isMouseDownSetterFunction","showContextMenu","target","dataset","isCanvas","isContextMenuAction","buttons","shapeIndex","pointIndex","Number","isEmptySpace","isSegmentLine","isSegment","isPolygon","flatPoints","flat","selectedPointIndexes","isPointInRectangle","filter","Boolean","findLastOpenShapeIndex","findIndex","last","length","first","continueDrawing","mouseDownCursorPosition","selectionRectangleSetterFunction","currentFillColor","_hasSelection","calculateSelectionRectangle","innerLoop","_","selectionIsValid","canvasBoundingClientRect","right","bottom","newShapes","lastOpenShapeIndex","newAppState","newShape","cursorPositionOrClosingPoint","distance","handleMouseMove","cursorPositionSetterFunction","mouseDownShapePoints","keyStates","setSelectionRectangle","mouseDownSelectionRectangle","isMouseDown","console","log","controlPointMutation","lastOpenShape","_shapeIndex","cachedPointIndex","indexOf","segmentIndex","isShiftPressed","max","min","handleContextMenuAction","action","currentShape","ColorInput","color","onChange","useState","showPicker","setShowPicker","currentWheelColor","setCurrentWheelColor","currentShadeColor","setCurrentShadeColor","shadesRef","useRef","wheelRef","useEffect","current","wheelContext","getContext","wheelGradient","createLinearGradient","addColorStop","rect","fillStyle","shadesContext","fillRect","whiteGradient","blackGradient","className","style","background","onClick","onMouseDown","box","floor","getImageData","data","r","g","ref","height","width","x1","y1","x2","y2","sqrt","handleKeyUp","keyStatesSetterFunction","isCtrlPressed","minX","minY","rectangle","parseRGBA","parts","split","parseFloat","toRGBAString","buildSVGPath","divider","svgString","forEach","isLast","App","setDrawState","setCursorPosition","setMouseDownCursorPosition","setIsMouseDown","setMouseDownShapePoints","setCurrentShapeIndex","selectedShapeIndex","setSelectedShapeIndex","setCurrentSegmentIndex","name","defaults","state","setState","value","clearTimeout","setTimeout","window","location","href","hashStates","found","builtHashStates","reduce","prev","hashName","hashValue","JSON","stringify","join","history","pushState","fragment","parse","decodeURIComponent","useHashedState","setShapes","refreshShapesState","setKeyStates","setSelectedPointIndexes","setCurrentFillColor","currentStrokeColor","setCurrentStrokeColor","setShowContextMenu","contextMenuPosition","setContextMenuPosition","onpopstate","onhashchange","selectedShape","stroke","tabIndex","onKeyDown","keyStateUpdates","shiftKey","ctrlKey","onKeyUp","onContextMenu","onMouseMove","onMouseUp","float","pickedColor","updateCurrentShapeFill","marginTop","updateCurrentShapeStroke","xmlns","Array","undefined","shapeWithCursor","pointsAsSVGString","d","tail","onClosingPoint","lines","cx","cy","keyIndex","push","isPointInSelectionRectangle","_pointIndex","isPointInCurrentSelection","previewSize","id","svgImage","createElement","body","appendChild","onload","canvas","clientWidth","clientHeight","drawImage","imageDataURL","toDataURL","parentElement","removeChild","URL","revokeObjectURL","src","downloadLink","download","click","createObjectURL","Blob","getElementById","outerHTML","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.015dd7cd.chunk.js","sourcesContent":["import { useState, React, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nconst INITIAL_SHAPES = [\n  {\n    points: [\n      { x: 151, y: 290.3000030517578 },\n      { x: 145, y: 270.3000030517578 },\n      { x: 141, y: 263.3000030517578 },\n      { x: 113, y: 214.3000030517578 },\n      { x: 113, y: 161.3000030517578 },\n      { x: 144, y: 137.3000030517578 },\n      { x: 159, y: 126.30000305175781 },\n      { x: 166, y: 123.30000305175781 },\n      { x: 145, y: 97.30000305175781 },\n      { x: 232, y: 58.30000305175781 },\n      { isControlPoint: true, x: 260.1000061035156, y: 60.275001525878906 },\n      { x: 287.5, y: 62.30000305175781 },\n      { x: 304.5, y: 60.30000305175781 },\n      { isControlPoint: true, x: 316.6000061035156, y: 45.775001525878906 },\n      { x: 344.5, y: 84.11666870117188 },\n      { isControlPoint: true, x: 367.6000061035156, y: 87.2750015258789 },\n      { x: 382.20001220703125, y: 112.46665954589844 },\n      { isControlPoint: true, x: 411.1000061035156, y: 119.55000305175781 },\n      { x: 417, y: 172.3000030517578 },\n      { x: 398.5, y: 218.11666870117188 },\n      { x: 379, y: 275.3000030517578 },\n      { x: 366, y: 338.3000030517578 },\n      { x: 366, y: 282.3000030517578 },\n      { x: 363, y: 267.3000030517578 },\n      { x: 344, y: 184.3000030517578 },\n      { x: 343.6000061035156, y: 183.85832977294922 },\n      { isControlPoint: true, x: 275.1166687011719, y: 164.9000015258789 },\n      { x: 209, y: 173.3000030517578 },\n      { x: 172, y: 156.3000030517578 },\n      { x: 158, y: 216.3000030517578 },\n      { x: 159, y: 338.3000030517578 },\n      { x: 151, y: 290.3000030517578 },\n    ],\n    fill: \"rgba(240, 240, 240, 0.9)\",\n  },\n  {\n    points: [\n      { x: 249, y: 410.6333312988281 },\n      { x: 262, y: 412.066650390625 },\n      { x: 277, y: 409.6333312988281 },\n      { x: 270, y: 429.01666259765625 },\n      { x: 263, y: 433.6333312988281 },\n      { x: 254, y: 428.01666259765625 },\n      { x: 249, y: 410.6333312988281 },\n    ],\n    fill: \"rgba(244, 244, 244, 0.9)\",\n  },\n  {\n    points: [\n      { x: 215, y: 399.3833312988281 },\n      { x: 223, y: 387.3833312988281 },\n      { x: 254, y: 380.3833312988281 },\n      { x: 262, y: 377.3833312988281 },\n      { x: 268, y: 377.3833312988281 },\n      { x: 272, y: 380.3833312988281 },\n      { x: 280, y: 381.3833312988281 },\n      { x: 302, y: 385.3833312988281 },\n      { x: 312, y: 390.3833312988281 },\n      { x: 315, y: 397.3833312988281 },\n      { x: 317, y: 398.3833312988281 },\n      { x: 322, y: 389.3833312988281 },\n      { x: 313, y: 375.3833312988281 },\n      { x: 285, y: 365.3833312988281 },\n      { x: 279, y: 361.3833312988281 },\n      { x: 277, y: 359.3833312988281 },\n      { x: 269, y: 361.3833312988281 },\n      { x: 265, y: 361.3833312988281 },\n      { x: 260, y: 359.3833312988281 },\n      { x: 255, y: 358.3833312988281 },\n      { x: 251, y: 359.3833312988281 },\n      { x: 243, y: 365.3833312988281 },\n      { x: 229, y: 367.3833312988281 },\n      { x: 218, y: 371.3833312988281 },\n      { x: 210, y: 378.3833312988281 },\n      { x: 205, y: 390.3833312988281 },\n      { x: 208, y: 395.3833312988281 },\n      { x: 215, y: 399.3833312988281 },\n    ],\n    fill: \"rgba(240, 240, 240, 0.9)\",\n  },\n  {\n    points: [\n      { x: 276, y: 264.1000061035156 },\n      { x: 297, y: 259.1000061035156 },\n      { x: 316, y: 252.6999969482422 },\n      { x: 338, y: 253.10000610351562 },\n      { x: 355, y: 263.1000061035156 },\n      { x: 341, y: 244.10000610351562 },\n      { x: 329, y: 241.6999969482422 },\n      { x: 316, y: 242.10000610351562 },\n      { x: 292, y: 244.10000610351562 },\n      { x: 280, y: 249.10000610351562 },\n      { x: 276, y: 264.1000061035156 },\n    ],\n    fill: \"rgba(242, 242, 242, 0.9)\",\n  },\n  {\n    points: [\n      { x: 167, y: 270.1000061035156 },\n      { x: 185, y: 259.1000061035156 },\n      { x: 198, y: 256.6999969482422 },\n      { x: 216, y: 261.1000061035156 },\n      { x: 238, y: 267.1000061035156 },\n      { x: 238, y: 253.10000610351562 },\n      { x: 226, y: 247.6999969482422 },\n      { x: 214, y: 246.10000610351562 },\n      { x: 196, y: 245.6999969482422 },\n      { x: 180, y: 248.10000610351562 },\n      { x: 171, y: 255.10000610351562 },\n      { x: 167, y: 270.1000061035156 },\n    ],\n    fill: \"rgba(252, 252, 252, 0.9)\",\n  },\n  {\n    points: [\n      { x: 284, y: 284.3000030517578 },\n      { x: 295, y: 275.3000030517578 },\n      { x: 307, y: 273.3000030517578 },\n      { x: 323, y: 273.3000030517578 },\n      { x: 329, y: 275.9499969482422 },\n      { x: 338, y: 282.3000030517578 },\n      { x: 330.5, y: 278.91666412353516 },\n      { x: 328.5, y: 277.6500015258789 },\n      { x: 326, y: 276.3000030517578 },\n      { x: 311, y: 273.3000030517578 },\n      { x: 304, y: 274.3000030517578 },\n      { x: 297, y: 276.3000030517578 },\n      { x: 286, y: 284.3000030517578 },\n      { x: 284, y: 284.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 282, y: 284.3000030517578 },\n      { x: 294, y: 287.3000030517578 },\n      { x: 302, y: 290.3000030517578 },\n      { x: 311, y: 290.3000030517578 },\n      { x: 319, y: 288.3000030517578 },\n      { x: 328, y: 283.3000030517578 },\n      { x: 336, y: 282.3000030517578 },\n      { x: 330, y: 284.3000030517578 },\n      { x: 326, y: 286.3000030517578 },\n      { x: 320, y: 290.3000030517578 },\n      { x: 316, y: 291.3000030517578 },\n      { x: 303, y: 292.3000030517578 },\n      { x: 294, y: 289.3000030517578 },\n      { x: 282, y: 284.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 176, y: 287.3000030517578 },\n      { x: 186, y: 282.3000030517578 },\n      { x: 190, y: 280.3000030517578 },\n      { x: 195, y: 278.3000030517578 },\n      { x: 208, y: 278.3000030517578 },\n      { x: 211, y: 279.31666564941406 },\n      { x: 215, y: 281.3000030517578 },\n      { x: 225, y: 287.3000030517578 },\n      { x: 230, y: 289.3000030517578 },\n      { x: 234, y: 290.3000030517578 },\n      { x: 234, y: 289.3000030517578 },\n      { x: 229, y: 287.3000030517578 },\n      { x: 222, y: 284.3000030517578 },\n      { x: 215, y: 279.3000030517578 },\n      { x: 209, y: 276.3000030517578 },\n      { x: 201, y: 276.3000030517578 },\n      { x: 194, y: 276.3000030517578 },\n      { x: 184, y: 280.3000030517578 },\n      { x: 182, y: 282.3000030517578 },\n      { x: 176, y: 287.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 229, y: 289.3000030517578 },\n      { x: 219, y: 292.3000030517578 },\n      { x: 214, y: 295.3000030517578 },\n      { x: 207, y: 295.8999938964844 },\n      { x: 200, y: 296.3000030517578 },\n      { x: 186, y: 294.6999969482422 },\n      { x: 182, y: 291.3000030517578 },\n      { x: 177, y: 287.3000030517578 },\n      { x: 183, y: 291.3000030517578 },\n      { x: 187, y: 293.3000030517578 },\n      { x: 201, y: 294.3000030517578 },\n      { x: 212, y: 294.3000030517578 },\n      { x: 219, y: 291.3000030517578 },\n      { x: 229, y: 289.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 197, y: 281.3000030517578 },\n      { x: 196, y: 285 },\n      { x: 196, y: 289.3000030517578 },\n      { x: 198, y: 292.3000030517578 },\n      { x: 203, y: 294.3000030517578 },\n      { x: 203, y: 294.1500015258789 },\n      { x: 209, y: 293 },\n      { x: 212, y: 291 },\n      { x: 213, y: 287.3000030517578 },\n      { x: 212, y: 283.3000030517578 },\n      { x: 207, y: 280.3000030517578 },\n      { x: 203, y: 279.3000030517578 },\n      { x: 199, y: 280.3000030517578 },\n      { x: 197, y: 281.3000030517578 },\n    ],\n    fill: \"rgba(233, 233, 233, 1)\",\n  },\n  {\n    points: [\n      { x: 303, y: 277.3000030517578 },\n      { x: 303, y: 284.3000030517578 },\n      { x: 305, y: 288.3000030517578 },\n      { x: 311, y: 289.3000030517578 },\n      { isControlPoint: true, x: 315.1000061035156, y: 288.2750015258789 },\n      { x: 315.1000061035156, y: 288.2750015258789 },\n      { x: 318, y: 285.3000030517578 },\n      { x: 318, y: 280.3000030517578 },\n      { x: 316, y: 276.3000030517578 },\n      { x: 311, y: 274.3000030517578 },\n      { x: 306, y: 275.3000030517578 },\n      { x: 303, y: 277.3000030517578 },\n    ],\n    fill: \"rgba(233, 233, 233, 0.9)\",\n  },\n  {\n    points: [\n      { x: 231, y: 393.29998779296875 },\n      { x: 253, y: 388.29998779296875 },\n      { x: 261, y: 387.29998779296875 },\n      { x: 265, y: 387.3000030517578 },\n      { x: 268, y: 387.29998779296875 },\n      { x: 277, y: 388.29998779296875 },\n      { x: 286, y: 390.29998779296875 },\n      { x: 294, y: 393.29998779296875 },\n      { x: 278, y: 391.29998779296875 },\n      { x: 273, y: 391.29998779296875 },\n      { x: 263, y: 391.29998779296875 },\n      { x: 254, y: 391.29998779296875 },\n      { x: 247, y: 392.29998779296875 },\n      { x: 239, y: 394.29998779296875 },\n      { x: 231, y: 393.29998779296875 },\n    ],\n  },\n  {\n    points: [\n      { x: 231, y: 391.4499969482422 },\n      { x: 240, y: 399.4499969482422 },\n      { x: 246, y: 400.3000030517578 },\n      { x: 252, y: 400.4499969482422 },\n      { x: 276, y: 400.4499969482422 },\n      { x: 285, y: 396.4499969482422 },\n      { x: 290, y: 394.21665954589844 },\n      { x: 294, y: 392.4499969482422 },\n      { x: 281, y: 395.4499969482422 },\n      { x: 277, y: 397.4499969482422 },\n      { x: 267, y: 398.4499969482422 },\n      { x: 252, y: 397.4499969482422 },\n      { x: 242, y: 397.4499969482422 },\n      { x: 231, y: 391.4499969482422 },\n    ],\n    fill: \"rgba(252, 252, 252, 0.9)\",\n  },\n];\n\nconst reflect = (p, p0, p1) => {\n  // https://gist.github.com/balint42/b99934b2a6990a53e14b\n  let dx, dy, a, b, x, y;\n  dx = p1.x - p0.x;\n  dy = p1.y - p0.y;\n  a = (dx * dx - dy * dy) / (dx * dx + dy * dy);\n  b = (2 * dx * dy) / (dx * dx + dy * dy);\n  x = Math.round(a * (p.x - p0.x) + b * (p.y - p0.y) + p0.x);\n  y = Math.round(b * (p.x - p0.x) - a * (p.y - p0.y) + p0.y);\n  return { x, y };\n};\n\nconst DRAW_STATE_READY = 1;\nconst DRAW_STATE_START = 2;\nconst DRAW_STATE_MOVE_SEGMENT = 3;\nconst DRAW_STATE_INSERT_SEGMENT = 4;\nconst DRAW_STATE_SELECTION = 5;\nconst DRAW_STATE_MOVE_SHAPE = 6;\nconst DRAW_STATE_ON_SHAPE = 7;\nconst DRAW_STATE_ON_SEGMENT = 8;\nconst DRAW_STATE_REMOVE_SEGMENT = 9;\nconst DRAW_STATE_REMOVE_SHAPE = 10;\nconst DRAW_STATE_SELECTION_STARTED = 11;\nconst DRAW_STATE_ON_SEGMENT_SELECTION = 12;\nconst DRAW_STATE_MOVE_SELECTED_SEGMENTS = 13;\nconst DRAW_STATE_SELECTION_SET = 14;\n\nconst SHAPE_CLOSE_DISTANCE = 2;\nconst SEGMENT_CIRCLE_RADIUS = 2;\n\nconst DRAW_STATE_LABELS = {\n  [DRAW_STATE_READY]: \"Click on canvas and drag it to start drawing\",\n  [DRAW_STATE_START]: \"Click on another point to connect with the latest\",\n  [DRAW_STATE_MOVE_SEGMENT]: \"Moving a segment of a shape\",\n  [DRAW_STATE_INSERT_SEGMENT]:\n    \"Click on the a point on the line to insert a segment\",\n  [DRAW_STATE_SELECTION]: \"Select points to move\",\n  [DRAW_STATE_ON_SHAPE]: \"Drag the shape to move\",\n  [DRAW_STATE_MOVE_SHAPE]: \"Moving a shape\",\n  [DRAW_STATE_ON_SEGMENT]: \"Drag the segment to move it\",\n  [DRAW_STATE_REMOVE_SEGMENT]: \"Click on the segment to remove\",\n  [DRAW_STATE_REMOVE_SHAPE]: \"Click on the shape to remove\",\n  [DRAW_STATE_SELECTION_STARTED]: \"Selection started\",\n  [DRAW_STATE_ON_SEGMENT_SELECTION]: \"Move selected segments\",\n  [DRAW_STATE_MOVE_SELECTED_SEGMENTS]: \"Moving selected segments\",\n  [DRAW_STATE_SELECTION_SET]: \"Selection set\",\n};\n\nconst CONTEXT_MENU_ACTION_DUPLICATE = \"Duplicate\";\nconst CONTEXT_MENU_ACTIONS = [CONTEXT_MENU_ACTION_DUPLICATE];\n\nfunction handleContextMenu(\n  drawState,\n  showContextMenuSetterFunction,\n  contextMenuPositionSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex\n) {\n  return (event) => {\n    event.preventDefault();\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    const cursorPosition = {\n      x: event.clientX - clientRect.left,\n      y: event.clientY - clientRect.top,\n    };\n    contextMenuPositionSetterFunction({\n      x: cursorPosition.x + clientRect.left,\n      y: cursorPosition.y + clientRect.top,\n    });\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        isControlPoint: true,\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    } else {\n      showContextMenuSetterFunction(true);\n    }\n  };\n}\n\nfunction handleMouseDown(\n  drawState,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  selectedShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  cursorPosition,\n  mouseDownCursorPositionSetterFunction,\n  mouseDownShapePointsSetterFunction,\n  selectionRectangle,\n  setMouseDownSelectionRectangle,\n  selectedPointIndexesSetterFunction,\n  isMouseDownSetterFunction,\n  showContextMenuSetterFunction,\n  showContextMenu\n) {\n  return (event) => {\n    isMouseDownSetterFunction(true);\n    if (event.target.dataset.isCanvas) {\n      showContextMenuSetterFunction(false);\n    }\n    if (event.target.dataset.isContextMenuAction || showContextMenu) {\n      return;\n    }\n    if (event.buttons === 2) {\n      event.preventDefault();\n      return false;\n    }\n\n    if (drawState === DRAW_STATE_READY) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n    }\n\n    if (drawState === DRAW_STATE_ON_SEGMENT) {\n      const { shapeIndex, pointIndex } = event.target.dataset;\n      currentShapeIndexSetterFunction(Number(shapeIndex));\n      selectedShapeIndexSetterFunction(Number(shapeIndex));\n      currentSegmentIndexSetterFunction(Number(pointIndex));\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_SET) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      const isEmptySpace =\n        !event.target.dataset.isSegmentLine &&\n        !event.target.dataset.isSegment &&\n        !event.target.dataset.isPolygon;\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      if (isEmptySpace) {\n        drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n      } else {\n        const flatPoints = shapes.map((shape) => shape.points).flat();\n        mouseDownShapePointsSetterFunction(flatPoints);\n        const selectedPointIndexes = flatPoints\n          .map((point, index) =>\n            isPointInRectangle(point, selectionRectangle) ? { index } : null\n          )\n          .filter(Boolean)\n          .map(({ index }) => index);\n        setMouseDownSelectionRectangle({\n          x: selectionRectangle.x,\n          y: selectionRectangle.y,\n        });\n        selectedPointIndexesSetterFunction(selectedPointIndexes);\n        drawStateSetterFunction(DRAW_STATE_MOVE_SELECTED_SEGMENTS);\n      }\n    }\n\n    if (drawState === DRAW_STATE_ON_SHAPE) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      selectedShapeIndexSetterFunction(currentShapeIndex);\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      mouseDownShapePointsSetterFunction(shapes[currentShapeIndex].points);\n      drawStateSetterFunction(DRAW_STATE_MOVE_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n  };\n}\n\nfunction findLastOpenShapeIndex(shapes) {\n  return shapes.findIndex(({ points }) => {\n    const last = points[points.length - 1];\n    const first = points[0];\n    return points.length < 3 || !(first.x === last.x && first.y === last.y);\n  });\n}\n\nfunction continueDrawing(\n  cursorPosition,\n  drawStateSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawState,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  mouseDownCursorPosition,\n  selectionRectangleSetterFunction,\n  currentFillColor,\n  isMouseDownSetterFunction\n) {\n  return (event) => {\n    isMouseDownSetterFunction(false);\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      drawStateSetterFunction(DRAW_STATE_READY);\n      currentShapeIndexSetterFunction(-1);\n      currentSegmentIndexSetterFunction(-1);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_STARTED) {\n      const selectionRectangle = calculateSelectionRectangle(\n        mouseDownCursorPosition,\n        cursorPosition\n      );\n      selectionRectangleSetterFunction(selectionRectangle);\n      let _hasSelection;\n      for (const shape of shapes) {\n        innerLoop: for (const point of shape.points) {\n          _hasSelection = isPointInRectangle(point, selectionRectangle);\n          if (_hasSelection) {\n            break innerLoop;\n          }\n        }\n        if (_hasSelection) {\n          break;\n        }\n      }\n      drawStateSetterFunction(\n        _hasSelection ? DRAW_STATE_SELECTION_SET : DRAW_STATE_READY\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      drawStateSetterFunction(DRAW_STATE_SELECTION_SET);\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      drawStateSetterFunction(DRAW_STATE_ON_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.filter((_, index) => index !== currentShapeIndex)\n      );\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.filter(\n            (point, pointIndex) =>\n              !(shapeIndex === currentShapeIndex) ||\n              (shapeIndex === currentShapeIndex &&\n                currentSegmentIndex !== pointIndex)\n          ),\n        }))\n      );\n    }\n\n    const selectionIsValid =\n      mouseDownCursorPosition.x !== cursorPosition.x &&\n      mouseDownCursorPosition.y !== cursorPosition.y;\n\n    const isEmptySpace =\n      !event.target.dataset.isSegmentLine &&\n      !event.target.dataset.isSegment &&\n      !event.target.dataset.isPolygon;\n\n    if (drawState === DRAW_STATE_START || (!selectionIsValid && isEmptySpace)) {\n      const canvasBoundingClientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      if (\n        event.clientX < canvasBoundingClientRect.left ||\n        event.clientX > canvasBoundingClientRect.right ||\n        event.clientY < canvasBoundingClientRect.top ||\n        event.clientY > canvasBoundingClientRect.bottom\n      ) {\n        return;\n      }\n\n      const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n\n      let newShapes;\n      let newAppState = DRAW_STATE_START;\n      if (lastOpenShapeIndex === -1) {\n        newShapes = [...shapes, { points: [cursorPosition] }];\n      } else {\n        newShapes = shapes.map((shape, index) => {\n          let newShape;\n          if (index === lastOpenShapeIndex) {\n            let cursorPositionOrClosingPoint;\n\n            if (\n              distance(\n                cursorPosition.x,\n                cursorPosition.y,\n                shape.points[0].x,\n                shape.points[0].y\n              ) < SHAPE_CLOSE_DISTANCE\n            ) {\n              cursorPositionOrClosingPoint = shape.points[0];\n              newAppState = DRAW_STATE_READY;\n            } else {\n              cursorPositionOrClosingPoint = cursorPosition;\n            }\n\n            newShape = {\n              fill: currentFillColor,\n              points: [...shape.points, cursorPositionOrClosingPoint],\n            };\n          } else {\n            newShape = shape;\n          }\n\n          return newShape;\n        });\n      }\n\n      drawStateSetterFunction(newAppState);\n      shapesSetterFunction(newShapes);\n    }\n  };\n}\n\nfunction handleMouseMove(\n  cursorPositionSetterFunction,\n  drawState,\n  currentShapeIndex,\n  currentSegmentIndex,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  mouseDownCursorPosition,\n  mouseDownShapePoints,\n  keyStates,\n  selectionRectangle,\n  setSelectionRectangle,\n  mouseDownSelectionRectangle,\n  selectedPointIndexes,\n  isMouseDown,\n  showContextMenu\n) {\n  return ({ clientX, clientY, target }) => {\n    if (showContextMenu) {\n      return;\n    }\n\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    let cursorPosition = {\n      x: clientX - clientRect.left,\n      y: clientY - clientRect.top,\n    };\n\n    cursorPositionSetterFunction(cursorPosition);\n\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      console.log(cursorPosition, currentShapeIndex, currentSegmentIndex);\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            currentShapeIndex === shapeIndex &&\n            (currentSegmentIndex === pointIndex ||\n              (currentSegmentIndex === shape.points.length - 1 &&\n                pointIndex === 0))\n              ? { ...point, ...cursorPosition }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_START) {\n      if (isMouseDown) {\n        const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n        const lastOpenShape = shapes[lastOpenShapeIndex];\n        if (!lastOpenShape) {\n          return drawStateSetterFunction(DRAW_STATE_READY);\n        }\n        const isLastDrawnPointIsControlPoint =\n          lastOpenShape.points.length > 2 &&\n          Boolean(\n            lastOpenShape.points[lastOpenShape.points.length - 1].isControlPoint\n          );\n        let controlPointMutation;\n        if (isLastDrawnPointIsControlPoint) {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: shape.points.map((point, index) =>\n                  index === shape.points.length - 1\n                    ? { ...point, ...cursorPosition }\n                    : point\n                ),\n              };\n            } else {\n              return shape;\n            }\n          });\n        } else {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: [\n                  ...shape.points,\n                  { ...cursorPosition },\n                  { isControlPoint: true, ...cursorPosition },\n                ],\n              };\n            } else {\n              return shape;\n            }\n          });\n        }\n        shapesSetterFunction(controlPointMutation);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      let _shapeIndex = 0;\n      setSelectionRectangle({\n        ...selectionRectangle,\n        x:\n          mouseDownSelectionRectangle.x -\n          (mouseDownCursorPosition.x - cursorPosition.x),\n        y:\n          mouseDownSelectionRectangle.y -\n          (mouseDownCursorPosition.y - cursorPosition.y),\n      });\n      shapesSetterFunction(\n        shapes.map((shape) => ({\n          ...shape,\n          points: shape.points.map((point) => {\n            const cachedPointIndex = _shapeIndex;\n            _shapeIndex++;\n            return selectedPointIndexes.indexOf(cachedPointIndex) > -1\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[cachedPointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[cachedPointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point;\n          }),\n        }))\n      );\n    }\n\n    if (\n      drawState === DRAW_STATE_READY ||\n      drawState === DRAW_STATE_ON_SHAPE ||\n      drawState === DRAW_STATE_ON_SEGMENT ||\n      drawState === DRAW_STATE_ON_SEGMENT_SELECTION ||\n      drawState === DRAW_STATE_REMOVE_SHAPE ||\n      drawState === DRAW_STATE_REMOVE_SEGMENT\n    ) {\n      const {\n        isSegmentLine,\n        isSegment,\n        isPolygon,\n        shapeIndex,\n        segmentIndex,\n        pointIndex,\n      } = target.dataset;\n      // todo: merge pointIndex and segmentIndex\n      if (isSegmentLine) {\n        drawStateSetterFunction(DRAW_STATE_INSERT_SEGMENT);\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(segmentIndex));\n      } else if (isPolygon) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SHAPE\n            : DRAW_STATE_ON_SHAPE\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n      } else if (isSegment) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SEGMENT\n            : DRAW_STATE_ON_SEGMENT\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(pointIndex));\n      } else {\n        drawStateSetterFunction(DRAW_STATE_READY);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            shapeIndex === currentShapeIndex\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[pointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[pointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const midpointDistance = distance(\n        midpoint.x,\n        midpoint.y,\n        cursorPosition.x,\n        cursorPosition.y\n      );\n      if (\n        midpointDistance > 1 ||\n        midpoint.y > Math.max(head.y, point.y) ||\n        midpoint.y < Math.min(head.y, point.y) ||\n        midpoint.x > Math.max(head.x, point.x) ||\n        midpoint.x < Math.min(head.x, point.x)\n      ) {\n        drawStateSetterFunction(DRAW_STATE_READY);\n        currentShapeIndexSetterFunction(-1);\n        currentSegmentIndexSetterFunction(-1);\n      }\n    }\n  };\n}\n\nfunction handleContextMenuAction(\n  action,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  showContextMenuSetterFunction\n) {\n  return () => {\n    switch (action) {\n      case CONTEXT_MENU_ACTION_DUPLICATE:\n        const currentShape = shapes[currentShapeIndex];\n        if (!currentShape) {\n          return;\n        }\n        shapesSetterFunction([\n          ...shapes,\n          {\n            ...currentShape,\n            points: currentShape.points.map((point) => ({\n              ...point,\n              x: point.x + 25,\n              y: point.y + 25,\n            })),\n          },\n        ]);\n        break;\n    }\n    showContextMenuSetterFunction(false);\n  };\n}\n\nfunction ColorInput({ color, onChange }) {\n  const [showPicker, setShowPicker] = useState(false);\n  const [currentWheelColor, setCurrentWheelColor] = useState(color);\n  const [currentShadeColor, setCurrentShadeColor] = useState(color);\n  const shadesRef = useRef(null);\n  const wheelRef = useRef(null);\n  useEffect(() => {\n    if (wheelRef.current) {\n      const wheelContext = wheelRef.current.getContext(\"2d\");\n      const wheelGradient = wheelContext.createLinearGradient(0, 0, 0, 150);\n      wheelGradient.addColorStop(0, \"rgba(255, 0, 0, 1)\");\n      wheelGradient.addColorStop(0.17, \"rgba(255, 255, 0, 1)\");\n      wheelGradient.addColorStop(0.34, \"rgba(0, 255, 0, 1)\");\n      wheelGradient.addColorStop(0.51, \"rgba(0, 255, 255, 1)\");\n      wheelGradient.addColorStop(0.68, \"rgba(0, 0, 255, 1)\");\n      wheelGradient.addColorStop(0.85, \"rgba(255, 0, 255, 1)\");\n      wheelGradient.addColorStop(1, \"rgba(255, 0, 0, 1)\");\n      wheelContext.rect(0, 0, 30, 150);\n      wheelContext.fillStyle = wheelGradient;\n      wheelContext.fill();\n    }\n    if (shadesRef.current) {\n      const shadesContext = shadesRef.current.getContext(\"2d\");\n      shadesContext.fillStyle = currentWheelColor;\n      shadesContext.fillRect(0, 0, 150, 150);\n      const whiteGradient = shadesContext.createLinearGradient(0, 0, 150, 0);\n      whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n      whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n      shadesContext.fillStyle = whiteGradient;\n      shadesContext.fillRect(0, 0, 150, 150);\n      const blackGradient = shadesContext.createLinearGradient(0, 0, 0, 150);\n      blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n      blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n      shadesContext.fillStyle = blackGradient;\n      shadesContext.fillRect(0, 0, 150, 150);\n    }\n  }, [showPicker, currentWheelColor]);\n  return (\n    <div className={\"color-input\"}>\n      <div\n        style={{\n          background: currentShadeColor,\n        }}\n        className={\"color-input-preview\"}\n        onClick={() => setShowPicker(!showPicker)}\n      ></div>\n      {showPicker && (\n        <div className={\"color-input-picker\"}>\n          <canvas\n            onMouseDown={(event) => {\n              const box = shadesRef.current.getBoundingClientRect();\n              const point = {\n                x: Math.floor(event.clientX - box.left),\n                y: Math.floor(event.clientY - box.top),\n              };\n              const [r, g, b, _] = shadesRef.current\n                .getContext(\"2d\")\n                .getImageData(point.x, point.y, 1, 1).data;\n              setCurrentShadeColor(`rgba(${r}, ${g}, ${b}, 1)`);\n              onChange({ r, g, b, a: 1 });\n            }}\n            ref={shadesRef}\n            className={\"color-input-shades\"}\n            height=\"150\"\n            width=\"150\"\n          ></canvas>\n          <canvas\n            onMouseDown={(event) => {\n              const box = wheelRef.current.getBoundingClientRect();\n              const point = {\n                x: Math.floor(event.clientX - box.left),\n                y: Math.floor(event.clientY - box.top),\n              };\n              const [r, g, b, _] = wheelRef.current\n                .getContext(\"2d\")\n                .getImageData(point.x, point.y, 1, 1).data;\n              setCurrentWheelColor(`rgba(${r}, ${g}, ${b}, 1)`);\n            }}\n            ref={wheelRef}\n            className={\"color-input-wheel\"}\n            height=\"150\"\n            width=\"30\"\n          ></canvas>\n        </div>\n      )}\n    </div>\n  );\n}\n\nlet replaceStateTimeoutId;\n\nfunction useHashedState(name, defaults) {\n  const [state, setState] = useState(defaults);\n  return [\n    state,\n    (value, callback = () => {}) => {\n      if (replaceStateTimeoutId) {\n        clearTimeout(replaceStateTimeoutId);\n      }\n\n      replaceStateTimeoutId = setTimeout(() => {\n        const [_, ...hashStates] = (\n          window.location.href.indexOf(\"#\") > -1\n            ? window.location.href.split(\"#\")\n            : [null]\n        ).filter(Boolean);\n\n        let found = false;\n        const builtHashStates = hashStates\n          .reduce((prev, current) => {\n            let [hashName, hashValue] = current.split(\"=\");\n            if (name === hashName) {\n              found = true;\n              hashValue = JSON.stringify(value);\n              hashName = name;\n            }\n\n            return [...prev, `${hashName}=${hashValue}`];\n          }, [])\n          .join(\"#\");\n\n        if (!found) {\n          window.history.pushState(\n            null,\n            null,\n            `${\n              builtHashStates && `#${builtHashStates}`\n            }#${name}=${JSON.stringify(value)}`\n          );\n        } else {\n          window.history.pushState(null, null, `#${builtHashStates}`);\n        }\n      }, 50);\n      setState(value);\n    },\n    () => {\n      const [head, fragment] = window.location.href.split(`#${name}=`);\n      if (fragment) {\n        const [value] = fragment.split(\"#\");\n        setState(JSON.parse(decodeURIComponent(value)));\n      }\n    },\n  ];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const a = x1 - x2;\n  const b = y1 - y2;\n  return Math.sqrt(a * a + b * b);\n}\n\nfunction handleKeyDown(keyStatesSetterFunction) {\n  return (event) => {\n    let keyStateUpdates = {};\n    event.shiftKey && (keyStateUpdates[\"isShiftPressed\"] = true);\n    event.ctrlKey && (keyStateUpdates[\"isCtrlPressed\"] = true);\n    keyStatesSetterFunction(keyStateUpdates);\n  };\n}\n\nfunction handleKeyUp(keyStatesSetterFunction) {\n  return (_) => {\n    keyStatesSetterFunction({ isCtrlPressed: false, isShiftPressed: false });\n  };\n}\n\nfunction calculateSelectionRectangle(mouseDownCursorPosition, cursorPosition) {\n  const minX = Math.min(mouseDownCursorPosition.x, cursorPosition.x);\n  const minY = Math.min(mouseDownCursorPosition.y, cursorPosition.y);\n  const maxX = Math.max(mouseDownCursorPosition.x, cursorPosition.x);\n  const maxY = Math.max(mouseDownCursorPosition.y, cursorPosition.y);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nfunction isPointInRectangle(point, rectangle) {\n  return (\n    point.x > rectangle.x &&\n    point.x < rectangle.x + rectangle.width &&\n    point.y > rectangle.y &&\n    point.y < rectangle.y + rectangle.height\n  );\n}\n\nfunction updateCurrentShapeFill(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, fill: pickedColor } : shape\n    )\n  );\n}\n\nfunction updateCurrentShapeStroke(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, stroke: pickedColor } : shape\n    )\n  );\n}\n\nfunction parseRGBA(color) {\n  if (typeof color !== \"string\") {\n    return color;\n  }\n\n  const commaSaparatedString = color.split(\"(\")[1].split(\")\")[0];\n  const parts = commaSaparatedString.split(\",\");\n  const [r, g, b, a] = parts;\n  return {\n    r: Number(r),\n    g: Number(g),\n    b: Number(b),\n    a: parseFloat(a),\n  };\n}\n\nfunction toRGBAString(color) {\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n}\n\nfunction buildSVGPath(points, divider = 1) {\n  let svgString = \"\";\n  points.forEach(({ x, y, isControlPoint }, index) => {\n    const isLast = index === points.length - 1;\n    const isFirst = index === 0;\n\n    if (isFirst) {\n      svgString = `M ${x / divider},${y / divider}`;\n    }\n\n    if (isLast) {\n      svgString = `${svgString} Z ${points[0].x / divider},${\n        points[0].y / divider\n      }`;\n      return;\n    }\n\n    if (isControlPoint) {\n      svgString = `${svgString} ${x / divider},${y / divider} `;\n    } else if (points[index + 1].isControlPoint) {\n      svgString = `${svgString} Q ${x / divider},${y / divider} `;\n    } else {\n      svgString = `${svgString} L ${x / divider},${y / divider} `;\n    }\n  });\n  return svgString;\n}\n\nfunction App() {\n  const [drawState, setDrawState] = useState(DRAW_STATE_READY);\n  const [cursorPosition, setCursorPosition] = useState({ x: -1, y: -1 });\n  const [mouseDownCursorPosition, setMouseDownCursorPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [mouseDownShapePoints, setMouseDownShapePoints] = useState([]);\n  const [currentShapeIndex, setCurrentShapeIndex] = useState(-1);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(-1);\n  const [currentSegmentIndex, setCurrentSegmentIndex] = useState(-1);\n  const [shapes, setShapes, refreshShapesState] = useHashedState(\n    \"shapes\",\n    INITIAL_SHAPES\n  );\n  const [keyStates, setKeyStates] = useState({\n    isCtrlPressed: false,\n    isShiftPressed: false,\n  });\n  const [selectionRectangle, setSelectionRectangle] = useState(null);\n  const [mouseDownSelectionRectangle, setMouseDownSelectionRectangle] =\n    useState({ x: -1, y: -1 });\n  const [selectedPointIndexes, setSelectedPointIndexes] = useState([]);\n  const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n  const previews = [256, 128];\n  const [currentFillColor, setCurrentFillColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [currentStrokeColor, setCurrentStrokeColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  useEffect(() => {\n    refreshShapesState();\n    window.onpopstate = refreshShapesState;\n    window.onhashchange = refreshShapesState;\n  }, []);\n  useEffect(() => {\n    const selectedShape = shapes[selectedShapeIndex];\n    if (!selectedShape) {\n      return;\n    }\n    const { stroke, fill } = selectedShape;\n    fill && setCurrentFillColor(parseRGBA(fill));\n    stroke && setCurrentStrokeColor(parseRGBA(stroke));\n  }, [selectedShapeIndex]);\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown(setKeyStates)}\n      onKeyUp={handleKeyUp(setKeyStates)}\n      className=\"app-container\"\n      onContextMenu={handleContextMenu(\n        drawState,\n        setShowContextMenu,\n        setContextMenuPosition,\n        shapes,\n        setShapes,\n        setDrawState,\n        currentShapeIndex,\n        currentSegmentIndex\n      )}\n      onMouseDown={handleMouseDown(\n        drawState,\n        setDrawState,\n        setCurrentShapeIndex,\n        setSelectedShapeIndex,\n        setCurrentSegmentIndex,\n        shapes,\n        setShapes,\n        currentShapeIndex,\n        currentSegmentIndex,\n        cursorPosition,\n        setMouseDownCursorPosition,\n        setMouseDownShapePoints,\n        selectionRectangle,\n        setMouseDownSelectionRectangle,\n        setSelectedPointIndexes,\n        setIsMouseDown,\n        setShowContextMenu,\n        showContextMenu\n      )}\n      onMouseMove={handleMouseMove(\n        setCursorPosition,\n        drawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n        shapes,\n        setShapes,\n        setDrawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        mouseDownCursorPosition,\n        mouseDownShapePoints,\n        keyStates,\n        selectionRectangle,\n        setSelectionRectangle,\n        mouseDownSelectionRectangle,\n        selectedPointIndexes,\n        isMouseDown,\n        showContextMenu\n      )}\n      onMouseUp={continueDrawing(\n        cursorPosition,\n        setDrawState,\n        shapes,\n        setShapes,\n        drawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        currentShapeIndex,\n        currentSegmentIndex,\n        mouseDownCursorPosition,\n        setSelectionRectangle,\n        currentFillColor,\n        setIsMouseDown\n      )}\n    >\n      <h1\n        style={{\n          float: \"left\",\n        }}\n      >\n        Hello, my name is Fatih.\n      </h1>\n      {keyStates.isShiftPressed && \"shift\"}\n      {keyStates.isCtrlPressed && \"ctrl\"}\n      <div className=\"editor\">\n        <div className={\"canvas-wrapper\"}>\n          <h3>\n            #Canvas{\" \"}\n            <span className={\"drawing-info\"}>\n              {DRAW_STATE_LABELS[drawState]}\n            </span>\n          </h3>\n          {showContextMenu && (\n            <div\n              className={\"context-menu\"}\n              style={{\n                top: contextMenuPosition.y,\n                left: contextMenuPosition.x,\n              }}\n            >\n              <ul>\n                {CONTEXT_MENU_ACTIONS.map((action, index) => (\n                  <li\n                    key={index}\n                    data-is-context-menu-action={true}\n                    onClick={handleContextMenuAction(\n                      action,\n                      shapes,\n                      setShapes,\n                      currentShapeIndex,\n                      setShowContextMenu\n                    )}\n                  >\n                    {action}\n                  </li>\n                ))}\n              </ul>\n              <div className=\"color-pickers\">\n                <div style={{}}>\n                  <span className=\"color-picker-label\">Fill</span> <br />\n                  <ColorInput\n                    onChange={(color) => {\n                      setCurrentFillColor(color);\n                      updateCurrentShapeFill(\n                        shapes,\n                        setShapes,\n                        currentShapeIndex,\n                        toRGBAString(color)\n                      );\n                    }}\n                    color={toRGBAString(currentFillColor)}\n                  />\n                </div>\n                <div style={{ marginTop: 10 }}>\n                  <span className=\"color-picker-label\">Stroke</span> <br />\n                  <ColorInput\n                    onChange={(color) => {\n                      setCurrentStrokeColor(color);\n                      updateCurrentShapeStroke(\n                        shapes,\n                        setShapes,\n                        currentShapeIndex,\n                        toRGBAString(color)\n                      );\n                    }}\n                    color={toRGBAString(currentStrokeColor)}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"canvas\"\n            width={512}\n            height={512}\n            data-is-canvas={true}\n          >\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`y-${index}`}\n                x1={0}\n                x2={512}\n                className={\"guideline\"}\n                y1={index * 8}\n                y2={index * 8}\n              />\n            ))}\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`x-${index}`}\n                y1={0}\n                y2={512}\n                className={\"guideline\"}\n                x1={index * 8}\n                x2={index * 8}\n              />\n            ))}\n            <line\n              x1={0}\n              x2={512}\n              style={{ stroke: \"blue\" }}\n              y1={32 * 8}\n              y2={32 * 8}\n            />\n            <line\n              y1={0}\n              y2={512}\n              style={{ stroke: \"blue\" }}\n              x1={32 * 8}\n              x2={32 * 8}\n            />\n            {shapes.map((shape, index) => {\n              const shapeWithCursor = [...shape.points, cursorPosition];\n              const pointsAsSVGString = buildSVGPath(shapeWithCursor);\n\n              return (\n                <g key={index}>\n                  <path\n                    d={pointsAsSVGString}\n                    data-is-polygon={true}\n                    data-shape-index={index}\n                    fill={\"rgba(196, 196, 196, 0.5)\"}\n                  />\n                  {(() => {\n                    let [head, ...tail] =\n                      drawState === DRAW_STATE_START &&\n                      lastOpenShapeIndex === index\n                        ? shapeWithCursor\n                        : shape.points;\n                    const onClosingPoint =\n                      distance(\n                        head.x,\n                        head.y,\n                        cursorPosition.x,\n                        cursorPosition.y\n                      ) > SHAPE_CLOSE_DISTANCE;\n                    const lines = [\n                      <circle\n                        data-shape-index={index}\n                        data-point-index={0}\n                        className={\"segment\"}\n                        data-is-segment={true}\n                        data-is-closing-point={true}\n                        key={`closing-point-${index}`}\n                        cx={head.x}\n                        cy={head.y}\n                        fill={onClosingPoint ? \"orange\" : \"blue\"}\n                        r={SEGMENT_CIRCLE_RADIUS}\n                      />,\n                    ];\n                    let keyIndex = 0;\n                    for (const point of tail) {\n                      keyIndex++;\n                      lines.push(\n                        <g key={`segments-${index}-${keyIndex}`}>\n                          {drawState === DRAW_STATE_INSERT_SEGMENT &&\n                            currentShapeIndex === index &&\n                            currentSegmentIndex === keyIndex && (\n                              <circle\n                                className={\"segment\"}\n                                data-is-segment={true}\n                                cx={100}\n                                cy={200}\n                                fill={\"black\"}\n                                r={SEGMENT_CIRCLE_RADIUS}\n                                {...(() => {\n                                  const reflection = reflect(\n                                    cursorPosition,\n                                    head,\n                                    point\n                                  );\n                                  return {\n                                    cx: (reflection.x + cursorPosition.x) / 2,\n                                    cy: (reflection.y + cursorPosition.y) / 2,\n                                  };\n                                })()}\n                              />\n                            )}\n                          <circle\n                            data-shape-index={index}\n                            data-point-index={keyIndex}\n                            className={\"segment\"}\n                            data-is-segment={true}\n                            cx={point.x}\n                            cy={point.y}\n                            fill={\n                              (() => {\n                                let isPointInSelectionRectangle;\n\n                                if (drawState === DRAW_STATE_SELECTION_SET) {\n                                  isPointInSelectionRectangle =\n                                    isPointInRectangle(\n                                      point,\n                                      selectionRectangle\n                                    );\n                                } else if (\n                                  drawState ===\n                                  DRAW_STATE_MOVE_SELECTED_SEGMENTS\n                                ) {\n                                  let _shapeIndex = 0;\n                                  let _pointIndex = 0;\n                                  for (shape of shapes) {\n                                    if (index === _shapeIndex) {\n                                      break;\n                                    }\n                                    _shapeIndex++;\n                                    _pointIndex += shape.points.length;\n                                  }\n                                  return (\n                                    selectedPointIndexes.indexOf(\n                                      _pointIndex + keyIndex\n                                    ) > -1\n                                  );\n                                } else {\n                                  isPointInSelectionRectangle = false;\n                                }\n\n                                const isPointInCurrentSelection =\n                                  drawState === DRAW_STATE_SELECTION_STARTED &&\n                                  isPointInRectangle(\n                                    point,\n                                    calculateSelectionRectangle(\n                                      mouseDownCursorPosition,\n                                      cursorPosition\n                                    )\n                                  );\n\n                                return (\n                                  isPointInSelectionRectangle ||\n                                  isPointInCurrentSelection\n                                );\n                              })()\n                                ? \"blue\"\n                                : \"silver\"\n                            }\n                            r={SEGMENT_CIRCLE_RADIUS}\n                          />\n                          <line\n                            stroke={\"black\"}\n                            x1={head.x}\n                            y1={head.y}\n                            x2={point.x}\n                            y2={point.y}\n                            data-is-segment-line={true}\n                            data-shape-index={index}\n                            data-segment-index={keyIndex}\n                          />\n                        </g>\n                      );\n                      head = point;\n                    }\n                    return lines;\n                  })()}\n                </g>\n              );\n            })}\n            {drawState === DRAW_STATE_SELECTION_STARTED &&\n              (() => {\n                const { x, y, width, height } = calculateSelectionRectangle(\n                  mouseDownCursorPosition,\n                  cursorPosition\n                );\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    className={\"selection-rectangle\"}\n                  ></rect>\n                );\n              })()}\n          </svg>\n        </div>\n        <div className=\"tools\">\n          <div className=\"preview\">\n            {previews.map((previewSize, index) => (\n              <div\n                className={\"preview-square\"}\n                key={`preview-${index}`}\n                style={{ width: previewSize }}\n              >\n                <h3>\n                  {previewSize}x{previewSize}\n                </h3>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"canvas\"\n                  id={`preview-${index}`}\n                  width={previewSize}\n                  height={previewSize}\n                >\n                  {shapes.map((shape, index) => {\n                    const divider = 512 / previewSize;\n                    const pointsAsSVGString = buildSVGPath(\n                      [...shape.points, cursorPosition],\n                      divider\n                    );\n\n                    return (\n                      <g key={index}>\n                        <path\n                          d={pointsAsSVGString}\n                          stroke={shape.stroke || \"black\"}\n                          fill={shape.fill}\n                        />\n                      </g>\n                    );\n                  })}\n                </svg>\n                <a\n                  href=\"#\"\n                  className={\"download-link\"}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    const svgImage = document.createElement(\"img\");\n                    svgImage.width = previewSize;\n                    svgImage.height = previewSize;\n                    document.body.appendChild(svgImage);\n                    svgImage.onload = () => {\n                      const canvas = document.createElement(\"canvas\");\n                      canvas.width = svgImage.clientWidth;\n                      canvas.height = svgImage.clientHeight;\n                      const canvasCtx = canvas.getContext(\"2d\");\n                      canvasCtx.drawImage(svgImage, 0, 0);\n                      const imageDataURL = canvas.toDataURL(\"image/png\");\n                      svgImage.parentElement.removeChild(svgImage);\n                      URL.revokeObjectURL(svgImage.src);\n                      const downloadLink = document.createElement(\"a\");\n                      downloadLink.href = imageDataURL;\n                      downloadLink.download = `icon-${previewSize}.png`;\n                      downloadLink.click();\n                    };\n                    svgImage.src = URL.createObjectURL(\n                      new Blob(\n                        [document.getElementById(`preview-${index}`).outerHTML],\n                        {\n                          type: \"image/svg+xml\",\n                        }\n                      )\n                    );\n                  }}\n                >\n                  download\n                </a>\n              </div>\n            ))}\n          </div>\n\n          <div id=\"bio\">\n            I’m a self-taught full-stack software developer. I code with Python\n            in backend; with Django framework, and other micro frameworks such\n            as Flask. I am experienced in AsyncIO which is a Python equivalent\n            of non-blocking servers such as NodeJS. In frontend, I worked with\n            many libraries and state management tools.\n            <a href=\"cv.pdf\">Resume.</a>\n          </div>\n        </div>\n      </div>\n      <footer>Fatih Erikli — 2021 — Creative Commons</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}