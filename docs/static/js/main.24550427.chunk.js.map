{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["replaceStateTimeoutId","INITIAL_APP_STATE","reflect","p","p0","p1","dx","dy","a","b","x","y","Math","round","DRAW_STATE_SELECTION_STARTED","DRAW_STATE_SELECTION_SET","DRAW_STATE_LABELS","CONTEXT_MENU_ACTION_DUPLICATE","CONTEXT_MENU_ACTION_DELETE_SHAPE","CONTEXT_MENU_ACTION_SEND_TO_BACK","CONTEXT_MENU_ACTION_BRING_TO_FRONT","CONTEXT_MENU_ACTIONS","handleContextMenu","drawState","showContextMenuSetterFunction","contextMenuPositionSetterFunction","shapes","shapesSetterFunction","drawStateSetterFunction","currentShapeIndex","currentSegmentIndex","event","preventDefault","clientRect","document","querySelector","getBoundingClientRect","cursorPosition","clientX","left","clientY","top","shape","head","points","point","reflection","midpoint","isControlPoint","newPoints","splice","map","index","handleMouseDown","currentShapeIndexSetterFunction","selectedShapeIndexSetterFunction","currentSegmentIndexSetterFunction","mouseDownCursorPositionSetterFunction","mouseDownShapePointsSetterFunction","selectionRectangle","setMouseDownSelectionRectangle","selectedPointIndexesSetterFunction","isMouseDownSetterFunction","showContextMenu","target","dataset","isCanvas","isContextMenuAction","preventCreation","buttons","shapeIndex","pointIndex","Number","isEmptySpace","isSegmentLine","isSegment","isPolygon","flatPoints","flat","selectedPointIndexes","isPointInRectangle","filter","Boolean","findLastOpenShapeIndex","findIndex","text","last","length","first","continueDrawing","mouseDownCursorPosition","selectionRectangleSetterFunction","currentFillColor","_hasSelection","calculateSelectionRectangle","innerLoop","_","selectionIsValid","canvasBoundingClientRect","right","bottom","lastShape","slice","newShapes","lastOpenShapeIndex","newAppState","newShape","cursorPositionOrClosingPoint","distance","fill","handleMouseMove","cursorPositionSetterFunction","mouseDownShapePoints","keyStates","setSelectionRectangle","mouseDownSelectionRectangle","isMouseDown","controlPointMutation","lastOpenShape","_shapeIndex","cachedPointIndex","indexOf","segmentIndex","isShiftPressed","max","min","handleContextMenuAction","action","currentShape","ColorInput","color","onChange","useState","showPicker","setShowPicker","currentWheelColor","setCurrentWheelColor","currentShadeColor","setCurrentShadeColor","shadesRef","useRef","wheelRef","useEffect","current","wheelContext","getContext","wheelGradient","createLinearGradient","addColorStop","rect","fillStyle","shadesContext","fillRect","whiteGradient","blackGradient","className","style","background","onClick","onMouseDown","box","floor","getImageData","data","r","g","ref","height","width","x1","y1","x2","y2","sqrt","handleKeyDown","keyStatesSetterFunction","selectAll","keyStateUpdates","shiftKey","ctrlKey","metaKey","key","minX","minY","rectangle","parseRGBA","parts","split","parseFloat","toRGBAString","buildSVGPath","divider","svgString","forEach","isLast","exportPreview","previewSize","previews","previewsSetterFunction","setShowContextMenu","shapeIndexes","Set","flatPointIndex","size","ContextMenu","contextMenuPosition","onContextMenuAction","setCurrentFillColor","setCurrentStrokeColor","setShapes","currentStrokeColor","setPreviews","href","value","type","fontSize","pickedColor","updateCurrentShapeFill","marginTop","stroke","updateCurrentShapeStroke","Preview","onRemove","_ensureSetShapeIndexes","shapesFiltered","has","maxX","maxY","centerX","centerY","xmlns","id","pointsAsSVGString","d","svgImage","createElement","body","appendChild","onload","canvas","clientWidth","clientHeight","drawImage","imageDataURL","toDataURL","parentElement","removeChild","URL","revokeObjectURL","src","downloadLink","download","click","createObjectURL","Blob","getElementById","outerHTML","App","setDrawState","setCursorPosition","setMouseDownCursorPosition","setIsMouseDown","setMouseDownShapePoints","setCurrentShapeIndex","selectedShapeIndex","setSelectedShapeIndex","setCurrentSegmentIndex","name","defaults","state","setState","clearTimeout","setTimeout","window","location","hashStates","found","builtHashStates","reduce","prev","hashName","hashValue","JSON","stringify","join","history","pushState","fragment","parse","decodeURIComponent","useHashedState","appState","setAppState","refreshAppState","isCtrlPressed","setKeyStates","setSelectedPointIndexes","canvasSize","setCanvasSize","innerWidth","innerHeight","setContextMenuPosition","onpopstate","onhashchange","selectedShape","console","log","tabIndex","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseUp","shapeWithCursor","tail","onClosingPoint","lines","cx","cy","keyIndex","push","isPointInSelectionRectangle","_pointIndex","isPointInCurrentSelection","_height","preview","previewIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4KAowBIA,E,mGAjwBEC,EAAoB,CAAC,OAAS,CAAC,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,kBAAkB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,mBAAmB,CAAC,EAAI,mBAAmB,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,kBAAkB,EAAI,oBAAoB,CAAC,gBAAiB,EAAK,EAAI,kBAAkB,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,kBAAkB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,qBAAqB,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,qBAAqB,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,qBAAqB,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,qBAAqB,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,KAAK,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,KAAK,CAAC,EAAI,IAAI,EAAI,KAAK,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB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","file":"static/js/main.24550427.chunk.js","sourcesContent":["import { useState, React, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nconst INITIAL_APP_STATE = {\"shapes\":[{\"points\":[{\"x\":147,\"y\":343.3000030517578},{\"x\":141,\"y\":323.3000030517578},{\"x\":137,\"y\":316.3000030517578},{\"x\":109,\"y\":267.3000030517578},{\"x\":109,\"y\":214.3000030517578},{\"x\":140,\"y\":190.3000030517578},{\"x\":155,\"y\":179.3000030517578},{\"x\":162,\"y\":176.3000030517578},{\"x\":141,\"y\":150.3000030517578},{\"x\":228,\"y\":111.30000305175781},{\"isControlPoint\":true,\"x\":256.1000061035156,\"y\":113.2750015258789},{\"x\":283.5,\"y\":115.30000305175781},{\"x\":300.5,\"y\":113.30000305175781},{\"isControlPoint\":true,\"x\":312.6000061035156,\"y\":98.7750015258789},{\"x\":340.5,\"y\":137.11666870117188},{\"isControlPoint\":true,\"x\":363.6000061035156,\"y\":140.2750015258789},{\"x\":378.20001220703125,\"y\":165.46665954589844},{\"isControlPoint\":true,\"x\":407.1000061035156,\"y\":172.5500030517578},{\"x\":413,\"y\":225.3000030517578},{\"x\":394.5,\"y\":271.1166687011719},{\"x\":375,\"y\":328.3000030517578},{\"x\":362,\"y\":391.3000030517578},{\"x\":362,\"y\":335.3000030517578},{\"x\":359,\"y\":320.3000030517578},{\"x\":340,\"y\":237.3000030517578},{\"x\":339.6000061035156,\"y\":236.85832977294922},{\"isControlPoint\":true,\"x\":271.1166687011719,\"y\":217.9000015258789},{\"x\":205,\"y\":226.3000030517578},{\"x\":168,\"y\":209.3000030517578},{\"x\":154,\"y\":269.3000030517578},{\"x\":155,\"y\":391.3000030517578},{\"x\":147,\"y\":343.3000030517578}],\"fill\":\"rgba(240, 240, 240, 0.9)\"},{\"points\":[{\"x\":245,\"y\":465.6333312988281},{\"x\":258,\"y\":467.066650390625},{\"x\":273,\"y\":464.6333312988281},{\"x\":266,\"y\":484.01666259765625},{\"x\":259,\"y\":488.6333312988281},{\"x\":250,\"y\":483.01666259765625},{\"x\":245,\"y\":465.6333312988281}],\"fill\":\"rgba(244, 244, 244, 0.9)\"},{\"points\":[{\"x\":211,\"y\":454.3833312988281},{\"x\":219,\"y\":442.3833312988281},{\"x\":250,\"y\":435.3833312988281},{\"x\":258,\"y\":432.3833312988281},{\"x\":264,\"y\":432.3833312988281},{\"x\":268,\"y\":435.3833312988281},{\"x\":276,\"y\":436.3833312988281},{\"x\":298,\"y\":440.3833312988281},{\"x\":308,\"y\":445.3833312988281},{\"x\":311,\"y\":452.3833312988281},{\"x\":313,\"y\":453.3833312988281},{\"x\":318,\"y\":444.3833312988281},{\"x\":309,\"y\":430.3833312988281},{\"x\":281,\"y\":420.3833312988281},{\"x\":275,\"y\":416.3833312988281},{\"x\":273,\"y\":414.3833312988281},{\"x\":265,\"y\":416.3833312988281},{\"x\":261,\"y\":416.3833312988281},{\"x\":256,\"y\":414.3833312988281},{\"x\":251,\"y\":413.3833312988281},{\"x\":247,\"y\":414.3833312988281},{\"x\":239,\"y\":420.3833312988281},{\"x\":225,\"y\":422.3833312988281},{\"x\":214,\"y\":426.3833312988281},{\"x\":206,\"y\":433.3833312988281},{\"x\":201,\"y\":445.3833312988281},{\"x\":204,\"y\":450.3833312988281},{\"x\":211,\"y\":454.3833312988281}],\"fill\":\"rgba(240, 240, 240, 0.9)\"},{\"points\":[{\"x\":272,\"y\":319.1000061035156},{\"x\":293,\"y\":314.1000061035156},{\"x\":312,\"y\":307.6999969482422},{\"x\":334,\"y\":308.1000061035156},{\"x\":351,\"y\":318.1000061035156},{\"x\":337,\"y\":299.1000061035156},{\"x\":325,\"y\":296.6999969482422},{\"x\":312,\"y\":297.1000061035156},{\"x\":288,\"y\":299.1000061035156},{\"x\":276,\"y\":304.1000061035156},{\"x\":272,\"y\":319.1000061035156}],\"fill\":\"rgba(242, 242, 242, 0.9)\"},{\"points\":[{\"x\":167,\"y\":322.1000061035156},{\"x\":185,\"y\":311.1000061035156},{\"x\":198,\"y\":308.6999969482422},{\"x\":216,\"y\":313.1000061035156},{\"x\":238,\"y\":319.1000061035156},{\"x\":238,\"y\":305.1000061035156},{\"x\":226,\"y\":299.6999969482422},{\"x\":214,\"y\":298.1000061035156},{\"x\":196,\"y\":297.6999969482422},{\"x\":180,\"y\":300.1000061035156},{\"x\":171,\"y\":307.1000061035156},{\"x\":167,\"y\":322.1000061035156}],\"fill\":\"rgba(252, 252, 252, 0.9)\"},{\"points\":[{\"x\":280,\"y\":339.3000030517578},{\"x\":291,\"y\":330.3000030517578},{\"x\":303,\"y\":328.3000030517578},{\"x\":319,\"y\":328.3000030517578},{\"x\":325,\"y\":330.9499969482422},{\"x\":334,\"y\":337.3000030517578},{\"x\":326.5,\"y\":333.91666412353516},{\"x\":324.5,\"y\":332.6500015258789},{\"x\":322,\"y\":331.3000030517578},{\"x\":307,\"y\":328.3000030517578},{\"x\":300,\"y\":329.3000030517578},{\"x\":293,\"y\":331.3000030517578},{\"x\":282,\"y\":339.3000030517578},{\"x\":280,\"y\":339.3000030517578}]},{\"points\":[{\"x\":278,\"y\":339.3000030517578},{\"x\":290,\"y\":342.3000030517578},{\"x\":298,\"y\":345.3000030517578},{\"x\":307,\"y\":345.3000030517578},{\"x\":315,\"y\":343.3000030517578},{\"x\":324,\"y\":338.3000030517578},{\"x\":332,\"y\":337.3000030517578},{\"x\":326,\"y\":339.3000030517578},{\"x\":322,\"y\":341.3000030517578},{\"x\":316,\"y\":345.3000030517578},{\"x\":312,\"y\":346.3000030517578},{\"x\":299,\"y\":347.3000030517578},{\"x\":290,\"y\":344.3000030517578},{\"x\":278,\"y\":339.3000030517578}]},{\"points\":[{\"x\":176,\"y\":342.3000030517578},{\"x\":186,\"y\":337.3000030517578},{\"x\":190,\"y\":335.3000030517578},{\"x\":195,\"y\":333.3000030517578},{\"x\":208,\"y\":333.3000030517578},{\"x\":211,\"y\":334.31666564941406},{\"x\":215,\"y\":336.3000030517578},{\"x\":225,\"y\":342.3000030517578},{\"x\":230,\"y\":342.3000030517578},{\"x\":231,\"y\":342.3000030517578},{\"x\":231,\"y\":342.3000030517578},{\"x\":229,\"y\":342.3000030517578},{\"x\":222,\"y\":339.3000030517578},{\"x\":215,\"y\":334.3000030517578},{\"x\":209,\"y\":331.3000030517578},{\"x\":201,\"y\":331.3000030517578},{\"x\":194,\"y\":331.3000030517578},{\"x\":184,\"y\":335.3000030517578},{\"x\":182,\"y\":337.3000030517578},{\"x\":176,\"y\":342.3000030517578}]},{\"points\":[{\"x\":230,\"y\":343.3000030517578},{\"x\":220,\"y\":346.3000030517578},{\"x\":215,\"y\":349.3000030517578},{\"x\":208,\"y\":349.8999938964844},{\"x\":201,\"y\":350.3000030517578},{\"x\":187,\"y\":348.6999969482422},{\"x\":183,\"y\":345.3000030517578},{\"x\":178,\"y\":341.3000030517578},{\"x\":184,\"y\":345.3000030517578},{\"x\":188,\"y\":347.3000030517578},{\"x\":202,\"y\":348.3000030517578},{\"x\":213,\"y\":348.3000030517578},{\"x\":220,\"y\":345.3000030517578},{\"x\":230,\"y\":343.3000030517578}]},{\"points\":[{\"x\":196,\"y\":335.3000030517578},{\"x\":195,\"y\":339},{\"x\":195,\"y\":343.3000030517578},{\"x\":197,\"y\":346.3000030517578},{\"x\":202,\"y\":348.3000030517578},{\"x\":202,\"y\":348.1500015258789},{\"x\":208,\"y\":347},{\"x\":211,\"y\":345},{\"x\":212,\"y\":341.3000030517578},{\"x\":211,\"y\":337.3000030517578},{\"x\":206,\"y\":334.3000030517578},{\"x\":202,\"y\":333.3000030517578},{\"x\":198,\"y\":334.3000030517578},{\"x\":196,\"y\":335.3000030517578}],\"fill\":\"rgba(233, 233, 233, 1)\"},{\"points\":[{\"x\":299,\"y\":332.3000030517578},{\"x\":299,\"y\":339.3000030517578},{\"x\":301,\"y\":343.3000030517578},{\"x\":307,\"y\":344.3000030517578},{\"isControlPoint\":true,\"x\":311.1000061035156,\"y\":343.2750015258789},{\"x\":311.1000061035156,\"y\":343.2750015258789},{\"x\":314,\"y\":340.3000030517578},{\"x\":314,\"y\":335.3000030517578},{\"x\":312,\"y\":331.3000030517578},{\"x\":307,\"y\":329.3000030517578},{\"x\":302,\"y\":330.3000030517578},{\"x\":299,\"y\":332.3000030517578}],\"fill\":\"rgba(233, 233, 233, 0.9)\"},{\"points\":[{\"x\":227,\"y\":448.29998779296875},{\"x\":249,\"y\":443.29998779296875},{\"x\":257,\"y\":442.29998779296875},{\"x\":261,\"y\":442.3000030517578},{\"x\":264,\"y\":442.29998779296875},{\"x\":273,\"y\":443.29998779296875},{\"x\":282,\"y\":445.29998779296875},{\"x\":290,\"y\":448.29998779296875},{\"x\":274,\"y\":446.29998779296875},{\"x\":269,\"y\":446.29998779296875},{\"x\":259,\"y\":446.29998779296875},{\"x\":250,\"y\":446.29998779296875},{\"x\":243,\"y\":447.29998779296875},{\"x\":235,\"y\":449.29998779296875},{\"x\":227,\"y\":448.29998779296875}]},{\"points\":[{\"x\":227,\"y\":446.4499969482422},{\"x\":236,\"y\":454.4499969482422},{\"x\":242,\"y\":455.3000030517578},{\"x\":248,\"y\":455.4499969482422},{\"x\":272,\"y\":455.4499969482422},{\"x\":281,\"y\":451.4499969482422},{\"x\":286,\"y\":449.21665954589844},{\"x\":290,\"y\":447.4499969482422},{\"x\":277,\"y\":450.4499969482422},{\"x\":273,\"y\":452.4499969482422},{\"x\":263,\"y\":453.4499969482422},{\"x\":248,\"y\":452.4499969482422},{\"x\":238,\"y\":452.4499969482422},{\"x\":227,\"y\":446.4499969482422}],\"fill\":\"rgba(252, 252, 252, 0.9)\"},{\"points\":[{\"x\":470,\"y\":291}],\"text\":\"My amazing web page\",\"fontSize\":\"40\"},{\"points\":[{\"x\":477,\"y\":375}],\"text\":\"this is a button\"},{\"points\":[{\"x\":473,\"y\":321}],\"text\":\"Hello, my name is Fatih.\"},{\"points\":[{\"x\":471,\"y\":343}],\"text\":\"I am a full-stack software developer.\"},{\"fill\":{\"r\":238,\"g\":238,\"b\":238,\"a\":0.9},\"points\":[{\"x\":469,\"y\":358},{\"x\":587,\"y\":359},{\"x\":587,\"y\":381},{\"x\":469,\"y\":381},{\"x\":469,\"y\":358}]}],\"previews\":[{\"size\":256,\"shapes\":[0,1,2,3,4,5,6,7,8,9,10,11,12]},{\"size\":128,\"shapes\":[0,1,2,3,4,5,6,7,8,9,10,11,12]}]};\n\nconst reflect = (p, p0, p1) => {\n  // https://gist.github.com/balint42/b99934b2a6990a53e14b\n  let dx, dy, a, b, x, y;\n  dx = p1.x - p0.x;\n  dy = p1.y - p0.y;\n  a = (dx * dx - dy * dy) / (dx * dx + dy * dy);\n  b = (2 * dx * dy) / (dx * dx + dy * dy);\n  x = Math.round(a * (p.x - p0.x) + b * (p.y - p0.y) + p0.x);\n  y = Math.round(b * (p.x - p0.x) - a * (p.y - p0.y) + p0.y);\n  return { x, y };\n};\n\nconst DRAW_STATE_READY = 1;\nconst DRAW_STATE_START = 2;\nconst DRAW_STATE_MOVE_SEGMENT = 3;\nconst DRAW_STATE_INSERT_SEGMENT = 4;\nconst DRAW_STATE_SELECTION = 5;\nconst DRAW_STATE_MOVE_SHAPE = 6;\nconst DRAW_STATE_ON_SHAPE = 7;\nconst DRAW_STATE_ON_SEGMENT = 8;\nconst DRAW_STATE_REMOVE_SEGMENT = 9;\nconst DRAW_STATE_REMOVE_SHAPE = 10;\nconst DRAW_STATE_SELECTION_STARTED = 11;\nconst DRAW_STATE_ON_SEGMENT_SELECTION = 12;\nconst DRAW_STATE_MOVE_SELECTED_SEGMENTS = 13;\nconst DRAW_STATE_SELECTION_SET = 14;\n\nconst SHAPE_CLOSE_DISTANCE = 2;\nconst SEGMENT_CIRCLE_RADIUS = 2;\n\nconst DRAW_STATE_LABELS = {\n  [DRAW_STATE_READY]:\n    \"Click on canvas to start drawing. Shift+click to remove a shape.\",\n  [DRAW_STATE_START]:\n    \"Click on another point to connect with the latest,\\\n    click and drag it to create a bezier curve control point\",\n  [DRAW_STATE_MOVE_SEGMENT]: \"Moving a segment of a shape\",\n  [DRAW_STATE_INSERT_SEGMENT]:\n    \"Click on the a point on the line to insert a segment\",\n  [DRAW_STATE_SELECTION]: \"Select points to move\",\n  [DRAW_STATE_ON_SHAPE]: \"Drag the shape to move\",\n  [DRAW_STATE_MOVE_SHAPE]: \"Moving a shape\",\n  [DRAW_STATE_ON_SEGMENT]: \"Drag the segment to move it\",\n  [DRAW_STATE_REMOVE_SEGMENT]: \"Click on the segment to remove\",\n  [DRAW_STATE_REMOVE_SHAPE]: \"Click on the shape to remove\",\n  [DRAW_STATE_SELECTION_STARTED]: \"Selection started\",\n  [DRAW_STATE_ON_SEGMENT_SELECTION]: \"Move selected segments\",\n  [DRAW_STATE_MOVE_SELECTED_SEGMENTS]: \"Moving selected segments\",\n  [DRAW_STATE_SELECTION_SET]: \"Selection set\",\n};\n\nconst CONTEXT_MENU_ACTION_DUPLICATE = \"Duplicate\";\nconst CONTEXT_MENU_ACTION_DELETE_SHAPE = \"Delete Shape\";\nconst CONTEXT_MENU_ACTION_SEND_TO_BACK = \"Send to back\";\nconst CONTEXT_MENU_ACTION_BRING_TO_FRONT = \"Bring to front\";\nconst CONTEXT_MENU_ACTIONS = [\n  CONTEXT_MENU_ACTION_DUPLICATE,\n  CONTEXT_MENU_ACTION_DELETE_SHAPE,\n  CONTEXT_MENU_ACTION_SEND_TO_BACK,\n  CONTEXT_MENU_ACTION_BRING_TO_FRONT,\n];\n\nfunction handleContextMenu(\n  drawState,\n  showContextMenuSetterFunction,\n  contextMenuPositionSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex\n) {\n  return (event) => {\n    event.preventDefault();\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    const cursorPosition = {\n      x: event.clientX - clientRect.left,\n      y: event.clientY - clientRect.top,\n    };\n    contextMenuPositionSetterFunction({\n      x: cursorPosition.x + clientRect.left,\n      y: cursorPosition.y + clientRect.top,\n    });\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        isControlPoint: true,\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    } else {\n      showContextMenuSetterFunction(true);\n    }\n  };\n}\n\nfunction handleMouseDown(\n  drawState,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  selectedShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  cursorPosition,\n  mouseDownCursorPositionSetterFunction,\n  mouseDownShapePointsSetterFunction,\n  selectionRectangle,\n  setMouseDownSelectionRectangle,\n  selectedPointIndexesSetterFunction,\n  isMouseDownSetterFunction,\n  showContextMenuSetterFunction,\n  showContextMenu\n) {\n  return (event) => {\n    isMouseDownSetterFunction(true);\n    if (event.target.dataset.isCanvas) {\n      showContextMenuSetterFunction(false);\n    }\n    if (event.target.dataset.isContextMenuAction || showContextMenu || event.target.dataset.preventCreation) {\n      return;\n    }\n    if (event.buttons === 2) {\n      event.preventDefault();\n      return false;\n    }\n\n    if (drawState === DRAW_STATE_READY) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n    }\n\n    if (drawState === DRAW_STATE_ON_SEGMENT) {\n      const { shapeIndex, pointIndex } = event.target.dataset;\n      currentShapeIndexSetterFunction(Number(shapeIndex));\n      selectedShapeIndexSetterFunction(Number(shapeIndex));\n      currentSegmentIndexSetterFunction(Number(pointIndex));\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_SET) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      const isEmptySpace =\n        !event.target.dataset.isSegmentLine &&\n        !event.target.dataset.isSegment &&\n        !event.target.dataset.isPolygon;\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      if (isEmptySpace) {\n        drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n      } else {\n        const flatPoints = shapes.map((shape) => shape.points).flat();\n        mouseDownShapePointsSetterFunction(flatPoints);\n        const selectedPointIndexes = flatPoints\n          .map((point, index) =>\n            isPointInRectangle(point, selectionRectangle) ? { index } : null\n          )\n          .filter(Boolean)\n          .map(({ index }) => index);\n        setMouseDownSelectionRectangle({\n          x: selectionRectangle.x,\n          y: selectionRectangle.y,\n        });\n        selectedPointIndexesSetterFunction(selectedPointIndexes);\n        drawStateSetterFunction(DRAW_STATE_MOVE_SELECTED_SEGMENTS);\n      }\n    }\n\n    if (drawState === DRAW_STATE_ON_SHAPE) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      selectedShapeIndexSetterFunction(currentShapeIndex);\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      mouseDownShapePointsSetterFunction(shapes[currentShapeIndex].points);\n      drawStateSetterFunction(DRAW_STATE_MOVE_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n  };\n}\n\nfunction findLastOpenShapeIndex(shapes) {\n  return shapes.findIndex(({ points, text }) => {\n    const last = points[points.length - 1];\n    const first = points[0];\n    return (\n      (!text && points.length < 3) ||\n      !(first.x === last.x && first.y === last.y)\n    );\n  });\n}\n\nfunction continueDrawing(\n  cursorPosition,\n  drawStateSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawState,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  mouseDownCursorPosition,\n  selectionRectangleSetterFunction,\n  currentFillColor,\n  isMouseDownSetterFunction\n) {\n  return (event) => {\n    isMouseDownSetterFunction(false);\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      drawStateSetterFunction(DRAW_STATE_READY);\n      currentShapeIndexSetterFunction(-1);\n      currentSegmentIndexSetterFunction(-1);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_STARTED) {\n      const selectionRectangle = calculateSelectionRectangle(\n        mouseDownCursorPosition,\n        cursorPosition\n      );\n      selectionRectangleSetterFunction(selectionRectangle);\n      let _hasSelection;\n      for (const shape of shapes) {\n        innerLoop: for (const point of shape.points) {\n          _hasSelection = isPointInRectangle(point, selectionRectangle);\n          if (_hasSelection) {\n            break innerLoop;\n          }\n        }\n        if (_hasSelection) {\n          break;\n        }\n      }\n      drawStateSetterFunction(\n        _hasSelection ? DRAW_STATE_SELECTION_SET : DRAW_STATE_READY\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      drawStateSetterFunction(DRAW_STATE_SELECTION_SET);\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      drawStateSetterFunction(DRAW_STATE_ON_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.filter((_, index) => index !== currentShapeIndex)\n      );\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.filter(\n            (point, pointIndex) =>\n              !(shapeIndex === currentShapeIndex) ||\n              (shapeIndex === currentShapeIndex &&\n                currentSegmentIndex !== pointIndex)\n          ),\n        }))\n      );\n    }\n\n    const selectionIsValid =\n      mouseDownCursorPosition.x !== cursorPosition.x &&\n      mouseDownCursorPosition.y !== cursorPosition.y;\n\n    const isEmptySpace =\n      !event.target.dataset.isSegmentLine &&\n      !event.target.dataset.isSegment &&\n      !event.target.dataset.isPolygon;\n\n    if (drawState === DRAW_STATE_START || (!selectionIsValid && isEmptySpace)) {\n      const canvasBoundingClientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      if (\n        event.clientX < canvasBoundingClientRect.left ||\n        event.clientX > canvasBoundingClientRect.right ||\n        event.clientY < canvasBoundingClientRect.top ||\n        event.clientY > canvasBoundingClientRect.bottom\n      ) {\n        return;\n      }\n\n      const lastShape = shapes[shapes.length - 1];\n      if (\n        lastShape &&\n        lastShape.points.length === 1 &&\n        !lastShape.text &&\n        lastShape.points[0].x === cursorPosition.x &&\n        lastShape.points[0].y === cursorPosition.y\n      ) {\n        // shape created by double-click\n        shapesSetterFunction([\n          ...shapes.slice(0, shapes.length - 1),\n          {\n            points: [cursorPosition],\n            text: \"Text\",\n          },\n        ]);\n        drawStateSetterFunction(DRAW_STATE_READY);\n        return;\n      }\n\n      const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n      let newShapes;\n      let newAppState = DRAW_STATE_START;\n      if (lastOpenShapeIndex === -1) {\n        newShapes = [...shapes, { points: [cursorPosition] }];\n      } else {\n        newShapes = shapes.map((shape, index) => {\n          let newShape;\n          if (index === lastOpenShapeIndex) {\n            let cursorPositionOrClosingPoint;\n\n            if (\n              distance(\n                cursorPosition.x,\n                cursorPosition.y,\n                shape.points[0].x,\n                shape.points[0].y\n              ) < SHAPE_CLOSE_DISTANCE\n            ) {\n              cursorPositionOrClosingPoint = shape.points[0];\n              newAppState = DRAW_STATE_READY;\n            } else {\n              cursorPositionOrClosingPoint = cursorPosition;\n            }\n\n            newShape = {\n              fill: currentFillColor,\n              points: [...shape.points, cursorPositionOrClosingPoint],\n            };\n          } else {\n            newShape = shape;\n          }\n\n          return newShape;\n        });\n      }\n\n      drawStateSetterFunction(newAppState);\n      shapesSetterFunction(newShapes);\n    }\n  };\n}\n\nfunction handleMouseMove(\n  cursorPositionSetterFunction,\n  drawState,\n  currentShapeIndex,\n  currentSegmentIndex,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  mouseDownCursorPosition,\n  mouseDownShapePoints,\n  keyStates,\n  selectionRectangle,\n  setSelectionRectangle,\n  mouseDownSelectionRectangle,\n  selectedPointIndexes,\n  isMouseDown,\n  showContextMenu\n) {\n  return ({ clientX, clientY, target }) => {\n    if (showContextMenu) {\n      return;\n    }\n\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    let cursorPosition = {\n      x: clientX - clientRect.left,\n      y: clientY - clientRect.top,\n    };\n\n    cursorPositionSetterFunction(cursorPosition);\n\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            currentShapeIndex === shapeIndex &&\n            (currentSegmentIndex === pointIndex ||\n              (currentSegmentIndex === shape.points.length - 1 &&\n                pointIndex === 0))\n              ? { ...point, ...cursorPosition }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_START) {\n      if (isMouseDown) {\n        const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n        const lastOpenShape = shapes[lastOpenShapeIndex];\n        if (!lastOpenShape) {\n          return drawStateSetterFunction(DRAW_STATE_READY);\n        }\n        const isLastDrawnPointIsControlPoint =\n          lastOpenShape.points.length > 2 &&\n          Boolean(\n            lastOpenShape.points[lastOpenShape.points.length - 1].isControlPoint\n          );\n        let controlPointMutation;\n        if (isLastDrawnPointIsControlPoint) {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: shape.points.map((point, index) =>\n                  index === shape.points.length - 1\n                    ? { ...point, ...cursorPosition }\n                    : point\n                ),\n              };\n            } else {\n              return shape;\n            }\n          });\n        } else {\n          controlPointMutation = shapes.map((shape, index) => {\n            if (index === lastOpenShapeIndex) {\n              return {\n                ...shape,\n                points: [\n                  ...shape.points,\n                  { ...cursorPosition },\n                  { isControlPoint: true, ...cursorPosition },\n                ],\n              };\n            } else {\n              return shape;\n            }\n          });\n        }\n        shapesSetterFunction(controlPointMutation);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      let _shapeIndex = 0;\n      setSelectionRectangle({\n        ...selectionRectangle,\n        x:\n          mouseDownSelectionRectangle.x -\n          (mouseDownCursorPosition.x - cursorPosition.x),\n        y:\n          mouseDownSelectionRectangle.y -\n          (mouseDownCursorPosition.y - cursorPosition.y),\n      });\n      shapesSetterFunction(\n        shapes.map((shape) => ({\n          ...shape,\n          points: shape.points.map((point) => {\n            const cachedPointIndex = _shapeIndex;\n            _shapeIndex++;\n            return selectedPointIndexes.indexOf(cachedPointIndex) > -1\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[cachedPointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[cachedPointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point;\n          }),\n        }))\n      );\n    }\n\n    if (\n      drawState === DRAW_STATE_READY ||\n      drawState === DRAW_STATE_ON_SHAPE ||\n      drawState === DRAW_STATE_ON_SEGMENT ||\n      drawState === DRAW_STATE_ON_SEGMENT_SELECTION ||\n      drawState === DRAW_STATE_REMOVE_SHAPE ||\n      drawState === DRAW_STATE_REMOVE_SEGMENT\n    ) {\n      const {\n        isSegmentLine,\n        isSegment,\n        isPolygon,\n        shapeIndex,\n        segmentIndex,\n        pointIndex,\n      } = target.dataset;\n      // todo: merge pointIndex and segmentIndex\n      if (isSegmentLine) {\n        drawStateSetterFunction(DRAW_STATE_INSERT_SEGMENT);\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(segmentIndex));\n      } else if (isPolygon) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SHAPE\n            : DRAW_STATE_ON_SHAPE\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n      } else if (isSegment) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SEGMENT\n            : DRAW_STATE_ON_SEGMENT\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(pointIndex));\n      } else {\n        drawStateSetterFunction(DRAW_STATE_READY);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            shapeIndex === currentShapeIndex\n              ? {\n                  ...point,\n                  x:\n                    mouseDownShapePoints[pointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[pointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const midpointDistance = distance(\n        midpoint.x,\n        midpoint.y,\n        cursorPosition.x,\n        cursorPosition.y\n      );\n      if (\n        midpointDistance > 1 ||\n        midpoint.y > Math.max(head.y, point.y) ||\n        midpoint.y < Math.min(head.y, point.y) ||\n        midpoint.x > Math.max(head.x, point.x) ||\n        midpoint.x < Math.min(head.x, point.x)\n      ) {\n        drawStateSetterFunction(DRAW_STATE_READY);\n        currentShapeIndexSetterFunction(-1);\n        currentSegmentIndexSetterFunction(-1);\n      }\n    }\n  };\n}\n\nfunction handleContextMenuAction(\n  action,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  showContextMenuSetterFunction\n) {\n  return () => {\n    switch (action) {\n      case CONTEXT_MENU_ACTION_BRING_TO_FRONT: {\n        const shape = shapes[currentShapeIndex];\n        shapesSetterFunction([\n          ...shapes.filter((_, index) => index !== currentShapeIndex),\n          shape,\n        ]);\n        break;\n      }\n      case CONTEXT_MENU_ACTION_SEND_TO_BACK: {\n        const shape = shapes[currentShapeIndex];\n        shapesSetterFunction([\n          shape,\n          ...shapes.filter((_, index) => index !== currentShapeIndex),\n        ]);\n        break;\n      }\n      case CONTEXT_MENU_ACTION_DUPLICATE: {\n        const currentShape = shapes[currentShapeIndex];\n        if (!currentShape) {\n          return;\n        }\n        shapesSetterFunction([\n          ...shapes,\n          {\n            ...currentShape,\n            points: currentShape.points.map((point) => ({\n              ...point,\n              x: point.x + 25,\n              y: point.y + 25,\n            })),\n          },\n        ]);\n        break;\n      }\n      case CONTEXT_MENU_ACTION_DELETE_SHAPE:\n        shapesSetterFunction(\n          shapes.filter((shape, index) => index !== currentShapeIndex)\n        );\n        break;\n    }\n    showContextMenuSetterFunction(false);\n  };\n}\n\nfunction ColorInput({ color, onChange }) {\n  const [showPicker, setShowPicker] = useState(false);\n  const [currentWheelColor, setCurrentWheelColor] = useState(color);\n  const [currentShadeColor, setCurrentShadeColor] = useState(color);\n  const shadesRef = useRef(null);\n  const wheelRef = useRef(null);\n  useEffect(() => {\n    if (wheelRef.current) {\n      const wheelContext = wheelRef.current.getContext(\"2d\");\n      const wheelGradient = wheelContext.createLinearGradient(0, 0, 0, 150);\n      wheelGradient.addColorStop(0, \"rgba(255, 0, 0, 1)\");\n      wheelGradient.addColorStop(0.17, \"rgba(255, 255, 0, 1)\");\n      wheelGradient.addColorStop(0.34, \"rgba(0, 255, 0, 1)\");\n      wheelGradient.addColorStop(0.51, \"rgba(0, 255, 255, 1)\");\n      wheelGradient.addColorStop(0.68, \"rgba(0, 0, 255, 1)\");\n      wheelGradient.addColorStop(0.85, \"rgba(255, 0, 255, 1)\");\n      wheelGradient.addColorStop(1, \"rgba(255, 0, 0, 1)\");\n      wheelContext.rect(0, 0, 30, 150);\n      wheelContext.fillStyle = wheelGradient;\n      wheelContext.fill();\n    }\n    if (shadesRef.current) {\n      const shadesContext = shadesRef.current.getContext(\"2d\");\n      shadesContext.fillStyle = currentWheelColor;\n      shadesContext.fillRect(0, 0, 150, 150);\n      const whiteGradient = shadesContext.createLinearGradient(0, 0, 150, 0);\n      whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n      whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n      shadesContext.fillStyle = whiteGradient;\n      shadesContext.fillRect(0, 0, 150, 150);\n      const blackGradient = shadesContext.createLinearGradient(0, 0, 0, 150);\n      blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n      blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n      shadesContext.fillStyle = blackGradient;\n      shadesContext.fillRect(0, 0, 150, 150);\n    }\n  }, [showPicker, currentWheelColor]);\n  return (\n    <div className={\"color-input\"}>\n      <div\n        style={{\n          background: currentShadeColor,\n        }}\n        className={\"color-input-preview\"}\n        onClick={() => setShowPicker(!showPicker)}\n      ></div>\n      {showPicker && (\n        <div className={\"color-input-picker\"}>\n          <canvas\n            onMouseDown={(event) => {\n              const box = shadesRef.current.getBoundingClientRect();\n              const point = {\n                x: Math.floor(event.clientX - box.left),\n                y: Math.floor(event.clientY - box.top),\n              };\n              const [r, g, b, _] = shadesRef.current\n                .getContext(\"2d\")\n                .getImageData(point.x, point.y, 1, 1).data;\n              setCurrentShadeColor(`rgba(${r}, ${g}, ${b}, 1)`);\n              onChange({ r, g, b, a: 1 });\n            }}\n            ref={shadesRef}\n            className={\"color-input-shades\"}\n            height=\"150\"\n            width=\"150\"\n          ></canvas>\n          <canvas\n            onMouseDown={(event) => {\n              const box = wheelRef.current.getBoundingClientRect();\n              const point = {\n                x: Math.floor(event.clientX - box.left),\n                y: Math.floor(event.clientY - box.top),\n              };\n              const [r, g, b, _] = wheelRef.current\n                .getContext(\"2d\")\n                .getImageData(point.x, point.y, 1, 1).data;\n              setCurrentWheelColor(`rgba(${r}, ${g}, ${b}, 1)`);\n            }}\n            ref={wheelRef}\n            className={\"color-input-wheel\"}\n            height=\"150\"\n            width=\"30\"\n          ></canvas>\n        </div>\n      )}\n    </div>\n  );\n}\n\nlet replaceStateTimeoutId;\n\nfunction useHashedState(name, defaults) {\n  const [state, setState] = useState(defaults);\n  return [\n    state,\n    (value, callback = () => {}) => {\n      if (replaceStateTimeoutId) {\n        clearTimeout(replaceStateTimeoutId);\n      }\n\n      replaceStateTimeoutId = setTimeout(() => {\n        const [_, ...hashStates] = (\n          window.location.href.indexOf(\"#\") > -1\n            ? window.location.href.split(\"#\")\n            : [null]\n        ).filter(Boolean);\n\n        let found = false;\n        const builtHashStates = hashStates\n          .reduce((prev, current) => {\n            let [hashName, hashValue] = current.split(\"=\");\n            if (name === hashName) {\n              found = true;\n              hashValue = JSON.stringify(value);\n              hashName = name;\n            }\n\n            return [...prev, `${hashName}=${hashValue}`];\n          }, [])\n          .join(\"#\");\n\n        if (!found) {\n          window.history.pushState(\n            null,\n            null,\n            `${\n              builtHashStates && `#${builtHashStates}`\n            }#${name}=${JSON.stringify(value)}`\n          );\n        } else {\n          window.history.pushState(null, null, `#${builtHashStates}`);\n        }\n      }, 50);\n      setState(value);\n    },\n    () => {\n      const [_, fragment] = window.location.href.split(`#${name}=`);\n      if (fragment) {\n        const [value] = fragment.split(\"#\");\n        setState(JSON.parse(decodeURIComponent(value)));\n      }\n    },\n  ];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const a = x1 - x2;\n  const b = y1 - y2;\n  return Math.sqrt(a * a + b * b);\n}\n\nfunction handleKeyDown(keyStatesSetterFunction, selectAll) {\n  return (event) => {\n    let keyStateUpdates = {};\n    event.shiftKey && (keyStateUpdates[\"isShiftPressed\"] = true);\n    event.ctrlKey && (keyStateUpdates[\"isCtrlPressed\"] = true);\n    if (event.metaKey && event.key === \"a\") {\n      event.preventDefault();\n      selectAll();\n    }\n    keyStatesSetterFunction(keyStateUpdates);\n  };\n}\n\nfunction handleKeyUp(keyStatesSetterFunction) {\n  return (_) => {\n    keyStatesSetterFunction({ isCtrlPressed: false, isShiftPressed: false });\n  };\n}\n\nfunction calculateSelectionRectangle(mouseDownCursorPosition, cursorPosition) {\n  const minX = Math.min(mouseDownCursorPosition.x, cursorPosition.x);\n  const minY = Math.min(mouseDownCursorPosition.y, cursorPosition.y);\n  const maxX = Math.max(mouseDownCursorPosition.x, cursorPosition.x);\n  const maxY = Math.max(mouseDownCursorPosition.y, cursorPosition.y);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nfunction isPointInRectangle(point, rectangle) {\n  return (\n    point.x > rectangle.x &&\n    point.x < rectangle.x + rectangle.width &&\n    point.y > rectangle.y &&\n    point.y < rectangle.y + rectangle.height\n  );\n}\n\nfunction updateCurrentShapeFill(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, fill: pickedColor } : shape\n    )\n  );\n}\n\nfunction updateCurrentShapeStroke(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, stroke: pickedColor } : shape\n    )\n  );\n}\n\nfunction parseRGBA(color) {\n  if (typeof color !== \"string\") {\n    return color;\n  }\n\n  const commaSaparatedString = color.split(\"(\")[1].split(\")\")[0];\n  const parts = commaSaparatedString.split(\",\");\n  const [r, g, b, a] = parts;\n  return {\n    r: Number(r),\n    g: Number(g),\n    b: Number(b),\n    a: parseFloat(a),\n  };\n}\n\nfunction toRGBAString(color) {\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n}\n\nfunction buildSVGPath(points, divider = 1) {\n  let svgString = \"\";\n  points.forEach(({ x, y, isControlPoint }, index) => {\n    const isLast = index === points.length - 1;\n    const isFirst = index === 0;\n\n    if (isFirst) {\n      svgString = `M ${x / divider},${y / divider}`;\n    }\n\n    if (isLast) {\n      svgString = `${svgString} Z ${points[0].x / divider},${\n        points[0].y / divider\n      }`;\n      return;\n    }\n\n    if (isControlPoint) {\n      svgString = `${svgString} ${x / divider},${y / divider} `;\n    } else if (points[index + 1] && points[index + 1].isControlPoint) {\n      svgString = `${svgString} Q ${x / divider},${y / divider} `;\n    } else {\n      svgString = `${svgString} L ${x / divider},${y / divider} `;\n    }\n  });\n  return svgString;\n}\n\nfunction exportPreview(\n  previewSize,\n  previews,\n  previewsSetterFunction,\n  shapes,\n  setShowContextMenu,\n  selectionRectangle\n) {\n  return (event) => {\n    event.preventDefault();\n    const flatPoints = shapes\n      .map((shape, shapeIndex) =>\n        shape.points.map((point) => [shapeIndex, point])\n      )\n      .flat();\n    const selectedPointIndexes = flatPoints\n      .map((point, index) =>\n        isPointInRectangle(point[1], selectionRectangle) ? { index } : null\n      )\n      .filter(Boolean)\n      .map(({ index }) => index);\n    const shapeIndexes = new Set(\n      selectedPointIndexes.map(\n        (flatPointIndex) => flatPoints[flatPointIndex][0]\n      )\n    );\n    previewsSetterFunction([\n      ...previews,\n      {\n        size: previewSize,\n        shapes: [...shapeIndexes],\n      },\n    ]);\n    setShowContextMenu(false);\n  };\n}\n\nfunction ContextMenu({\n  contextMenuPosition,\n  onContextMenuAction,\n  setCurrentFillColor,\n  setCurrentStrokeColor,\n  shapes,\n  setShapes,\n  currentShapeIndex,\n  setShowContextMenu,\n  currentFillColor,\n  currentStrokeColor,\n  previews,\n  setPreviews,\n  selectionRectangle,\n}) {\n  const currentShape = shapes[currentShapeIndex];\n  return (\n    <div\n      className={\"context-menu\"}\n      style={{\n        top: contextMenuPosition.y,\n        left: contextMenuPosition.x,\n      }}\n    >\n      <ul>\n        {CONTEXT_MENU_ACTIONS.map((action, index) => (\n          <li\n            key={index}\n            data-is-context-menu-action={true}\n            onClick={onContextMenuAction(\n              action,\n              shapes,\n              setShapes,\n              currentShapeIndex,\n              setShowContextMenu\n            )}\n          >\n            <a href=\"#\">{action}</a>\n          </li>\n        ))}\n        <li>\n          <span>Export:</span>\n          {[512, 256, 128].map((previewSize, index) => (\n            <a\n              key={index}\n              href=\"\"\n              onClick={exportPreview(\n                previewSize,\n                previews,\n                setPreviews,\n                shapes,\n                setShowContextMenu,\n                selectionRectangle\n              )}\n            >\n              {previewSize}px\n            </a>\n          ))}\n        </li>\n        {currentShape && typeof currentShape.text === \"string\" && (\n          <>\n            <li>\n              <span>\n                Text:{\" \"}\n                <input\n                  value={currentShape.text}\n                  onChange={(event) => {\n                    setShapes(\n                      shapes.map((shape, index) =>\n                        index === currentShapeIndex\n                          ? {\n                              ...shape,\n                              text: event.target.value,\n                            }\n                          : shape\n                      )\n                    );\n                  }}\n                  style={{\n                    width: \"90%\",\n                  }}\n                  type=\"text\"\n                />\n              </span>\n            </li>\n            <li>\n              <span>\n                Font size:\n                <br />\n                <input\n                  value={currentShape.fontSize || 15}\n                  type={\"number\"}\n                  onChange={(event) => {\n                    setShapes(\n                      shapes.map((shape, index) =>\n                        index === currentShapeIndex\n                          ? {\n                              ...shape,\n                              fontSize: event.target.value,\n                            }\n                          : shape\n                      )\n                    );\n                  }}\n                  style={{\n                    width: \"20%\",\n                  }}\n                />\n              </span>\n            </li>\n          </>\n        )}\n      </ul>\n      <div className=\"color-pickers\">\n        <div style={{}}>\n          <span className=\"color-picker-label\">Fill</span> <br />\n          <ColorInput\n            onChange={(color) => {\n              setCurrentFillColor(color);\n              updateCurrentShapeFill(\n                shapes,\n                setShapes,\n                currentShapeIndex,\n                toRGBAString(color)\n              );\n            }}\n            color={toRGBAString(currentFillColor)}\n          />\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <span className=\"color-picker-label\">Stroke</span> <br />\n          <ColorInput\n            onChange={(color) => {\n              setCurrentStrokeColor(color);\n              updateCurrentShapeStroke(\n                shapes,\n                setShapes,\n                currentShapeIndex,\n                toRGBAString(color)\n              );\n            }}\n            color={toRGBAString(currentStrokeColor)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Preview({\n  size,\n  shapes,\n  shapeIndexes,\n  index,\n  points,\n  cursorPosition,\n  style,\n  onRemove,\n}) {\n  const _ensureSetShapeIndexes =\n    \"has\" in shapeIndexes ? shapeIndexes : new Set(shapeIndexes);\n  const divider = 512 / size;\n  const shapesFiltered = shapes.filter((_, index) =>\n    _ensureSetShapeIndexes.has(index)\n  );\n  const flatPoints = shapesFiltered.map((shape) => shape.points).flat();\n  const maxX = Math.max(...flatPoints.map(({ x }) => x));\n  const maxY = Math.max(...flatPoints.map(({ y }) => y));\n  const minX = Math.min(...flatPoints.map(({ x }) => x));\n  const minY = Math.min(...flatPoints.map(({ y }) => y));\n  const centerX = (512 - (maxX - minX)) / 2;\n  const centerY = (512 - (maxY - minY)) / 2;\n  return (\n    <div\n      className={\"preview-square\"}\n      key={`preview-${index}`}\n      style={{ ...style, width: size }}\n    >\n      <h3>\n        {size}x{size}\n      </h3>\n      <a data-prevent-creation={true} href={'#'} onClick={onRemove} className=\"remove-preview-button\">\n        x\n      </a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"canvas\"\n        id={`preview-${index}`}\n        width={size}\n        height={size}\n      >\n        {shapesFiltered.map((shape, index) => {\n          const pointsAsSVGString = buildSVGPath(\n            shape.points.map(({ x, y }) => ({\n              x: x - minX + centerX,\n              y: y - minY + centerY,\n            })),\n            divider\n          );\n          return (\n            <g key={index}>\n              {shape.text && (\n                <text\n                  fontSize={shape.fontSize || 15}\n                  data-is-polygon={true}\n                  data-shape-index={index}\n                  x={shape.points[0].x / divider}\n                  y={shape.points[0].y / divider}\n                >\n                  {shape.text}\n                </text>\n              )}\n              <path\n                d={pointsAsSVGString}\n                stroke={shape.stroke || \"black\"}\n                fill={shape.fill}\n              />\n            </g>\n          );\n        })}\n      </svg>\n      <a\n        href=\"#\"\n        className={\"download-link\"}\n        onClick={(event) => {\n          event.preventDefault();\n          const svgImage = document.createElement(\"img\");\n          svgImage.width = size;\n          svgImage.height = size;\n          document.body.appendChild(svgImage);\n          svgImage.onload = () => {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = svgImage.clientWidth;\n            canvas.height = svgImage.clientHeight;\n            const canvasCtx = canvas.getContext(\"2d\");\n            canvasCtx.drawImage(svgImage, 0, 0);\n            const imageDataURL = canvas.toDataURL(\"image/png\");\n            svgImage.parentElement.removeChild(svgImage);\n            URL.revokeObjectURL(svgImage.src);\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.href = imageDataURL;\n            downloadLink.download = `icon-${size}.png`;\n            downloadLink.click();\n          };\n          svgImage.src = URL.createObjectURL(\n            new Blob([document.getElementById(`preview-${index}`).outerHTML], {\n              type: \"image/svg+xml\",\n            })\n          );\n        }}\n      >\n        download\n      </a>\n    </div>\n  );\n}\n\nfunction App() {\n  const [drawState, setDrawState] = useState(DRAW_STATE_READY);\n  const [cursorPosition, setCursorPosition] = useState({ x: -1, y: -1 });\n  const [mouseDownCursorPosition, setMouseDownCursorPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [mouseDownShapePoints, setMouseDownShapePoints] = useState([]);\n  const [currentShapeIndex, setCurrentShapeIndex] = useState(-1);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(-1);\n  const [currentSegmentIndex, setCurrentSegmentIndex] = useState(-1);\n  const [appState, setAppState, refreshAppState] = useHashedState(\"state\", INITIAL_APP_STATE);\n  const shapes = appState.shapes;\n  const previews = appState.previews;\n  const setShapes = (shapes) => setAppState({ ...appState, shapes });\n  const setPreviews = (previews) => {\n    setAppState({\n      ...appState,\n      previews,\n    });\n  };\n\n  const [keyStates, setKeyStates] = useState({\n    isCtrlPressed: false,\n    isShiftPressed: false,\n  });\n  const [selectionRectangle, setSelectionRectangle] = useState(null);\n  const [mouseDownSelectionRectangle, setMouseDownSelectionRectangle] =\n    useState({ x: -1, y: -1 });\n  const [selectedPointIndexes, setSelectedPointIndexes] = useState([]);\n  const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 512,\n    height: 512,\n  });\n  useEffect(() => {\n    setCanvasSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }, []);\n  const [currentFillColor, setCurrentFillColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [currentStrokeColor, setCurrentStrokeColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  useEffect(() => {\n    refreshAppState();\n    window.onpopstate = refreshAppState;\n    window.onhashchange = refreshAppState;\n  }, []);\n  useEffect(() => {\n    const selectedShape = shapes[selectedShapeIndex];\n    if (!selectedShape) {\n      return;\n    }\n    const { stroke, fill } = selectedShape;\n    fill && setCurrentFillColor(parseRGBA(fill));\n    stroke && setCurrentStrokeColor(parseRGBA(stroke));\n  }, [selectedShapeIndex]);\n  const selectAll = () => {\n    setDrawState(DRAW_STATE_SELECTION_SET);\n    setSelectionRectangle({\n      x: 0,\n      y: 0,\n      width: canvasSize.width,\n      height: canvasSize.height,\n    });\n  };\n  console.log(appState);\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown(setKeyStates, selectAll)}\n      onKeyUp={handleKeyUp(setKeyStates)}\n      className=\"app-container\"\n      onContextMenu={handleContextMenu(\n        drawState,\n        setShowContextMenu,\n        setContextMenuPosition,\n        shapes,\n        setShapes,\n        setDrawState,\n        currentShapeIndex,\n        currentSegmentIndex\n      )}\n      onMouseDown={handleMouseDown(\n        drawState,\n        setDrawState,\n        setCurrentShapeIndex,\n        setSelectedShapeIndex,\n        setCurrentSegmentIndex,\n        shapes,\n        setShapes,\n        currentShapeIndex,\n        currentSegmentIndex,\n        cursorPosition,\n        setMouseDownCursorPosition,\n        setMouseDownShapePoints,\n        selectionRectangle,\n        setMouseDownSelectionRectangle,\n        setSelectedPointIndexes,\n        setIsMouseDown,\n        setShowContextMenu,\n        showContextMenu\n      )}\n      onMouseMove={handleMouseMove(\n        setCursorPosition,\n        drawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n        shapes,\n        setShapes,\n        setDrawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        mouseDownCursorPosition,\n        mouseDownShapePoints,\n        keyStates,\n        selectionRectangle,\n        setSelectionRectangle,\n        mouseDownSelectionRectangle,\n        selectedPointIndexes,\n        isMouseDown,\n        showContextMenu\n      )}\n      onMouseUp={continueDrawing(\n        cursorPosition,\n        setDrawState,\n        shapes,\n        setShapes,\n        drawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        currentShapeIndex,\n        currentSegmentIndex,\n        mouseDownCursorPosition,\n        setSelectionRectangle,\n        currentFillColor,\n        setIsMouseDown\n      )}\n    >\n      <div className=\"editor\">\n        <h3>\n          #Canvas{\" \"}\n          <span className={\"drawing-info\"}>{DRAW_STATE_LABELS[drawState]}</span>\n        </h3>\n        {showContextMenu && (\n          <ContextMenu\n            contextMenuPosition={contextMenuPosition}\n            onContextMenuAction={handleContextMenuAction}\n            setCurrentFillColor={setCurrentFillColor}\n            setCurrentStrokeColor={setCurrentStrokeColor}\n            currentShapeIndex={currentShapeIndex}\n            setShowContextMenu={setShowContextMenu}\n            currentFillColor={currentFillColor}\n            currentStrokeColor={currentStrokeColor}\n            shapes={shapes}\n            setShapes={setShapes}\n            previews={previews}\n            setPreviews={setPreviews}\n            setShowContextMenu={setShowContextMenu}\n            selectionRectangle={selectionRectangle}\n          />\n        )}\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"canvas\"\n          width={canvasSize.width}\n          height={canvasSize.height}\n          data-is-canvas={true}\n        >\n          <line\n            x1={0}\n            x2={canvasSize.width}\n            style={{ stroke: \"blue\" }}\n            y1={canvasSize.height / 2}\n            y2={canvasSize.height / 2}\n          />\n          <line\n            y1={0}\n            y2={canvasSize.height}\n            style={{ stroke: \"blue\" }}\n            x1={canvasSize.width / 2}\n            x2={canvasSize.width / 2}\n          />\n          {shapes.map((shape, index) => {\n            const shapeWithCursor = [...shape.points, cursorPosition];\n            const pointsAsSVGString = buildSVGPath(shapeWithCursor);\n\n            return (\n              <g key={index}>\n                {shape.text && (\n                  <text\n                    fontSize={shape.fontSize || 15}\n                    data-is-polygon={true}\n                    data-shape-index={index}\n                    x={shape.points[0].x}\n                    y={shape.points[0].y}\n                  >\n                    {shape.text}\n                  </text>\n                )}\n                <path\n                  d={pointsAsSVGString}\n                  data-is-polygon={true}\n                  data-shape-index={index}\n                  fill={\"rgba(196, 196, 196, 0.5)\"}\n                />\n                {(() => {\n                  let [head, ...tail] =\n                    drawState === DRAW_STATE_START &&\n                    lastOpenShapeIndex === index\n                      ? shapeWithCursor\n                      : shape.points;\n                  const onClosingPoint =\n                    distance(\n                      head.x,\n                      head.y,\n                      cursorPosition.x,\n                      cursorPosition.y\n                    ) > SHAPE_CLOSE_DISTANCE;\n                  const lines = [\n                    <circle\n                      data-shape-index={index}\n                      data-point-index={0}\n                      className={\"segment\"}\n                      data-is-segment={true}\n                      data-is-closing-point={true}\n                      key={`closing-point-${index}`}\n                      cx={head.x}\n                      cy={head.y}\n                      fill={onClosingPoint ? \"orange\" : \"blue\"}\n                      r={SEGMENT_CIRCLE_RADIUS}\n                    />,\n                  ];\n                  let keyIndex = 0;\n                  for (const point of tail) {\n                    keyIndex++;\n                    lines.push(\n                      <g key={`segments-${index}-${keyIndex}`}>\n                        {drawState === DRAW_STATE_INSERT_SEGMENT &&\n                          currentShapeIndex === index &&\n                          currentSegmentIndex === keyIndex && (\n                            <circle\n                              className={\"segment\"}\n                              data-is-segment={true}\n                              cx={100}\n                              cy={200}\n                              fill={\"black\"}\n                              r={SEGMENT_CIRCLE_RADIUS}\n                              {...(() => {\n                                const reflection = reflect(\n                                  cursorPosition,\n                                  head,\n                                  point\n                                );\n                                return {\n                                  cx: (reflection.x + cursorPosition.x) / 2,\n                                  cy: (reflection.y + cursorPosition.y) / 2,\n                                };\n                              })()}\n                            />\n                          )}\n                        <circle\n                          data-shape-index={index}\n                          data-point-index={keyIndex}\n                          className={\"segment\"}\n                          data-is-segment={true}\n                          cx={point.x}\n                          cy={point.y}\n                          fill={\n                            (() => {\n                              let isPointInSelectionRectangle;\n\n                              if (drawState === DRAW_STATE_SELECTION_SET) {\n                                isPointInSelectionRectangle =\n                                  isPointInRectangle(point, selectionRectangle);\n                              } else if (\n                                drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS\n                              ) {\n                                let _shapeIndex = 0;\n                                let _pointIndex = 0;\n                                for (shape of shapes) {\n                                  if (index === _shapeIndex) {\n                                    break;\n                                  }\n                                  _shapeIndex++;\n                                  _pointIndex += shape.points.length;\n                                }\n                                return (\n                                  selectedPointIndexes.indexOf(\n                                    _pointIndex + keyIndex\n                                  ) > -1\n                                );\n                              } else {\n                                isPointInSelectionRectangle = false;\n                              }\n\n                              const isPointInCurrentSelection =\n                                drawState === DRAW_STATE_SELECTION_STARTED &&\n                                isPointInRectangle(\n                                  point,\n                                  calculateSelectionRectangle(\n                                    mouseDownCursorPosition,\n                                    cursorPosition\n                                  )\n                                );\n\n                              return (\n                                isPointInSelectionRectangle ||\n                                isPointInCurrentSelection\n                              );\n                            })()\n                              ? \"blue\"\n                              : \"silver\"\n                          }\n                          r={SEGMENT_CIRCLE_RADIUS}\n                        />\n                        <line\n                          stroke={\"black\"}\n                          x1={head.x}\n                          y1={head.y}\n                          x2={point.x}\n                          y2={point.y}\n                          data-is-segment-line={true}\n                          data-shape-index={index}\n                          data-segment-index={keyIndex}\n                        />\n                      </g>\n                    );\n                    head = point;\n                  }\n                  return lines;\n                })()}\n              </g>\n            );\n          })}\n          {drawState === DRAW_STATE_SELECTION_STARTED &&\n            (() => {\n              const { x, y, width, height } = calculateSelectionRectangle(\n                mouseDownCursorPosition,\n                cursorPosition\n              );\n              return (\n                <rect\n                  x={x}\n                  y={y}\n                  width={width}\n                  height={height}\n                  className={\"selection-rectangle\"}\n                ></rect>\n              );\n            })()}\n        </svg>\n      </div>\n      {(() => {\n        let _height = 10;\n        return previews.map(({ shapes: shapeIndexes, size }, index) => {\n          const preview = (\n            <Preview\n              shapes={shapes}\n              shapeIndexes={shapeIndexes}\n              size={size}\n              key={index}\n              onRemove={(event) => {\n                event.preventDefault();\n                setPreviews(previews.filter((_, previewIndex) => index !== previewIndex))\n                setDrawState(DRAW_STATE_READY);\n              }}\n              style={{\n                top: _height,\n              }}\n            />\n          );\n          _height += size + 40;\n          return preview;\n        });\n      })()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}