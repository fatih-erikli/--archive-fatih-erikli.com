{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["replaceStateTimeoutId","INITIAL_SHAPES","points","x","y","fill","reflect","p","p0","p1","dx","dy","a","b","Math","round","DRAW_STATE_SELECTION_STARTED","DRAW_STATE_LABELS","handleMouseDown","drawState","drawStateSetterFunction","currentShapeIndexSetterFunction","selectedShapeIndexSetterFunction","currentSegmentIndexSetterFunction","shapes","shapesSetterFunction","currentShapeIndex","currentSegmentIndex","cursorPosition","mouseDownCursorPositionSetterFunction","mouseDownShapePointsSetterFunction","selectionRectangle","setMouseDownSelectionRectangle","selectedPointIndexesSetterFunction","event","clientRect","document","querySelector","getBoundingClientRect","clientX","left","clientY","top","target","dataset","shapeIndex","pointIndex","Number","isEmptySpace","isSegmentLine","isSegment","isPolygon","flatPoints","map","shape","flat","selectedPointIndexes","point","index","isPointInRectangle","filter","Boolean","head","reflection","midpoint","newPoints","splice","findLastOpenShapeIndex","findIndex","last","length","first","continueDrawing","mouseDownCursorPosition","selectionRectangleSetterFunction","currentFillColor","_hasSelection","calculateSelectionRectangle","innerLoop","_","selectionIsValid","canvasBoundingClientRect","right","bottom","newShapes","lastOpenShapeIndex","newAppState","newShape","cursorPositionOrClosingPoint","distance","handleMouseMove","cursorPositionSetterFunction","mouseDownShapePoints","keyStates","setSelectionRectangle","mouseDownSelectionRectangle","_shapeIndex","cachedPointIndex","indexOf","segmentIndex","isShiftPressed","max","min","x1","y1","x2","y2","sqrt","handleKeyUp","keyStatesSetterFunction","isCtrlPressed","minX","minY","width","height","rectangle","App","useState","setDrawState","setCursorPosition","setMouseDownCursorPosition","setMouseDownShapePoints","setCurrentShapeIndex","selectedShapeIndex","setSelectedShapeIndex","setCurrentSegmentIndex","name","defaults","state","setState","value","clearTimeout","setTimeout","window","location","href","split","hashStates","found","builtHashStates","reduce","prev","current","hashName","hashValue","JSON","stringify","join","history","pushState","fragment","parse","decodeURIComponent","useHashedState","setShapes","refreshShapesState","setKeyStates","setSelectedPointIndexes","r","g","setCurrentFillColor","showColorPicker","setShowColorPicker","useEffect","onpopstate","onhashchange","tabIndex","onKeyDown","keyStateUpdates","shiftKey","ctrlKey","onKeyUp","className","onMouseDown","onMouseMove","onMouseUp","style","borderRadius","backgroundColor","display","cursor","onClick","position","color","onChange","pickedColor","rgb","updateCurrentShapeFill","xmlns","Array","undefined","stroke","shapeWithCursor","pointsAsSVGString","tail","onClosingPoint","lines","cx","cy","keyIndex","push","isPointInSelectionRectangle","_pointIndex","isPointInCurrentSelection","previewSize","id","divider","preventDefault","svgImage","createElement","body","appendChild","onload","canvas","clientWidth","clientHeight","getContext","drawImage","imageDataURL","toDataURL","parentElement","removeChild","URL","revokeObjectURL","src","downloadLink","download","click","createObjectURL","Blob","getElementById","outerHTML","type","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.27e0c206.chunk.js","sourcesContent":["import { useState, React, useEffect } from \"react\";\nimport { ChromePicker as ColorPicker } from \"react-color\";\nimport \"./App.css\";\n\nconst INITIAL_SHAPES = [\n  {\n    points: [\n      { x: 144, y: 296.3000030517578 },\n      { x: 138, y: 276.3000030517578 },\n      { x: 134, y: 269.3000030517578 },\n      { x: 106, y: 220.3000030517578 },\n      { x: 106, y: 167.3000030517578 },\n      { x: 137, y: 143.3000030517578 },\n      { x: 152, y: 132.3000030517578 },\n      { x: 159, y: 129.3000030517578 },\n      { x: 138, y: 103.30000305175781 },\n      { x: 225, y: 64.30000305175781 },\n      { x: 359, y: 97.30000305175781 },\n      { x: 408, y: 150.3000030517578 },\n      { x: 403, y: 228.3000030517578 },\n      { x: 388, y: 276.3000030517578 },\n      { x: 381, y: 289.3000030517578 },\n      { x: 365, y: 354.3000030517578 },\n      { x: 366, y: 290.3000030517578 },\n      { x: 356, y: 273.3000030517578 },\n      { x: 350, y: 216.3000030517578 },\n      { x: 297, y: 183.3000030517578 },\n      { x: 246, y: 178.3000030517578 },\n      { x: 174, y: 162.3000030517578 },\n      { x: 151, y: 222.3000030517578 },\n      { x: 152, y: 344.3000030517578 },\n      { x: 144, y: 296.3000030517578 },\n    ],\n    fill: \"rgba(122, 122, 122, 0.9)\",\n  },\n  {\n    points: [\n      { x: 250, y: 410.6333312988281 },\n      { x: 263, y: 412.066650390625 },\n      { x: 278, y: 409.6333312988281 },\n      { x: 271, y: 429.01666259765625 },\n      { x: 264, y: 433.6333312988281 },\n      { x: 255, y: 428.01666259765625 },\n      { x: 250, y: 410.6333312988281 },\n    ],\n    fill: \"rgba(182, 182, 182, 0.9)\",\n  },\n  {\n    points: [\n      { x: 211, y: 399.3833312988281 },\n      { x: 219, y: 387.3833312988281 },\n      { x: 250, y: 380.3833312988281 },\n      { x: 258, y: 377.3833312988281 },\n      { x: 264, y: 377.3833312988281 },\n      { x: 268, y: 380.3833312988281 },\n      { x: 276, y: 381.3833312988281 },\n      { x: 298, y: 385.3833312988281 },\n      { x: 308, y: 390.3833312988281 },\n      { x: 311, y: 397.3833312988281 },\n      { x: 313, y: 398.3833312988281 },\n      { x: 318, y: 389.3833312988281 },\n      { x: 309, y: 375.3833312988281 },\n      { x: 281, y: 365.3833312988281 },\n      { x: 275, y: 361.3833312988281 },\n      { x: 273, y: 359.3833312988281 },\n      { x: 265, y: 361.3833312988281 },\n      { x: 261, y: 361.3833312988281 },\n      { x: 256, y: 359.3833312988281 },\n      { x: 251, y: 358.3833312988281 },\n      { x: 247, y: 359.3833312988281 },\n      { x: 239, y: 365.3833312988281 },\n      { x: 225, y: 367.3833312988281 },\n      { x: 214, y: 371.3833312988281 },\n      { x: 206, y: 378.3833312988281 },\n      { x: 201, y: 390.3833312988281 },\n      { x: 204, y: 395.3833312988281 },\n      { x: 211, y: 399.3833312988281 },\n    ],\n    fill: \"rgba(215, 215, 215, 0.9)\",\n  },\n  {\n    points: [\n      { x: 269, y: 265.1000061035156 },\n      { x: 290, y: 260.1000061035156 },\n      { x: 309, y: 253.6999969482422 },\n      { x: 331, y: 254.10000610351562 },\n      { x: 348, y: 264.1000061035156 },\n      { x: 334, y: 245.10000610351562 },\n      { x: 322, y: 242.6999969482422 },\n      { x: 309, y: 243.10000610351562 },\n      { x: 285, y: 245.10000610351562 },\n      { x: 273, y: 250.10000610351562 },\n      { x: 269, y: 265.1000061035156 },\n    ],\n    fill: \"rgba(170, 170, 170, 0.9)\",\n  },\n  {\n    points: [\n      { x: 162, y: 267.1000061035156 },\n      { x: 180, y: 256.1000061035156 },\n      { x: 193, y: 253.6999969482422 },\n      { x: 211, y: 258.1000061035156 },\n      { x: 233, y: 264.1000061035156 },\n      { x: 233, y: 250.10000610351562 },\n      { x: 221, y: 244.6999969482422 },\n      { x: 209, y: 243.10000610351562 },\n      { x: 191, y: 242.6999969482422 },\n      { x: 175, y: 245.10000610351562 },\n      { x: 166, y: 252.10000610351562 },\n      { x: 162, y: 267.1000061035156 },\n    ],\n    fill: \"rgba(193, 193, 193, 0.9)\",\n  },\n  {\n    points: [\n      { x: 284, y: 284.3000030517578 },\n      { x: 295, y: 275.3000030517578 },\n      { x: 307, y: 273.3000030517578 },\n      { x: 323, y: 273.3000030517578 },\n      { x: 329, y: 275.9499969482422 },\n      { x: 338, y: 282.3000030517578 },\n      { x: 330.5, y: 278.91666412353516 },\n      { x: 328.5, y: 277.6500015258789 },\n      { x: 326, y: 276.3000030517578 },\n      { x: 311, y: 273.3000030517578 },\n      { x: 304, y: 274.3000030517578 },\n      { x: 297, y: 276.3000030517578 },\n      { x: 286, y: 284.3000030517578 },\n      { x: 284, y: 284.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 282, y: 284.3000030517578 },\n      { x: 294, y: 287.3000030517578 },\n      { x: 302, y: 290.3000030517578 },\n      { x: 311, y: 290.3000030517578 },\n      { x: 319, y: 288.3000030517578 },\n      { x: 328, y: 283.3000030517578 },\n      { x: 336, y: 282.3000030517578 },\n      { x: 330, y: 284.3000030517578 },\n      { x: 326, y: 286.3000030517578 },\n      { x: 320, y: 290.3000030517578 },\n      { x: 316, y: 291.3000030517578 },\n      { x: 303, y: 292.3000030517578 },\n      { x: 294, y: 289.3000030517578 },\n      { x: 282, y: 284.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 176, y: 287.3000030517578 },\n      { x: 186, y: 282.3000030517578 },\n      { x: 195, y: 278.3000030517578 },\n      { x: 208, y: 278.3000030517578 },\n      { x: 211, y: 279.31666564941406 },\n      { x: 215, y: 281.3000030517578 },\n      { x: 225, y: 287.3000030517578 },\n      { x: 230, y: 289.3000030517578 },\n      { x: 234, y: 290.3000030517578 },\n      { x: 234, y: 289.3000030517578 },\n      { x: 229, y: 287.3000030517578 },\n      { x: 222, y: 284.3000030517578 },\n      { x: 215, y: 279.3000030517578 },\n      { x: 209, y: 276.3000030517578 },\n      { x: 201, y: 276.3000030517578 },\n      { x: 194, y: 276.3000030517578 },\n      { x: 184, y: 280.3000030517578 },\n      { x: 179, y: 283.3000030517578 },\n      { x: 176, y: 287.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 229, y: 289.3000030517578 },\n      { x: 219, y: 292.3000030517578 },\n      { x: 214, y: 295.3000030517578 },\n      { x: 207, y: 295.8999938964844 },\n      { x: 200, y: 296.3000030517578 },\n      { x: 186, y: 294.6999969482422 },\n      { x: 182, y: 291.3000030517578 },\n      { x: 177, y: 287.3000030517578 },\n      { x: 183, y: 291.3000030517578 },\n      { x: 187, y: 293.3000030517578 },\n      { x: 201, y: 294.3000030517578 },\n      { x: 212, y: 294.3000030517578 },\n      { x: 219, y: 291.3000030517578 },\n      { x: 229, y: 289.3000030517578 },\n    ],\n  },\n  {\n    points: [\n      { x: 195, y: 279.3000030517578 },\n      { x: 194, y: 283 },\n      { x: 194, y: 287.3000030517578 },\n      { x: 196, y: 290.3000030517578 },\n      { x: 201, y: 292.3000030517578 },\n      { x: 201, y: 292.1500015258789 },\n      { x: 207, y: 291 },\n      { x: 210, y: 289 },\n      { x: 211, y: 285.3000030517578 },\n      { x: 210, y: 281.3000030517578 },\n      { x: 205, y: 278.3000030517578 },\n      { x: 197, y: 278.3000030517578 },\n      { x: 195, y: 279.3000030517578 },\n    ],\n    fill: \"rgba(137, 137, 137, 0.9)\",\n  },\n  {\n    points: [\n      { x: 304, y: 276.3000030517578 },\n      { x: 304, y: 283.3000030517578 },\n      { x: 307, y: 287.3000030517578 },\n      { x: 313, y: 288.3000030517578 },\n      { x: 320, y: 284.3000030517578 },\n      { x: 320, y: 279.3000030517578 },\n      { x: 317, y: 275.3000030517578 },\n      { x: 312, y: 273.3000030517578 },\n      { x: 307, y: 274.3000030517578 },\n      { x: 304, y: 276.3000030517578 },\n    ],\n    fill: \"rgba(104, 104, 104, 0.9)\",\n  },\n  {\n    points: [\n      { x: 231, y: 393.29998779296875 },\n      { x: 253, y: 388.29998779296875 },\n      { x: 261, y: 387.29998779296875 },\n      { x: 265, y: 387.3000030517578 },\n      { x: 268, y: 387.29998779296875 },\n      { x: 277, y: 388.29998779296875 },\n      { x: 286, y: 390.29998779296875 },\n      { x: 294, y: 393.29998779296875 },\n      { x: 278, y: 391.29998779296875 },\n      { x: 273, y: 391.29998779296875 },\n      { x: 263, y: 391.29998779296875 },\n      { x: 254, y: 391.29998779296875 },\n      { x: 247, y: 392.29998779296875 },\n      { x: 239, y: 394.29998779296875 },\n      { x: 231, y: 393.29998779296875 },\n    ],\n  },\n  {\n    points: [\n      { x: 231, y: 391.4499969482422 },\n      { x: 240, y: 399.4499969482422 },\n      { x: 246, y: 400.3000030517578 },\n      { x: 252, y: 400.4499969482422 },\n      { x: 276, y: 400.4499969482422 },\n      { x: 285, y: 396.4499969482422 },\n      { x: 290, y: 394.21665954589844 },\n      { x: 294, y: 392.4499969482422 },\n      { x: 281, y: 395.4499969482422 },\n      { x: 277, y: 397.4499969482422 },\n      { x: 267, y: 398.4499969482422 },\n      { x: 252, y: 397.4499969482422 },\n      { x: 242, y: 397.4499969482422 },\n      { x: 231, y: 391.4499969482422 },\n    ],\n    fill: \"rgba(252, 252, 252, 0.9)\",\n  },\n  {\n    fill: \"rgba(199, 199, 199, 0.41)\",\n    points: [\n      { x: 155, y: 349.3000030517578 },\n      { x: 175, y: 404.3000030517578 },\n      { x: 226, y: 457.3000030517578 },\n      { x: 298, y: 452.3000030517578 },\n      { x: 340, y: 411.3000030517578 },\n      { x: 364, y: 354.3000030517578 },\n      { x: 366, y: 288.3000030517578 },\n      { x: 363, y: 233.3000030517578 },\n      { x: 326, y: 188.3000030517578 },\n      { x: 243, y: 171.3000030517578 },\n      { x: 176, y: 160.3000030517578 },\n      { x: 152, y: 225.3000030517578 },\n      { x: 155, y: 349.3000030517578 },\n    ],\n  },\n];\n\nconst reflect = (p, p0, p1) => {\n  // https://gist.github.com/balint42/b99934b2a6990a53e14b\n  let dx, dy, a, b, x, y;\n  dx = p1.x - p0.x;\n  dy = p1.y - p0.y;\n  a = (dx * dx - dy * dy) / (dx * dx + dy * dy);\n  b = (2 * dx * dy) / (dx * dx + dy * dy);\n  x = Math.round(a * (p.x - p0.x) + b * (p.y - p0.y) + p0.x);\n  y = Math.round(b * (p.x - p0.x) - a * (p.y - p0.y) + p0.y);\n  return { x, y };\n};\n\nconst DRAW_STATE_READY = 1;\nconst DRAW_STATE_START = 2;\nconst DRAW_STATE_MOVE_SEGMENT = 3;\nconst DRAW_STATE_INSERT_SEGMENT = 4;\nconst DRAW_STATE_SELECTION = 5;\nconst DRAW_STATE_MOVE_SHAPE = 6;\nconst DRAW_STATE_ON_SHAPE = 7;\nconst DRAW_STATE_ON_SEGMENT = 8;\nconst DRAW_STATE_REMOVE_SEGMENT = 9;\nconst DRAW_STATE_REMOVE_SHAPE = 10;\nconst DRAW_STATE_SELECTION_STARTED = 11;\nconst DRAW_STATE_ON_SEGMENT_SELECTION = 12;\nconst DRAW_STATE_MOVE_SELECTED_SEGMENTS = 13;\nconst DRAW_STATE_SELECTION_SET = 14;\n\nconst SHAPE_CLOSE_DISTANCE = 2;\nconst SEGMENT_CIRCLE_RADIUS = 1;\n\nconst DRAW_STATE_LABELS = {\n  [DRAW_STATE_READY]: \"Click on canvas and drag it to start drawing\",\n  [DRAW_STATE_START]: \"Click on another point to connect with the latest\",\n  [DRAW_STATE_MOVE_SEGMENT]: \"Moving a segment of a shape\",\n  [DRAW_STATE_INSERT_SEGMENT]:\n    \"Click on the a point on the line to insert a segment\",\n  [DRAW_STATE_SELECTION]: \"Select points to move\",\n  [DRAW_STATE_ON_SHAPE]: \"Drag the shape to move\",\n  [DRAW_STATE_MOVE_SHAPE]: \"Moving a shape\",\n  [DRAW_STATE_ON_SEGMENT]: \"Drag the segment to move it\",\n  [DRAW_STATE_REMOVE_SEGMENT]: \"Click on the segment to remove\",\n  [DRAW_STATE_REMOVE_SHAPE]: \"Click on the shape to remove\",\n  [DRAW_STATE_SELECTION_STARTED]: \"Selection started\",\n  [DRAW_STATE_ON_SEGMENT_SELECTION]: \"Move selected segments\",\n  [DRAW_STATE_MOVE_SELECTED_SEGMENTS]: \"Moving selected segments\",\n  [DRAW_STATE_SELECTION_SET]: \"Selection set\",\n};\n\nfunction handleMouseDown(\n  drawState,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  selectedShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  cursorPosition,\n  mouseDownCursorPositionSetterFunction,\n  mouseDownShapePointsSetterFunction,\n  selectionRectangle,\n  setMouseDownSelectionRectangle,\n  selectedPointIndexesSetterFunction\n) {\n  return (event) => {\n    if (drawState === DRAW_STATE_READY) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n    }\n\n    if (drawState === DRAW_STATE_ON_SEGMENT) {\n      const { shapeIndex, pointIndex } = event.target.dataset;\n      currentShapeIndexSetterFunction(Number(shapeIndex));\n      selectedShapeIndexSetterFunction(Number(shapeIndex));\n      currentSegmentIndexSetterFunction(Number(pointIndex));\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_SET) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      const isEmptySpace =\n        !event.target.dataset.isSegmentLine &&\n        !event.target.dataset.isSegment &&\n        !event.target.dataset.isPolygon;\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      if (isEmptySpace) {\n        drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n      } else {\n        const flatPoints = shapes.map((shape) => shape.points).flat();\n        mouseDownShapePointsSetterFunction(flatPoints);\n        const selectedPointIndexes = flatPoints\n          .map((point, index) =>\n            isPointInRectangle(point, selectionRectangle) ? { index } : null\n          )\n          .filter(Boolean)\n          .map(({ index }) => index);\n        setMouseDownSelectionRectangle({\n          x: selectionRectangle.x,\n          y: selectionRectangle.y,\n        });\n        selectedPointIndexesSetterFunction(selectedPointIndexes);\n        drawStateSetterFunction(DRAW_STATE_MOVE_SELECTED_SEGMENTS);\n      }\n    }\n\n    if (drawState === DRAW_STATE_ON_SHAPE) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      selectedShapeIndexSetterFunction(currentShapeIndex);\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      mouseDownShapePointsSetterFunction(shapes[currentShapeIndex].points);\n      drawStateSetterFunction(DRAW_STATE_MOVE_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n  };\n}\n\nfunction findLastOpenShapeIndex(shapes) {\n  return shapes.findIndex(({ points }) => {\n    const last = points[points.length - 1];\n    const first = points[0];\n    return points.length < 3 || !(first.x === last.x && first.y === last.y);\n  });\n}\n\nfunction continueDrawing(\n  cursorPosition,\n  drawStateSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawState,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  mouseDownCursorPosition,\n  selectionRectangleSetterFunction,\n  currentFillColor\n) {\n  return (event) => {\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      drawStateSetterFunction(DRAW_STATE_READY);\n      currentShapeIndexSetterFunction(-1);\n      currentSegmentIndexSetterFunction(-1);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_STARTED) {\n      const selectionRectangle = calculateSelectionRectangle(\n        mouseDownCursorPosition,\n        cursorPosition\n      );\n      selectionRectangleSetterFunction(selectionRectangle);\n      let _hasSelection;\n      for (const shape of shapes) {\n        innerLoop: for (const point of shape.points) {\n          _hasSelection = isPointInRectangle(point, selectionRectangle);\n          if (_hasSelection) {\n            break innerLoop;\n          }\n        }\n        if (_hasSelection) {\n          break;\n        }\n      }\n      drawStateSetterFunction(\n        _hasSelection ? DRAW_STATE_SELECTION_SET : DRAW_STATE_READY\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      drawStateSetterFunction(DRAW_STATE_SELECTION_SET);\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      drawStateSetterFunction(DRAW_STATE_ON_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.filter((_, index) => index !== currentShapeIndex)\n      );\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.filter(\n            (point, pointIndex) =>\n              !(shapeIndex === currentShapeIndex) ||\n              (shapeIndex === currentShapeIndex &&\n                currentSegmentIndex !== pointIndex)\n          ),\n        }))\n      );\n    }\n\n    const selectionIsValid =\n      mouseDownCursorPosition.x !== cursorPosition.x &&\n      mouseDownCursorPosition.y !== cursorPosition.y;\n\n    const isEmptySpace =\n      !event.target.dataset.isSegmentLine &&\n      !event.target.dataset.isSegment &&\n      !event.target.dataset.isPolygon;\n\n    if (drawState === DRAW_STATE_START || (!selectionIsValid && isEmptySpace)) {\n      const canvasBoundingClientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      if (\n        event.clientX < canvasBoundingClientRect.left ||\n        event.clientX > canvasBoundingClientRect.right ||\n        event.clientY < canvasBoundingClientRect.top ||\n        event.clientY > canvasBoundingClientRect.bottom\n      ) {\n        return;\n      }\n\n      const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n\n      let newShapes;\n      let newAppState = DRAW_STATE_START;\n      if (lastOpenShapeIndex === -1) {\n        newShapes = [...shapes, { points: [cursorPosition] }];\n      } else {\n        newShapes = shapes.map((shape, index) => {\n          let newShape;\n          if (index === lastOpenShapeIndex) {\n            let cursorPositionOrClosingPoint;\n\n            if (\n              distance(\n                cursorPosition.x,\n                cursorPosition.y,\n                shape.points[0].x,\n                shape.points[0].y\n              ) < SHAPE_CLOSE_DISTANCE\n            ) {\n              cursorPositionOrClosingPoint = shape.points[0];\n              newAppState = DRAW_STATE_READY;\n            } else {\n              cursorPositionOrClosingPoint = cursorPosition;\n            }\n\n            newShape = {\n              fill: currentFillColor,\n              points: [...shape.points, cursorPositionOrClosingPoint],\n            };\n          } else {\n            newShape = shape;\n          }\n\n          return newShape;\n        });\n      }\n\n      drawStateSetterFunction(newAppState);\n      shapesSetterFunction(newShapes);\n    }\n  };\n}\n\nfunction handleMouseMove(\n  cursorPositionSetterFunction,\n  drawState,\n  currentShapeIndex,\n  currentSegmentIndex,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  mouseDownCursorPosition,\n  mouseDownShapePoints,\n  keyStates,\n  selectionRectangle,\n  setSelectionRectangle,\n  mouseDownSelectionRectangle,\n  selectedPointIndexes\n) {\n  return ({ clientX, clientY, target }) => {\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    const cursorPosition = {\n      x: clientX - clientRect.left,\n      y: clientY - clientRect.top,\n    };\n    cursorPositionSetterFunction(cursorPosition);\n\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            currentShapeIndex === shapeIndex &&\n            (currentSegmentIndex === pointIndex ||\n              (currentSegmentIndex === shape.points.length - 1 &&\n                pointIndex === 0))\n              ? cursorPosition\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      let _shapeIndex = 0;\n      setSelectionRectangle({\n        ...selectionRectangle,\n        x:\n          mouseDownSelectionRectangle.x -\n          (mouseDownCursorPosition.x - cursorPosition.x),\n        y:\n          mouseDownSelectionRectangle.y -\n          (mouseDownCursorPosition.y - cursorPosition.y),\n      });\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) => {\n            const cachedPointIndex = _shapeIndex;\n            _shapeIndex++;\n            return selectedPointIndexes.indexOf(cachedPointIndex) > -1\n              ? {\n                  x:\n                    mouseDownShapePoints[cachedPointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[cachedPointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point;\n          }),\n        }))\n      );\n    }\n\n    if (\n      drawState === DRAW_STATE_READY ||\n      drawState === DRAW_STATE_ON_SHAPE ||\n      drawState === DRAW_STATE_ON_SEGMENT ||\n      drawState === DRAW_STATE_ON_SEGMENT_SELECTION ||\n      drawState === DRAW_STATE_REMOVE_SHAPE ||\n      drawState === DRAW_STATE_REMOVE_SEGMENT\n    ) {\n      const {\n        isSegmentLine,\n        isSegment,\n        isPolygon,\n        shapeIndex,\n        segmentIndex,\n        pointIndex,\n      } = target.dataset;\n      // todo: merge pointIndex and segmentIndex\n      if (isSegmentLine) {\n        drawStateSetterFunction(DRAW_STATE_INSERT_SEGMENT);\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(segmentIndex));\n      } else if (isPolygon) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SHAPE\n            : DRAW_STATE_ON_SHAPE\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n      } else if (isSegment) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SEGMENT\n            : selectionRectangle\n            ? DRAW_STATE_ON_SEGMENT_SELECTION\n            : DRAW_STATE_ON_SEGMENT\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(pointIndex));\n      } else {\n        drawStateSetterFunction(DRAW_STATE_READY);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            shapeIndex === currentShapeIndex\n              ? {\n                  x:\n                    mouseDownShapePoints[pointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[pointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const midpointDistance = distance(\n        midpoint.x,\n        midpoint.y,\n        cursorPosition.x,\n        cursorPosition.y\n      );\n      if (\n        midpointDistance > 1 ||\n        midpoint.y > Math.max(head.y, point.y) ||\n        midpoint.y < Math.min(head.y, point.y) ||\n        midpoint.x > Math.max(head.x, point.x) ||\n        midpoint.x < Math.min(head.x, point.x)\n      ) {\n        drawStateSetterFunction(DRAW_STATE_READY);\n        currentShapeIndexSetterFunction(-1);\n        currentSegmentIndexSetterFunction(-1);\n      }\n    }\n  };\n}\n\nlet replaceStateTimeoutId;\n\nfunction useHashedState(name, defaults) {\n  const [state, setState] = useState(defaults);\n  return [\n    state,\n    (value, callback = () => {}) => {\n      if (replaceStateTimeoutId) {\n        clearTimeout(replaceStateTimeoutId);\n      }\n\n      replaceStateTimeoutId = setTimeout(() => {\n        const [_, ...hashStates] = (\n          window.location.href.indexOf(\"#\") > -1\n            ? window.location.href.split(\"#\")\n            : [null]\n        ).filter(Boolean);\n\n        let found = false;\n        const builtHashStates = hashStates\n          .reduce((prev, current) => {\n            let [hashName, hashValue] = current.split(\"=\");\n            if (name === hashName) {\n              found = true;\n              hashValue = JSON.stringify(value);\n              hashName = name;\n            }\n\n            return [...prev, `${hashName}=${hashValue}`];\n          }, [])\n          .join(\"#\");\n\n        if (!found) {\n          window.history.pushState(\n            null,\n            null,\n            `${\n              builtHashStates && `#${builtHashStates}`\n            }#${name}=${JSON.stringify(value)}`\n          );\n        } else {\n          window.history.pushState(null, null, `#${builtHashStates}`);\n        }\n      }, 50);\n      setState(value);\n    },\n    () => {\n      const [head, fragment] = window.location.href.split(`#${name}=`);\n      if (fragment) {\n        const [value] = fragment.split(\"#\");\n        setState(JSON.parse(decodeURIComponent(value)));\n      }\n    },\n  ];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const a = x1 - x2;\n  const b = y1 - y2;\n  return Math.sqrt(a * a + b * b);\n}\n\nfunction handleKeyDown(keyStatesSetterFunction) {\n  return (event) => {\n    let keyStateUpdates = {};\n    event.shiftKey && (keyStateUpdates[\"isShiftPressed\"] = true);\n    event.ctrlKey && (keyStateUpdates[\"isCtrlPressed\"] = true);\n    keyStatesSetterFunction(keyStateUpdates);\n  };\n}\n\nfunction handleKeyUp(keyStatesSetterFunction) {\n  return (_) => {\n    keyStatesSetterFunction({ isCtrlPressed: false, isShiftPressed: false });\n  };\n}\n\nfunction calculateSelectionRectangle(mouseDownCursorPosition, cursorPosition) {\n  const minX = Math.min(mouseDownCursorPosition.x, cursorPosition.x);\n  const minY = Math.min(mouseDownCursorPosition.y, cursorPosition.y);\n  const maxX = Math.max(mouseDownCursorPosition.x, cursorPosition.x);\n  const maxY = Math.max(mouseDownCursorPosition.y, cursorPosition.y);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nfunction isPointInRectangle(point, rectangle) {\n  return (\n    point.x > rectangle.x &&\n    point.x < rectangle.x + rectangle.width &&\n    point.y > rectangle.y &&\n    point.y < rectangle.y + rectangle.height\n  );\n}\n\nfunction updateCurrentShapeFill(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, fill: pickedColor } : shape\n    )\n  );\n}\n\nfunction App() {\n  const [drawState, setDrawState] = useState(DRAW_STATE_READY);\n  const [cursorPosition, setCursorPosition] = useState({ x: -1, y: -1 });\n  const [mouseDownCursorPosition, setMouseDownCursorPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  const [mouseDownShapePoints, setMouseDownShapePoints] = useState([]);\n  const [currentShapeIndex, setCurrentShapeIndex] = useState(-1);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(-1);\n  const [currentSegmentIndex, setCurrentSegmentIndex] = useState(-1);\n  const [shapes, setShapes, refreshShapesState] = useHashedState(\n    \"shapes\",\n    INITIAL_SHAPES\n  );\n  const [keyStates, setKeyStates] = useState({\n    isCtrlPressed: false,\n    isShiftPressed: false,\n  });\n  const [selectionRectangle, setSelectionRectangle] = useState(null);\n  const [mouseDownSelectionRectangle, setMouseDownSelectionRectangle] =\n    useState({ x: -1, y: -1 });\n  const [selectedPointIndexes, setSelectedPointIndexes] = useState([]);\n  const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n  const previews = [256, 128];\n  const [currentFillColor, setCurrentFillColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  useEffect(() => {\n    refreshShapesState();\n    window.onpopstate = refreshShapesState;\n    window.onhashchange = refreshShapesState;\n  }, []);\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown(setKeyStates)}\n      onKeyUp={handleKeyUp(setKeyStates)}\n      className=\"app-container\"\n      onMouseDown={handleMouseDown(\n        drawState,\n        setDrawState,\n        setCurrentShapeIndex,\n        setSelectedShapeIndex,\n        setCurrentSegmentIndex,\n        shapes,\n        setShapes,\n        currentShapeIndex,\n        currentSegmentIndex,\n        cursorPosition,\n        setMouseDownCursorPosition,\n        setMouseDownShapePoints,\n        selectionRectangle,\n        setMouseDownSelectionRectangle,\n        setSelectedPointIndexes\n      )}\n      onMouseMove={handleMouseMove(\n        setCursorPosition,\n        drawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n        shapes,\n        setShapes,\n        setDrawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        mouseDownCursorPosition,\n        mouseDownShapePoints,\n        keyStates,\n        selectionRectangle,\n        setSelectionRectangle,\n        mouseDownSelectionRectangle,\n        selectedPointIndexes\n      )}\n      onMouseUp={continueDrawing(\n        cursorPosition,\n        setDrawState,\n        shapes,\n        setShapes,\n        drawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        currentShapeIndex,\n        currentSegmentIndex,\n        mouseDownCursorPosition,\n        setSelectionRectangle,\n        currentFillColor\n      )}\n    >\n      <h1>\n        Hello, my name is Fatih.\n        <div className={\"color-picker\"}>\n          <span\n            style={{\n              borderRadius: 5,\n              backgroundColor: `rgba(${currentFillColor.r}, ${currentFillColor.g}, ${currentFillColor.b}, ${currentFillColor.a})`,\n              width: 20,\n              height: 20,\n              display: \"inline-block\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              setShowColorPicker(!showColorPicker);\n            }}\n          ></span>\n          {showColorPicker && (\n            <div\n              style={{\n                position: \"absolute\",\n              }}\n            >\n              <ColorPicker\n                color={currentFillColor}\n                onChange={(color) => {\n                  const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                  setCurrentFillColor({\n                    r: color.rgb.r,\n                    g: color.rgb.g,\n                    b: color.rgb.b,\n                    a: color.rgb.a,\n                  });\n                  updateCurrentShapeFill(\n                    shapes,\n                    setShapes,\n                    selectedShapeIndex,\n                    pickedColor\n                  );\n                }}\n              />\n            </div>\n          )}\n        </div>\n        {keyStates.isShiftPressed && \"shift\"}\n        {keyStates.isCtrlPressed && \"ctrl\"}\n      </h1>\n      <div className=\"editor\">\n        <div className={\"canvas-wrapper\"}>\n          <h3>\n            #Canvas{\" \"}\n            <span className={\"drawing-info\"}>\n              {DRAW_STATE_LABELS[drawState]}\n            </span>\n          </h3>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"canvas\"\n            width={512}\n            height={512}\n            style={\n              {\n                // background: 'url(vesikalik.jpg)',\n                // backgroundSize: 542,\n                // backgroundPositionX: 0,\n                // backgroundPositionY: -60,\n              }\n            }\n          >\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`y-${index}`}\n                x1={0}\n                x2={512}\n                style={{\n                  stroke: \"silver\",\n                }}\n                y1={index * 8}\n                y2={index * 8}\n              />\n            ))}\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`x-${index}`}\n                y1={0}\n                y2={512}\n                style={{\n                  stroke: \"silver\",\n                }}\n                x1={index * 8}\n                x2={index * 8}\n              />\n            ))}\n            <line\n              x1={0}\n              x2={512}\n              style={{ stroke: \"blue\" }}\n              y1={32 * 8}\n              y2={32 * 8}\n            />\n            <line\n              y1={0}\n              y2={512}\n              style={{ stroke: \"blue\" }}\n              x1={32 * 8}\n              x2={32 * 8}\n            />\n            {shapes.map((shape, index) => {\n              const shapeWithCursor = [...shape.points, cursorPosition];\n              const pointsAsSVGString = shapeWithCursor\n                .map(({ x, y }) => `${x},${y}`)\n                .join(\" \");\n              return (\n                <g key={index}>\n                  <polygon\n                    points={pointsAsSVGString}\n                    data-is-polygon={true}\n                    data-shape-index={index}\n                    fill={shape.fill || \"transparent\"}\n                  />\n                  {(() => {\n                    let [head, ...tail] =\n                      drawState === DRAW_STATE_START &&\n                      lastOpenShapeIndex === index\n                        ? shapeWithCursor\n                        : shape.points;\n                    const onClosingPoint =\n                      distance(\n                        head.x,\n                        head.y,\n                        cursorPosition.x,\n                        cursorPosition.y\n                      ) > SHAPE_CLOSE_DISTANCE;\n                    const lines = [\n                      <circle\n                        data-shape-index={index}\n                        data-point-index={0}\n                        className={\"segment\"}\n                        data-is-segment={true}\n                        data-is-closing-point={true}\n                        key={`closing-point-${index}`}\n                        cx={head.x}\n                        cy={head.y}\n                        fill={onClosingPoint ? \"orange\" : \"blue\"}\n                        r={SEGMENT_CIRCLE_RADIUS}\n                      />,\n                    ];\n                    let keyIndex = 0;\n                    for (const point of tail) {\n                      keyIndex++;\n                      lines.push(\n                        <g key={`segments-${index}-${keyIndex}`}>\n                          {drawState === DRAW_STATE_INSERT_SEGMENT &&\n                            currentShapeIndex === index &&\n                            currentSegmentIndex === keyIndex && (\n                              <circle\n                                className={\"segment\"}\n                                data-is-segment={true}\n                                cx={100}\n                                cy={200}\n                                fill={\"black\"}\n                                r={SEGMENT_CIRCLE_RADIUS}\n                                {...(() => {\n                                  const reflection = reflect(\n                                    cursorPosition,\n                                    head,\n                                    point\n                                  );\n                                  return {\n                                    cx: (reflection.x + cursorPosition.x) / 2,\n                                    cy: (reflection.y + cursorPosition.y) / 2,\n                                  };\n                                })()}\n                              />\n                            )}\n                          <circle\n                            data-shape-index={index}\n                            data-point-index={keyIndex}\n                            className={\"segment\"}\n                            data-is-segment={true}\n                            cx={point.x}\n                            cy={point.y}\n                            fill={\n                              (() => {\n                                let isPointInSelectionRectangle;\n\n                                if (drawState === DRAW_STATE_SELECTION_SET) {\n                                  isPointInSelectionRectangle =\n                                    isPointInRectangle(\n                                      point,\n                                      selectionRectangle\n                                    );\n                                } else if (\n                                  drawState ===\n                                  DRAW_STATE_MOVE_SELECTED_SEGMENTS\n                                ) {\n                                  let _shapeIndex = 0;\n                                  let _pointIndex = 0;\n                                  for (shape of shapes) {\n                                    if (index === _shapeIndex) {\n                                      break;\n                                    }\n                                    _shapeIndex++;\n                                    _pointIndex += shape.points.length;\n                                  }\n                                  return (\n                                    selectedPointIndexes.indexOf(\n                                      _pointIndex + keyIndex\n                                    ) > -1\n                                  );\n                                } else {\n                                  isPointInSelectionRectangle = false;\n                                }\n\n                                const isPointInCurrentSelection =\n                                  drawState === DRAW_STATE_SELECTION_STARTED &&\n                                  isPointInRectangle(\n                                    point,\n                                    calculateSelectionRectangle(\n                                      mouseDownCursorPosition,\n                                      cursorPosition\n                                    )\n                                  );\n\n                                return (\n                                  isPointInSelectionRectangle ||\n                                  isPointInCurrentSelection\n                                );\n                              })()\n                                ? \"blue\"\n                                : \"gray\"\n                            }\n                            r={SEGMENT_CIRCLE_RADIUS}\n                          />\n                          <line\n                            stroke={\"black\"}\n                            x1={head.x}\n                            y1={head.y}\n                            x2={point.x}\n                            y2={point.y}\n                            data-is-segment-line={true}\n                            data-shape-index={index}\n                            data-segment-index={keyIndex}\n                          />\n                        </g>\n                      );\n                      head = point;\n                    }\n                    return lines;\n                  })()}\n                </g>\n              );\n            })}\n            {drawState === DRAW_STATE_SELECTION_STARTED &&\n              (() => {\n                const { x, y, width, height } = calculateSelectionRectangle(\n                  mouseDownCursorPosition,\n                  cursorPosition\n                );\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    className={\"selection-rectangle\"}\n                  ></rect>\n                );\n              })()}\n          </svg>\n        </div>\n        <div className=\"tools\">\n          <div className=\"preview\">\n            {previews.map((previewSize, index) => (\n              <div\n                className={\"preview-square\"}\n                key={`preview-${index}`}\n                style={{ width: previewSize }}\n              >\n                <h3>\n                  {previewSize}x{previewSize}\n                </h3>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"canvas\"\n                  id={`preview-${index}`}\n                  width={previewSize}\n                  height={previewSize}\n                >\n                  {shapes.map((shape, index) => {\n                    const divider = 512 / previewSize;\n                    const pointsAsSVGString = shape.points\n                      .map(({ x, y }) => `${x / divider},${y / divider}`)\n                      .join(\" \");\n                    return (\n                      <g key={index}>\n                        <polygon points={pointsAsSVGString} fill={shape.fill} />\n                      </g>\n                    );\n                  })}\n                </svg>\n                <a\n                  href=\"#\"\n                  className={\"download-link\"}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    const svgImage = document.createElement(\"img\");\n                    svgImage.width = previewSize;\n                    svgImage.height = previewSize;\n                    document.body.appendChild(svgImage);\n                    svgImage.onload = () => {\n                      const canvas = document.createElement(\"canvas\");\n                      canvas.width = svgImage.clientWidth;\n                      canvas.height = svgImage.clientHeight;\n                      const canvasCtx = canvas.getContext(\"2d\");\n                      canvasCtx.drawImage(svgImage, 0, 0);\n                      const imageDataURL = canvas.toDataURL(\"image/png\");\n                      svgImage.parentElement.removeChild(svgImage);\n                      URL.revokeObjectURL(svgImage.src);\n                      const downloadLink = document.createElement(\"a\");\n                      downloadLink.href = imageDataURL;\n                      downloadLink.download = `icon-${previewSize}.png`;\n                      downloadLink.click();\n                    };\n                    svgImage.src = URL.createObjectURL(\n                      new Blob(\n                        [document.getElementById(`preview-${index}`).outerHTML],\n                        {\n                          type: \"image/svg+xml\",\n                        }\n                      )\n                    );\n                  }}\n                >\n                  download\n                </a>\n              </div>\n            ))}\n          </div>\n\n          <div id=\"bio\">I am a software developer.</div>\n        </div>\n\n        <div id=\"page\">\n          <h1>Experiences</h1>\n          <div class=\"work-experience\">\n            <h1>EPAM Systems</h1>\n            <h2>Resource Manager &amp; Senior Software Engineer</h2>\n            <p>\n              I was responsible for the UI development of an embedded smart-tv\n              application. I mainly worked on the networking interface of the\n              application. It is a NodeJS application that using Wayland\n              compositor to interact with the backend services.\n            </p>\n          </div>\n          <div class=\"work-experience\">\n            <h1>EPAM Systems</h1>\n            <h2>Lead Software Engineer</h2>\n            <p>\n              I mainly worked on development of an interactive map for a seat\n              selection in a ticket-selling web site. I worked with React and\n              GraphQL.\n            </p>\n          </div>\n          <div class=\"work-experience\">\n            <h1>Adphorus</h1>\n            <h2>Senior Software Engineer</h2>\n            <p>\n              Adphorus is an intelligent ad and creative management tool. I\n              worked on the development of the UI with React and Redux.\n              Basically the tool allows you to create an ad and publish it on\n              several platforms such as Facebook and Twitter. I was working\n              closely with the Product team to provide users an abstract\n              interface which works for all the platforms.\n            </p>\n          </div>\n          <div class=\"work-experience\">\n            <h1>Hipolabs</h1>\n            <h2>Senior Software Engineer</h2>\n            <p>\n              I worked on the application chroma; which is an attribution editor\n              for collec- tion items and natural species. I worked as a\n              full-stack developer. Backend system built with Python and Tornado\n              web framework and running on AWS. The frontend and the attribution\n              editor is built with AngularJS.\n            </p>\n          </div>\n          <div class=\"work-experience\">\n            <h1>Metglobal</h1>\n            <h2>Senior Software Engineer &amp; Community Manager</h2>\n            <p>\n              Metglobal is a leading travel-tech company in Turkey. I was\n              responsible for the development travel websites and hotel search\n              engines. I also lead the development relationships community and\n              initiated a software development and research lab in the company.\n            </p>\n          </div>\n          <div class=\"work-experience\">\n            <h1>Freelancer</h1>\n            <p>\n              Worked on several projects in both backend and frontend sites.\n              Most of them are not active anymore. I mainly used Django web\n              framework and pure javascript without any framework.\n            </p>\n          </div>\n          <div class=\"languages\">\n            <h1>Languages</h1>\n            <p>\n              Turkish — My Native Language <br />\n              English — Professional working efficiency <br />\n              Polish — I lived in Poland for 4 years.\n            </p>\n          </div>\n          <div class=\"open-source-projects\">\n            <h1>Open-source projects</h1>\n            <p>\n              github.com/inveniosoftware/dictdiffer <br />\n              github.com/arguman/arguman/arguman.org <br />\n              github.com/react-designer/react-designer <br />\n              github.com/fatih-erikli/disease-simulation\n            </p>\n          </div>\n        </div>\n      </div>\n      <footer>Fatih Erikli — 2021 — Creative Commons</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}