{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["replaceStateTimeoutId","INITIAL_SHAPES","reflect","p","p0","p1","dx","dy","a","b","x","y","Math","round","DRAW_STATE_SELECTION_STARTED","DRAW_STATE_LABELS","handleMouseDown","drawState","drawStateSetterFunction","currentShapeIndexSetterFunction","selectedShapeIndexSetterFunction","currentSegmentIndexSetterFunction","shapes","shapesSetterFunction","currentShapeIndex","currentSegmentIndex","cursorPosition","mouseDownCursorPositionSetterFunction","mouseDownShapePointsSetterFunction","selectionRectangle","setMouseDownSelectionRectangle","selectedPointIndexesSetterFunction","contextMenuSetterFunction","event","buttons","preventDefault","clientRect","document","querySelector","getBoundingClientRect","clientX","left","clientY","top","target","dataset","shapeIndex","pointIndex","Number","isEmptySpace","isSegmentLine","isSegment","isPolygon","flatPoints","map","shape","points","flat","selectedPointIndexes","point","index","isPointInRectangle","filter","Boolean","head","reflection","midpoint","newPoints","splice","findLastOpenShapeIndex","findIndex","last","length","first","continueDrawing","mouseDownCursorPosition","selectionRectangleSetterFunction","currentFillColor","_hasSelection","calculateSelectionRectangle","innerLoop","_","selectionIsValid","canvasBoundingClientRect","right","bottom","newShapes","lastOpenShapeIndex","newAppState","newShape","cursorPositionOrClosingPoint","distance","fill","handleMouseMove","cursorPositionSetterFunction","mouseDownShapePoints","keyStates","setSelectionRectangle","mouseDownSelectionRectangle","_shapeIndex","cachedPointIndex","indexOf","segmentIndex","isShiftPressed","max","min","x1","y1","x2","y2","sqrt","handleKeyUp","keyStatesSetterFunction","isCtrlPressed","minX","minY","width","height","rectangle","parseRGBA","color","parts","split","r","g","parseFloat","App","showContextMenuSetterFunction","contextMenuPositionSetterFunction","useState","setDrawState","setCursorPosition","setMouseDownCursorPosition","setMouseDownShapePoints","setCurrentShapeIndex","selectedShapeIndex","setSelectedShapeIndex","setCurrentSegmentIndex","name","defaults","state","setState","value","clearTimeout","setTimeout","window","location","href","hashStates","found","builtHashStates","reduce","prev","current","hashName","hashValue","JSON","stringify","join","history","pushState","fragment","parse","decodeURIComponent","useHashedState","setShapes","refreshShapesState","setKeyStates","setSelectedPointIndexes","setCurrentFillColor","currentStrokeColor","setCurrentStrokeColor","showFillColorPicker","setFillColorPicker","showStrokeColorPicker","setShowStrokeColorPicker","showContextMenu","setShowContextMenu","contextMenuPosition","setContextMenuPosition","useEffect","onpopstate","onhashchange","selectedShape","stroke","tabIndex","onKeyDown","keyStateUpdates","shiftKey","ctrlKey","onKeyUp","className","onContextMenu","onMouseDown","onMouseMove","onMouseUp","style","float","backgroundColor","onClick","position","onChange","pickedColor","rgb","updateCurrentShapeFill","marginLeft","updateCurrentShapeStroke","xmlns","Array","undefined","shapeWithCursor","pointsAsSVGString","tail","onClosingPoint","lines","cx","cy","keyIndex","push","isPointInSelectionRectangle","_pointIndex","isPointInCurrentSelection","previewSize","id","divider","svgImage","createElement","body","appendChild","onload","canvas","clientWidth","clientHeight","getContext","drawImage","imageDataURL","toDataURL","parentElement","removeChild","URL","revokeObjectURL","src","downloadLink","download","click","createObjectURL","Blob","getElementById","outerHTML","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yJA2fIA,E,8GAvfEC,EAAiB,CAAC,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,MAAM,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,kBAAkB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EAAI,IAAI,EAAI,oBAAoB,KAAO,4BAA4B,CAAC,OAAS,CAAC,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,mBAAmB,CAAC,EAAI,IAAI,EAAI,oBAAoB,CAAC,EA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","file":"static/js/main.bf4ff4cd.chunk.js","sourcesContent":["import { useState, React, useEffect } from \"react\";\nimport { ChromePicker as ColorPicker } from \"react-color\";\nimport \"./App.css\";\n\nconst INITIAL_SHAPES = [{\"points\":[{\"x\":151,\"y\":289.3000030517578},{\"x\":145,\"y\":269.3000030517578},{\"x\":141,\"y\":262.3000030517578},{\"x\":113,\"y\":213.3000030517578},{\"x\":113,\"y\":160.3000030517578},{\"x\":144,\"y\":136.3000030517578},{\"x\":159,\"y\":125.30000305175781},{\"x\":166,\"y\":122.30000305175781},{\"x\":145,\"y\":96.30000305175781},{\"x\":232,\"y\":57.30000305175781},{\"x\":287.5,\"y\":61.30000305175781},{\"x\":304.5,\"y\":59.30000305175781},{\"x\":308.5,\"y\":42.30000305175781},{\"x\":344.5,\"y\":83.11666870117188},{\"x\":362,\"y\":81.30000305175781},{\"x\":381.5,\"y\":112.11666870117188},{\"x\":415,\"y\":143.3000030517578},{\"x\":414,\"y\":197.3000030517578},{\"x\":399.5,\"y\":225.11666870117188},{\"x\":398,\"y\":256.3000030517578},{\"x\":389,\"y\":275.3000030517578},{\"x\":372,\"y\":347.3000030517578},{\"x\":373,\"y\":283.3000030517578},{\"x\":363,\"y\":266.3000030517578},{\"x\":357,\"y\":209.3000030517578},{\"x\":304,\"y\":176.3000030517578},{\"x\":253,\"y\":171.3000030517578},{\"x\":181,\"y\":155.3000030517578},{\"x\":158,\"y\":215.3000030517578},{\"x\":159,\"y\":337.3000030517578},{\"x\":151,\"y\":289.3000030517578}],\"fill\":\"rgba(240, 240, 240, 0.9)\"},{\"points\":[{\"x\":249,\"y\":410.6333312988281},{\"x\":262,\"y\":412.066650390625},{\"x\":277,\"y\":409.6333312988281},{\"x\":270,\"y\":429.01666259765625},{\"x\":263,\"y\":433.6333312988281},{\"x\":254,\"y\":428.01666259765625},{\"x\":249,\"y\":410.6333312988281}],\"fill\":\"rgba(244, 244, 244, 0.9)\"},{\"points\":[{\"x\":215,\"y\":399.3833312988281},{\"x\":223,\"y\":387.3833312988281},{\"x\":254,\"y\":380.3833312988281},{\"x\":262,\"y\":377.3833312988281},{\"x\":268,\"y\":377.3833312988281},{\"x\":272,\"y\":380.3833312988281},{\"x\":280,\"y\":381.3833312988281},{\"x\":302,\"y\":385.3833312988281},{\"x\":312,\"y\":390.3833312988281},{\"x\":315,\"y\":397.3833312988281},{\"x\":317,\"y\":398.3833312988281},{\"x\":322,\"y\":389.3833312988281},{\"x\":313,\"y\":375.3833312988281},{\"x\":285,\"y\":365.3833312988281},{\"x\":279,\"y\":361.3833312988281},{\"x\":277,\"y\":359.3833312988281},{\"x\":269,\"y\":361.3833312988281},{\"x\":265,\"y\":361.3833312988281},{\"x\":260,\"y\":359.3833312988281},{\"x\":255,\"y\":358.3833312988281},{\"x\":251,\"y\":359.3833312988281},{\"x\":243,\"y\":365.3833312988281},{\"x\":229,\"y\":367.3833312988281},{\"x\":218,\"y\":371.3833312988281},{\"x\":210,\"y\":378.3833312988281},{\"x\":205,\"y\":390.3833312988281},{\"x\":208,\"y\":395.3833312988281},{\"x\":215,\"y\":399.3833312988281}],\"fill\":\"rgba(240, 240, 240, 0.9)\"},{\"points\":[{\"x\":276,\"y\":264.1000061035156},{\"x\":297,\"y\":259.1000061035156},{\"x\":316,\"y\":252.6999969482422},{\"x\":338,\"y\":253.10000610351562},{\"x\":355,\"y\":263.1000061035156},{\"x\":341,\"y\":244.10000610351562},{\"x\":329,\"y\":241.6999969482422},{\"x\":316,\"y\":242.10000610351562},{\"x\":292,\"y\":244.10000610351562},{\"x\":280,\"y\":249.10000610351562},{\"x\":276,\"y\":264.1000061035156}],\"fill\":\"rgba(242, 242, 242, 0.9)\"},{\"points\":[{\"x\":167,\"y\":270.1000061035156},{\"x\":185,\"y\":259.1000061035156},{\"x\":198,\"y\":256.6999969482422},{\"x\":216,\"y\":261.1000061035156},{\"x\":238,\"y\":267.1000061035156},{\"x\":238,\"y\":253.10000610351562},{\"x\":226,\"y\":247.6999969482422},{\"x\":214,\"y\":246.10000610351562},{\"x\":196,\"y\":245.6999969482422},{\"x\":180,\"y\":248.10000610351562},{\"x\":171,\"y\":255.10000610351562},{\"x\":167,\"y\":270.1000061035156}],\"fill\":\"rgba(252, 252, 252, 0.9)\"},{\"points\":[{\"x\":284,\"y\":284.3000030517578},{\"x\":295,\"y\":275.3000030517578},{\"x\":307,\"y\":273.3000030517578},{\"x\":323,\"y\":273.3000030517578},{\"x\":329,\"y\":275.9499969482422},{\"x\":338,\"y\":282.3000030517578},{\"x\":330.5,\"y\":278.91666412353516},{\"x\":328.5,\"y\":277.6500015258789},{\"x\":326,\"y\":276.3000030517578},{\"x\":311,\"y\":273.3000030517578},{\"x\":304,\"y\":274.3000030517578},{\"x\":297,\"y\":276.3000030517578},{\"x\":286,\"y\":284.3000030517578},{\"x\":284,\"y\":284.3000030517578}]},{\"points\":[{\"x\":282,\"y\":284.3000030517578},{\"x\":294,\"y\":287.3000030517578},{\"x\":302,\"y\":290.3000030517578},{\"x\":311,\"y\":290.3000030517578},{\"x\":319,\"y\":288.3000030517578},{\"x\":328,\"y\":283.3000030517578},{\"x\":336,\"y\":282.3000030517578},{\"x\":330,\"y\":284.3000030517578},{\"x\":326,\"y\":286.3000030517578},{\"x\":320,\"y\":290.3000030517578},{\"x\":316,\"y\":291.3000030517578},{\"x\":303,\"y\":292.3000030517578},{\"x\":294,\"y\":289.3000030517578},{\"x\":282,\"y\":284.3000030517578}]},{\"points\":[{\"x\":176,\"y\":287.3000030517578},{\"x\":186,\"y\":282.3000030517578},{\"x\":190,\"y\":280.3000030517578},{\"x\":195,\"y\":278.3000030517578},{\"x\":208,\"y\":278.3000030517578},{\"x\":211,\"y\":279.31666564941406},{\"x\":215,\"y\":281.3000030517578},{\"x\":225,\"y\":287.3000030517578},{\"x\":230,\"y\":289.3000030517578},{\"x\":234,\"y\":290.3000030517578},{\"x\":234,\"y\":289.3000030517578},{\"x\":229,\"y\":287.3000030517578},{\"x\":222,\"y\":284.3000030517578},{\"x\":215,\"y\":279.3000030517578},{\"x\":209,\"y\":276.3000030517578},{\"x\":201,\"y\":276.3000030517578},{\"x\":194,\"y\":276.3000030517578},{\"x\":184,\"y\":280.3000030517578},{\"x\":182,\"y\":282.3000030517578},{\"x\":176,\"y\":287.3000030517578}]},{\"points\":[{\"x\":229,\"y\":289.3000030517578},{\"x\":219,\"y\":292.3000030517578},{\"x\":214,\"y\":295.3000030517578},{\"x\":207,\"y\":295.8999938964844},{\"x\":200,\"y\":296.3000030517578},{\"x\":186,\"y\":294.6999969482422},{\"x\":182,\"y\":291.3000030517578},{\"x\":177,\"y\":287.3000030517578},{\"x\":183,\"y\":291.3000030517578},{\"x\":187,\"y\":293.3000030517578},{\"x\":201,\"y\":294.3000030517578},{\"x\":212,\"y\":294.3000030517578},{\"x\":219,\"y\":291.3000030517578},{\"x\":229,\"y\":289.3000030517578}]},{\"points\":[{\"x\":197,\"y\":281.3000030517578},{\"x\":196,\"y\":285},{\"x\":196,\"y\":289.3000030517578},{\"x\":198,\"y\":292.3000030517578},{\"x\":203,\"y\":294.3000030517578},{\"x\":203,\"y\":294.1500015258789},{\"x\":209,\"y\":293},{\"x\":212,\"y\":291},{\"x\":213,\"y\":287.3000030517578},{\"x\":212,\"y\":283.3000030517578},{\"x\":207,\"y\":280.3000030517578},{\"x\":203,\"y\":279.3000030517578},{\"x\":199,\"y\":280.3000030517578},{\"x\":197,\"y\":281.3000030517578}],\"fill\":\"rgba(233, 233, 233, 1)\"},{\"points\":[{\"x\":305,\"y\":277.3000030517578},{\"x\":305,\"y\":284.3000030517578},{\"x\":308,\"y\":288.3000030517578},{\"x\":314,\"y\":289.3000030517578},{\"x\":321,\"y\":285.3000030517578},{\"x\":321,\"y\":280.3000030517578},{\"x\":318,\"y\":276.3000030517578},{\"x\":313,\"y\":274.3000030517578},{\"x\":308,\"y\":275.3000030517578},{\"x\":305,\"y\":277.3000030517578}],\"fill\":\"rgba(233, 233, 233, 0.9)\"},{\"points\":[{\"x\":231,\"y\":393.29998779296875},{\"x\":253,\"y\":388.29998779296875},{\"x\":261,\"y\":387.29998779296875},{\"x\":265,\"y\":387.3000030517578},{\"x\":268,\"y\":387.29998779296875},{\"x\":277,\"y\":388.29998779296875},{\"x\":286,\"y\":390.29998779296875},{\"x\":294,\"y\":393.29998779296875},{\"x\":278,\"y\":391.29998779296875},{\"x\":273,\"y\":391.29998779296875},{\"x\":263,\"y\":391.29998779296875},{\"x\":254,\"y\":391.29998779296875},{\"x\":247,\"y\":392.29998779296875},{\"x\":239,\"y\":394.29998779296875},{\"x\":231,\"y\":393.29998779296875}]},{\"points\":[{\"x\":231,\"y\":391.4499969482422},{\"x\":240,\"y\":399.4499969482422},{\"x\":246,\"y\":400.3000030517578},{\"x\":252,\"y\":400.4499969482422},{\"x\":276,\"y\":400.4499969482422},{\"x\":285,\"y\":396.4499969482422},{\"x\":290,\"y\":394.21665954589844},{\"x\":294,\"y\":392.4499969482422},{\"x\":281,\"y\":395.4499969482422},{\"x\":277,\"y\":397.4499969482422},{\"x\":267,\"y\":398.4499969482422},{\"x\":252,\"y\":397.4499969482422},{\"x\":242,\"y\":397.4499969482422},{\"x\":231,\"y\":391.4499969482422}],\"fill\":\"rgba(252, 252, 252, 0.9)\"}];\n\nconst reflect = (p, p0, p1) => {\n  // https://gist.github.com/balint42/b99934b2a6990a53e14b\n  let dx, dy, a, b, x, y;\n  dx = p1.x - p0.x;\n  dy = p1.y - p0.y;\n  a = (dx * dx - dy * dy) / (dx * dx + dy * dy);\n  b = (2 * dx * dy) / (dx * dx + dy * dy);\n  x = Math.round(a * (p.x - p0.x) + b * (p.y - p0.y) + p0.x);\n  y = Math.round(b * (p.x - p0.x) - a * (p.y - p0.y) + p0.y);\n  return { x, y };\n};\n\nconst DRAW_STATE_READY = 1;\nconst DRAW_STATE_START = 2;\nconst DRAW_STATE_MOVE_SEGMENT = 3;\nconst DRAW_STATE_INSERT_SEGMENT = 4;\nconst DRAW_STATE_SELECTION = 5;\nconst DRAW_STATE_MOVE_SHAPE = 6;\nconst DRAW_STATE_ON_SHAPE = 7;\nconst DRAW_STATE_ON_SEGMENT = 8;\nconst DRAW_STATE_REMOVE_SEGMENT = 9;\nconst DRAW_STATE_REMOVE_SHAPE = 10;\nconst DRAW_STATE_SELECTION_STARTED = 11;\nconst DRAW_STATE_ON_SEGMENT_SELECTION = 12;\nconst DRAW_STATE_MOVE_SELECTED_SEGMENTS = 13;\nconst DRAW_STATE_SELECTION_SET = 14;\n\nconst SHAPE_CLOSE_DISTANCE = 2;\nconst SEGMENT_CIRCLE_RADIUS = 2;\n\nconst DRAW_STATE_LABELS = {\n  [DRAW_STATE_READY]: \"Click on canvas and drag it to start drawing\",\n  [DRAW_STATE_START]: \"Click on another point to connect with the latest\",\n  [DRAW_STATE_MOVE_SEGMENT]: \"Moving a segment of a shape\",\n  [DRAW_STATE_INSERT_SEGMENT]:\n    \"Click on the a point on the line to insert a segment\",\n  [DRAW_STATE_SELECTION]: \"Select points to move\",\n  [DRAW_STATE_ON_SHAPE]: \"Drag the shape to move\",\n  [DRAW_STATE_MOVE_SHAPE]: \"Moving a shape\",\n  [DRAW_STATE_ON_SEGMENT]: \"Drag the segment to move it\",\n  [DRAW_STATE_REMOVE_SEGMENT]: \"Click on the segment to remove\",\n  [DRAW_STATE_REMOVE_SHAPE]: \"Click on the shape to remove\",\n  [DRAW_STATE_SELECTION_STARTED]: \"Selection started\",\n  [DRAW_STATE_ON_SEGMENT_SELECTION]: \"Move selected segments\",\n  [DRAW_STATE_MOVE_SELECTED_SEGMENTS]: \"Moving selected segments\",\n  [DRAW_STATE_SELECTION_SET]: \"Selection set\",\n};\n\nfunction handleContextMenu(\n  drawState,\n  drawStateSetterFunction,\n  showContextMenuSetterFunction,\n  cursorPosition,\n  contextMenuPositionSetterFunction,\n) {\n  return event => {\n    event.preventDefault();\n    const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n    contextMenuPositionSetterFunction({\n      x: cursorPosition.x + clientRect.left,\n      y: cursorPosition.y + clientRect.top,\n    });\n    showContextMenuSetterFunction(true);\n  }\n}\n\nfunction handleMouseDown(\n  drawState,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  selectedShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  cursorPosition,\n  mouseDownCursorPositionSetterFunction,\n  mouseDownShapePointsSetterFunction,\n  selectionRectangle,\n  setMouseDownSelectionRectangle,\n  selectedPointIndexesSetterFunction,\n  contextMenuSetterFunction,\n) {\n  return (event) => {\n    contextMenuSetterFunction(false);\n    if (event.buttons === 2) {\n      event.preventDefault();\n      return false;\n    }\n\n    if (drawState === DRAW_STATE_READY) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n    }\n\n    if (drawState === DRAW_STATE_ON_SEGMENT) {\n      const { shapeIndex, pointIndex } = event.target.dataset;\n      currentShapeIndexSetterFunction(Number(shapeIndex));\n      selectedShapeIndexSetterFunction(Number(shapeIndex));\n      currentSegmentIndexSetterFunction(Number(pointIndex));\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_SET) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      const isEmptySpace =\n        !event.target.dataset.isSegmentLine &&\n        !event.target.dataset.isSegment &&\n        !event.target.dataset.isPolygon;\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      if (isEmptySpace) {\n        drawStateSetterFunction(DRAW_STATE_SELECTION_STARTED);\n      } else {\n        const flatPoints = shapes.map((shape) => shape.points).flat();\n        mouseDownShapePointsSetterFunction(flatPoints);\n        const selectedPointIndexes = flatPoints\n          .map((point, index) =>\n            isPointInRectangle(point, selectionRectangle) ? { index } : null\n          )\n          .filter(Boolean)\n          .map(({ index }) => index);\n        setMouseDownSelectionRectangle({\n          x: selectionRectangle.x,\n          y: selectionRectangle.y,\n        });\n        selectedPointIndexesSetterFunction(selectedPointIndexes);\n        drawStateSetterFunction(DRAW_STATE_MOVE_SELECTED_SEGMENTS);\n      }\n    }\n\n    if (drawState === DRAW_STATE_ON_SHAPE) {\n      const clientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      const cursorPosition = {\n        x: event.clientX - clientRect.left,\n        y: event.clientY - clientRect.top,\n      };\n      selectedShapeIndexSetterFunction(currentShapeIndex);\n      mouseDownCursorPositionSetterFunction(cursorPosition);\n      mouseDownShapePointsSetterFunction(shapes[currentShapeIndex].points);\n      drawStateSetterFunction(DRAW_STATE_MOVE_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const newPoints = [...shape.points];\n      newPoints.splice(currentSegmentIndex, 0, midpoint);\n      shapesSetterFunction(\n        shapes.map((shape, index) =>\n          index === currentShapeIndex ? { ...shape, points: newPoints } : shape\n        )\n      );\n      drawStateSetterFunction(DRAW_STATE_MOVE_SEGMENT);\n    }\n  };\n}\n\nfunction findLastOpenShapeIndex(shapes) {\n  return shapes.findIndex(({ points }) => {\n    const last = points[points.length - 1];\n    const first = points[0];\n    return points.length < 3 || !(first.x === last.x && first.y === last.y);\n  });\n}\n\nfunction continueDrawing(\n  cursorPosition,\n  drawStateSetterFunction,\n  shapes,\n  shapesSetterFunction,\n  drawState,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  currentShapeIndex,\n  currentSegmentIndex,\n  mouseDownCursorPosition,\n  selectionRectangleSetterFunction,\n  currentFillColor\n) {\n  return (event) => {\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      drawStateSetterFunction(DRAW_STATE_READY);\n      currentShapeIndexSetterFunction(-1);\n      currentSegmentIndexSetterFunction(-1);\n    }\n\n    if (drawState === DRAW_STATE_SELECTION_STARTED) {\n      const selectionRectangle = calculateSelectionRectangle(\n        mouseDownCursorPosition,\n        cursorPosition\n      );\n      selectionRectangleSetterFunction(selectionRectangle);\n      let _hasSelection;\n      for (const shape of shapes) {\n        innerLoop: for (const point of shape.points) {\n          _hasSelection = isPointInRectangle(point, selectionRectangle);\n          if (_hasSelection) {\n            break innerLoop;\n          }\n        }\n        if (_hasSelection) {\n          break;\n        }\n      }\n      drawStateSetterFunction(\n        _hasSelection ? DRAW_STATE_SELECTION_SET : DRAW_STATE_READY\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      drawStateSetterFunction(DRAW_STATE_SELECTION_SET);\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      drawStateSetterFunction(DRAW_STATE_ON_SHAPE);\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.filter((_, index) => index !== currentShapeIndex)\n      );\n    }\n\n    if (drawState === DRAW_STATE_REMOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.filter(\n            (point, pointIndex) =>\n              !(shapeIndex === currentShapeIndex) ||\n              (shapeIndex === currentShapeIndex &&\n                currentSegmentIndex !== pointIndex)\n          ),\n        }))\n      );\n    }\n\n    const selectionIsValid =\n      mouseDownCursorPosition.x !== cursorPosition.x &&\n      mouseDownCursorPosition.y !== cursorPosition.y;\n\n    const isEmptySpace =\n      !event.target.dataset.isSegmentLine &&\n      !event.target.dataset.isSegment &&\n      !event.target.dataset.isPolygon;\n\n    if (drawState === DRAW_STATE_START || (!selectionIsValid && isEmptySpace)) {\n      const canvasBoundingClientRect = document\n        .querySelector(\".canvas\")\n        .getBoundingClientRect();\n      if (\n        event.clientX < canvasBoundingClientRect.left ||\n        event.clientX > canvasBoundingClientRect.right ||\n        event.clientY < canvasBoundingClientRect.top ||\n        event.clientY > canvasBoundingClientRect.bottom\n      ) {\n        return;\n      }\n\n      const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n\n      let newShapes;\n      let newAppState = DRAW_STATE_START;\n      if (lastOpenShapeIndex === -1) {\n        newShapes = [...shapes, { points: [cursorPosition] }];\n      } else {\n        newShapes = shapes.map((shape, index) => {\n          let newShape;\n          if (index === lastOpenShapeIndex) {\n            let cursorPositionOrClosingPoint;\n\n            if (\n              distance(\n                cursorPosition.x,\n                cursorPosition.y,\n                shape.points[0].x,\n                shape.points[0].y\n              ) < SHAPE_CLOSE_DISTANCE\n            ) {\n              cursorPositionOrClosingPoint = shape.points[0];\n              newAppState = DRAW_STATE_READY;\n            } else {\n              cursorPositionOrClosingPoint = cursorPosition;\n            }\n\n            newShape = {\n              fill: currentFillColor,\n              points: [...shape.points, cursorPositionOrClosingPoint],\n            };\n          } else {\n            newShape = shape;\n          }\n\n          return newShape;\n        });\n      }\n\n      drawStateSetterFunction(newAppState);\n      shapesSetterFunction(newShapes);\n    }\n  };\n}\n\nfunction handleMouseMove(\n  cursorPositionSetterFunction,\n  drawState,\n  currentShapeIndex,\n  currentSegmentIndex,\n  shapes,\n  shapesSetterFunction,\n  drawStateSetterFunction,\n  currentShapeIndexSetterFunction,\n  currentSegmentIndexSetterFunction,\n  mouseDownCursorPosition,\n  mouseDownShapePoints,\n  keyStates,\n  selectionRectangle,\n  setSelectionRectangle,\n  mouseDownSelectionRectangle,\n  selectedPointIndexes\n) {\n  return ({ clientX, clientY, target }) => {\n    const clientRect = document\n      .querySelector(\".canvas\")\n      .getBoundingClientRect();\n    let cursorPosition = {\n      x: clientX - clientRect.left,\n      y: clientY - clientRect.top,\n    };\n\n    cursorPositionSetterFunction(cursorPosition);\n\n    if (drawState === DRAW_STATE_MOVE_SEGMENT) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            currentShapeIndex === shapeIndex &&\n            (currentSegmentIndex === pointIndex ||\n              (currentSegmentIndex === shape.points.length - 1 &&\n                pointIndex === 0))\n              ? cursorPosition\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SELECTED_SEGMENTS) {\n      let _shapeIndex = 0;\n      setSelectionRectangle({\n        ...selectionRectangle,\n        x:\n          mouseDownSelectionRectangle.x -\n          (mouseDownCursorPosition.x - cursorPosition.x),\n        y:\n          mouseDownSelectionRectangle.y -\n          (mouseDownCursorPosition.y - cursorPosition.y),\n      });\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) => {\n            const cachedPointIndex = _shapeIndex;\n            _shapeIndex++;\n            return selectedPointIndexes.indexOf(cachedPointIndex) > -1\n              ? {\n                  x:\n                    mouseDownShapePoints[cachedPointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[cachedPointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point;\n          }),\n        }))\n      );\n    }\n\n    if (\n      drawState === DRAW_STATE_READY ||\n      drawState === DRAW_STATE_ON_SHAPE ||\n      drawState === DRAW_STATE_ON_SEGMENT ||\n      drawState === DRAW_STATE_ON_SEGMENT_SELECTION ||\n      drawState === DRAW_STATE_REMOVE_SHAPE ||\n      drawState === DRAW_STATE_REMOVE_SEGMENT\n    ) {\n      const {\n        isSegmentLine,\n        isSegment,\n        isPolygon,\n        shapeIndex,\n        segmentIndex,\n        pointIndex,\n      } = target.dataset;\n      // todo: merge pointIndex and segmentIndex\n      if (isSegmentLine) {\n        drawStateSetterFunction(DRAW_STATE_INSERT_SEGMENT);\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(segmentIndex));\n      } else if (isPolygon) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SHAPE\n            : DRAW_STATE_ON_SHAPE\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n      } else if (isSegment) {\n        drawStateSetterFunction(\n          keyStates.isShiftPressed\n            ? DRAW_STATE_REMOVE_SEGMENT\n            : selectionRectangle\n            ? DRAW_STATE_ON_SEGMENT_SELECTION\n            : DRAW_STATE_ON_SEGMENT\n        );\n        currentShapeIndexSetterFunction(Number(shapeIndex));\n        currentSegmentIndexSetterFunction(Number(pointIndex));\n      } else {\n        drawStateSetterFunction(DRAW_STATE_READY);\n      }\n    }\n\n    if (drawState === DRAW_STATE_MOVE_SHAPE) {\n      shapesSetterFunction(\n        shapes.map((shape, shapeIndex) => ({\n          ...shape,\n          points: shape.points.map((point, pointIndex) =>\n            shapeIndex === currentShapeIndex\n              ? {\n                  x:\n                    mouseDownShapePoints[pointIndex].x -\n                    (mouseDownCursorPosition.x - cursorPosition.x),\n                  y:\n                    mouseDownShapePoints[pointIndex].y -\n                    (mouseDownCursorPosition.y - cursorPosition.y),\n                }\n              : point\n          ),\n        }))\n      );\n    }\n\n    if (drawState === DRAW_STATE_INSERT_SEGMENT) {\n      const shape = shapes[currentShapeIndex];\n      const head = shape.points[currentSegmentIndex];\n      const point = shape.points[currentSegmentIndex - 1];\n      const reflection = reflect(cursorPosition, head, point);\n      const midpoint = {\n        x: (reflection.x + cursorPosition.x) / 2,\n        y: (reflection.y + cursorPosition.y) / 2,\n      };\n      const midpointDistance = distance(\n        midpoint.x,\n        midpoint.y,\n        cursorPosition.x,\n        cursorPosition.y\n      );\n      if (\n        midpointDistance > 1 ||\n        midpoint.y > Math.max(head.y, point.y) ||\n        midpoint.y < Math.min(head.y, point.y) ||\n        midpoint.x > Math.max(head.x, point.x) ||\n        midpoint.x < Math.min(head.x, point.x)\n      ) {\n        drawStateSetterFunction(DRAW_STATE_READY);\n        currentShapeIndexSetterFunction(-1);\n        currentSegmentIndexSetterFunction(-1);\n      }\n    }\n  };\n}\n\nlet replaceStateTimeoutId;\n\nfunction useHashedState(name, defaults) {\n  const [state, setState] = useState(defaults);\n  return [\n    state,\n    (value, callback = () => {}) => {\n      if (replaceStateTimeoutId) {\n        clearTimeout(replaceStateTimeoutId);\n      }\n\n      replaceStateTimeoutId = setTimeout(() => {\n        const [_, ...hashStates] = (\n          window.location.href.indexOf(\"#\") > -1\n            ? window.location.href.split(\"#\")\n            : [null]\n        ).filter(Boolean);\n\n        let found = false;\n        const builtHashStates = hashStates\n          .reduce((prev, current) => {\n            let [hashName, hashValue] = current.split(\"=\");\n            if (name === hashName) {\n              found = true;\n              hashValue = JSON.stringify(value);\n              hashName = name;\n            }\n\n            return [...prev, `${hashName}=${hashValue}`];\n          }, [])\n          .join(\"#\");\n\n        if (!found) {\n          window.history.pushState(\n            null,\n            null,\n            `${\n              builtHashStates && `#${builtHashStates}`\n            }#${name}=${JSON.stringify(value)}`\n          );\n        } else {\n          window.history.pushState(null, null, `#${builtHashStates}`);\n        }\n      }, 50);\n      setState(value);\n    },\n    () => {\n      const [head, fragment] = window.location.href.split(`#${name}=`);\n      if (fragment) {\n        const [value] = fragment.split(\"#\");\n        setState(JSON.parse(decodeURIComponent(value)));\n      }\n    },\n  ];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const a = x1 - x2;\n  const b = y1 - y2;\n  return Math.sqrt(a * a + b * b);\n}\n\nfunction handleKeyDown(keyStatesSetterFunction) {\n  return (event) => {\n    let keyStateUpdates = {};\n    event.shiftKey && (keyStateUpdates[\"isShiftPressed\"] = true);\n    event.ctrlKey && (keyStateUpdates[\"isCtrlPressed\"] = true);\n    keyStatesSetterFunction(keyStateUpdates);\n  };\n}\n\nfunction handleKeyUp(keyStatesSetterFunction) {\n  return (_) => {\n    keyStatesSetterFunction({ isCtrlPressed: false, isShiftPressed: false });\n  };\n}\n\nfunction calculateSelectionRectangle(mouseDownCursorPosition, cursorPosition) {\n  const minX = Math.min(mouseDownCursorPosition.x, cursorPosition.x);\n  const minY = Math.min(mouseDownCursorPosition.y, cursorPosition.y);\n  const maxX = Math.max(mouseDownCursorPosition.x, cursorPosition.x);\n  const maxY = Math.max(mouseDownCursorPosition.y, cursorPosition.y);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nfunction isPointInRectangle(point, rectangle) {\n  return (\n    point.x > rectangle.x &&\n    point.x < rectangle.x + rectangle.width &&\n    point.y > rectangle.y &&\n    point.y < rectangle.y + rectangle.height\n  );\n}\n\nfunction updateCurrentShapeFill(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, fill: pickedColor } : shape\n    )\n  );\n}\n\nfunction updateCurrentShapeStroke(\n  shapes,\n  shapesSetterFunction,\n  currentShapeIndex,\n  pickedColor\n) {\n  shapesSetterFunction(\n    shapes.map((shape, index) =>\n      index === currentShapeIndex ? { ...shape, stroke: pickedColor } : shape\n    )\n  );\n}\n\nfunction parseRGBA(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  const commaSaparatedString = color.split('(')[1].split(')')[0];\n  const parts = commaSaparatedString.split(',');\n  const [r, g, b, a] = parts;\n  return {\n    r: Number(r),\n    g: Number(g),\n    b: Number(b),\n    a: parseFloat(a),\n  };\n}\n\nfunction App() {\n  const [drawState, setDrawState] = useState(DRAW_STATE_READY);\n  const [cursorPosition, setCursorPosition] = useState({ x: -1, y: -1 });\n  const [mouseDownCursorPosition, setMouseDownCursorPosition] = useState({\n    x: -1,\n    y: -1,\n  });\n  const [mouseDownShapePoints, setMouseDownShapePoints] = useState([]);\n  const [currentShapeIndex, setCurrentShapeIndex] = useState(-1);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(-1);\n  const [currentSegmentIndex, setCurrentSegmentIndex] = useState(-1);\n  const [shapes, setShapes, refreshShapesState] = useHashedState(\n    \"shapes\",\n    INITIAL_SHAPES\n  );\n  const [keyStates, setKeyStates] = useState({\n    isCtrlPressed: false,\n    isShiftPressed: false,\n  });\n  const [selectionRectangle, setSelectionRectangle] = useState(null);\n  const [mouseDownSelectionRectangle, setMouseDownSelectionRectangle] =\n    useState({ x: -1, y: -1 });\n  const [selectedPointIndexes, setSelectedPointIndexes] = useState([]);\n  const lastOpenShapeIndex = findLastOpenShapeIndex(shapes);\n  const previews = [256, 128];\n  const [currentFillColor, setCurrentFillColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [currentStrokeColor, setCurrentStrokeColor] = useState({\n    r: 238,\n    g: 238,\n    b: 238,\n    a: 0.9,\n  });\n  const [showFillColorPicker, setFillColorPicker] = useState(false);\n  const [showStrokeColorPicker, setShowStrokeColorPicker] = useState(false);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState({x: -1, y: -1});\n  useEffect(() => {\n    refreshShapesState();\n    window.onpopstate = refreshShapesState;\n    window.onhashchange = refreshShapesState;\n  }, []);\n  useEffect(() => {\n    const selectedShape = shapes[selectedShapeIndex];\n    if (!selectedShape) {\n      return;\n    }\n    const {stroke, fill} = selectedShape;\n    fill && setCurrentFillColor(parseRGBA(fill));\n    stroke && setCurrentStrokeColor(parseRGBA(stroke));\n  }, [selectedShapeIndex]);\n\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown(setKeyStates)}\n      onKeyUp={handleKeyUp(setKeyStates)}\n      className=\"app-container\"\n      onContextMenu={handleContextMenu(drawState, setDrawState, setShowContextMenu, cursorPosition, setContextMenuPosition)}\n      onMouseDown={handleMouseDown(\n        drawState,\n        setDrawState,\n        setCurrentShapeIndex,\n        setSelectedShapeIndex,\n        setCurrentSegmentIndex,\n        shapes,\n        setShapes,\n        currentShapeIndex,\n        currentSegmentIndex,\n        cursorPosition,\n        setMouseDownCursorPosition,\n        setMouseDownShapePoints,\n        selectionRectangle,\n        setMouseDownSelectionRectangle,\n        setSelectedPointIndexes,\n        setShowContextMenu,\n      )}\n      onMouseMove={handleMouseMove(\n        setCursorPosition,\n        drawState,\n        currentShapeIndex,\n        currentSegmentIndex,\n        shapes,\n        setShapes,\n        setDrawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        mouseDownCursorPosition,\n        mouseDownShapePoints,\n        keyStates,\n        selectionRectangle,\n        setSelectionRectangle,\n        mouseDownSelectionRectangle,\n        selectedPointIndexes\n      )}\n      onMouseUp={continueDrawing(\n        cursorPosition,\n        setDrawState,\n        shapes,\n        setShapes,\n        drawState,\n        setCurrentShapeIndex,\n        setCurrentSegmentIndex,\n        currentShapeIndex,\n        currentSegmentIndex,\n        mouseDownCursorPosition,\n        setSelectionRectangle,\n        currentFillColor\n      )}\n    >\n      <h1 style={{\n        float: 'left',\n      }}>Hello, my name is Fatih.</h1>\n      <div style={{\n        float: 'right',\n      }} className={\"header-tools\"}>\n        <span\n          style={{\n            backgroundColor: `rgba(${currentFillColor.r}, ${currentFillColor.g}, ${currentFillColor.b}, ${currentFillColor.a})`,\n          }}\n          className={\"color-picker-preview\"}\n          onClick={() => {\n            setFillColorPicker(!showFillColorPicker);\n          }}\n        ></span>\n        <span className={\"color-picker-label\"}>Fill</span>\n        {showFillColorPicker && (\n          <div\n            style={{\n              position: \"absolute\",\n            }}\n          >\n            <ColorPicker\n              color={currentFillColor}\n              onChange={(color) => {\n                const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                setCurrentFillColor({\n                  r: color.rgb.r,\n                  g: color.rgb.g,\n                  b: color.rgb.b,\n                  a: color.rgb.a,\n                });\n                updateCurrentShapeFill(\n                  shapes,\n                  setShapes,\n                  selectedShapeIndex,\n                  pickedColor\n                );\n              }}\n            />\n          </div>\n        )}\n        <span\n          style={{\n            marginLeft: 20,\n            backgroundColor: `rgba(${currentStrokeColor.r}, ${currentStrokeColor.g}, ${currentStrokeColor.b}, ${currentStrokeColor.a})`,\n          }}\n          className={\"color-picker-preview\"}\n          onClick={() => {\n            setShowStrokeColorPicker(!showStrokeColorPicker);\n          }}\n        ></span>\n        <span className={\"color-picker-label\"}>Stroke</span>\n        {showStrokeColorPicker && (\n          <div\n            style={{\n              position: \"absolute\",\n            }}\n          >\n            <ColorPicker\n              color={currentStrokeColor}\n              onChange={(color) => {\n                const pickedColor = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n                setCurrentStrokeColor({\n                  r: color.rgb.r,\n                  g: color.rgb.g,\n                  b: color.rgb.b,\n                  a: color.rgb.a,\n                });\n                updateCurrentShapeStroke(\n                  shapes,\n                  setShapes,\n                  selectedShapeIndex,\n                  pickedColor\n                );\n              }}\n            />\n          </div>\n        )}\n      </div>\n      {keyStates.isShiftPressed && \"shift\"}\n      {keyStates.isCtrlPressed && \"ctrl\"}\n      <div className=\"editor\">\n        <div className={\"canvas-wrapper\"}>\n          <h3>\n            #Canvas{\" \"}\n            <span className={\"drawing-info\"}>\n              {DRAW_STATE_LABELS[drawState]}\n            </span>\n          </h3>\n          {showContextMenu && (\n            <div className={'context-menu'} style={{\n              top: contextMenuPosition.y,\n              left: contextMenuPosition.x,\n            }}>\n              context menu\n            </div>\n          )}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"canvas\"\n            width={512}\n            height={512}\n          >\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`y-${index}`}\n                x1={0}\n                x2={512}\n                className={\"guideline\"}\n                y1={index * 8}\n                y2={index * 8}\n              />\n            ))}\n            {new Array(128).fill(undefined).map((_, index) => (\n              <line\n                key={`x-${index}`}\n                y1={0}\n                y2={512}\n                className={\"guideline\"}\n                x1={index * 8}\n                x2={index * 8}\n              />\n            ))}\n            <line\n              x1={0}\n              x2={512}\n              style={{ stroke: \"blue\" }}\n              y1={32 * 8}\n              y2={32 * 8}\n            />\n            <line\n              y1={0}\n              y2={512}\n              style={{ stroke: \"blue\" }}\n              x1={32 * 8}\n              x2={32 * 8}\n            />\n            {shapes.map((shape, index) => {\n              const shapeWithCursor = [...shape.points, cursorPosition];\n              const pointsAsSVGString = shapeWithCursor\n                .map(({ x, y }) => `${x},${y}`)\n                .join(\" \");\n              return (\n                <g key={index}>\n                  <polygon\n                    points={pointsAsSVGString}\n                    data-is-polygon={true}\n                    data-shape-index={index}\n                    fill={\"transparent\"}\n                  />\n                  {(() => {\n                    let [head, ...tail] =\n                      drawState === DRAW_STATE_START &&\n                      lastOpenShapeIndex === index\n                        ? shapeWithCursor\n                        : shape.points;\n                    const onClosingPoint =\n                      distance(\n                        head.x,\n                        head.y,\n                        cursorPosition.x,\n                        cursorPosition.y\n                      ) > SHAPE_CLOSE_DISTANCE;\n                    const lines = [\n                      <circle\n                        data-shape-index={index}\n                        data-point-index={0}\n                        className={\"segment\"}\n                        data-is-segment={true}\n                        data-is-closing-point={true}\n                        key={`closing-point-${index}`}\n                        cx={head.x}\n                        cy={head.y}\n                        fill={onClosingPoint ? \"orange\" : \"blue\"}\n                        r={SEGMENT_CIRCLE_RADIUS}\n                      />,\n                    ];\n                    let keyIndex = 0;\n                    for (const point of tail) {\n                      keyIndex++;\n                      lines.push(\n                        <g key={`segments-${index}-${keyIndex}`}>\n                          {drawState === DRAW_STATE_INSERT_SEGMENT &&\n                            currentShapeIndex === index &&\n                            currentSegmentIndex === keyIndex && (\n                              <circle\n                                className={\"segment\"}\n                                data-is-segment={true}\n                                cx={100}\n                                cy={200}\n                                fill={\"black\"}\n                                r={SEGMENT_CIRCLE_RADIUS}\n                                {...(() => {\n                                  const reflection = reflect(\n                                    cursorPosition,\n                                    head,\n                                    point\n                                  );\n                                  return {\n                                    cx: (reflection.x + cursorPosition.x) / 2,\n                                    cy: (reflection.y + cursorPosition.y) / 2,\n                                  };\n                                })()}\n                              />\n                            )}\n                          <circle\n                            data-shape-index={index}\n                            data-point-index={keyIndex}\n                            className={\"segment\"}\n                            data-is-segment={true}\n                            cx={point.x}\n                            cy={point.y}\n                            fill={\n                              (() => {\n                                let isPointInSelectionRectangle;\n\n                                if (drawState === DRAW_STATE_SELECTION_SET) {\n                                  isPointInSelectionRectangle =\n                                    isPointInRectangle(\n                                      point,\n                                      selectionRectangle\n                                    );\n                                } else if (\n                                  drawState ===\n                                  DRAW_STATE_MOVE_SELECTED_SEGMENTS\n                                ) {\n                                  let _shapeIndex = 0;\n                                  let _pointIndex = 0;\n                                  for (shape of shapes) {\n                                    if (index === _shapeIndex) {\n                                      break;\n                                    }\n                                    _shapeIndex++;\n                                    _pointIndex += shape.points.length;\n                                  }\n                                  return (\n                                    selectedPointIndexes.indexOf(\n                                      _pointIndex + keyIndex\n                                    ) > -1\n                                  );\n                                } else {\n                                  isPointInSelectionRectangle = false;\n                                }\n\n                                const isPointInCurrentSelection =\n                                  drawState === DRAW_STATE_SELECTION_STARTED &&\n                                  isPointInRectangle(\n                                    point,\n                                    calculateSelectionRectangle(\n                                      mouseDownCursorPosition,\n                                      cursorPosition\n                                    )\n                                  );\n\n                                return (\n                                  isPointInSelectionRectangle ||\n                                  isPointInCurrentSelection\n                                );\n                              })()\n                                ? \"blue\"\n                                : \"silver\"\n                            }\n                            r={SEGMENT_CIRCLE_RADIUS}\n                          />\n                          <line\n                            stroke={\"black\"}\n                            x1={head.x}\n                            y1={head.y}\n                            x2={point.x}\n                            y2={point.y}\n                            data-is-segment-line={true}\n                            data-shape-index={index}\n                            data-segment-index={keyIndex}\n                          />\n                        </g>\n                      );\n                      head = point;\n                    }\n                    return lines;\n                  })()}\n                </g>\n              );\n            })}\n            {drawState === DRAW_STATE_SELECTION_STARTED &&\n              (() => {\n                const { x, y, width, height } = calculateSelectionRectangle(\n                  mouseDownCursorPosition,\n                  cursorPosition\n                );\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    className={\"selection-rectangle\"}\n                  ></rect>\n                );\n              })()}\n          </svg>\n        </div>\n        <div className=\"tools\">\n          <div className=\"preview\">\n            {previews.map((previewSize, index) => (\n              <div\n                className={\"preview-square\"}\n                key={`preview-${index}`}\n                style={{ width: previewSize }}\n              >\n                <h3>\n                  {previewSize}x{previewSize}\n                </h3>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"canvas\"\n                  id={`preview-${index}`}\n                  width={previewSize}\n                  height={previewSize}\n                >\n                  {shapes.map((shape, index) => {\n                    const divider = 512 / previewSize;\n                    const pointsAsSVGString = shape.points\n                      .map(({ x, y }) => `${x / divider},${y / divider}`)\n                      .join(\" \");\n                    return (\n                      <g key={index}>\n                        <polygon points={pointsAsSVGString} stroke={shape.stroke || 'black'} fill={shape.fill} />\n                      </g>\n                    );\n                  })}\n                </svg>\n                <a\n                  href=\"#\"\n                  className={\"download-link\"}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    const svgImage = document.createElement(\"img\");\n                    svgImage.width = previewSize;\n                    svgImage.height = previewSize;\n                    document.body.appendChild(svgImage);\n                    svgImage.onload = () => {\n                      const canvas = document.createElement(\"canvas\");\n                      canvas.width = svgImage.clientWidth;\n                      canvas.height = svgImage.clientHeight;\n                      const canvasCtx = canvas.getContext(\"2d\");\n                      canvasCtx.drawImage(svgImage, 0, 0);\n                      const imageDataURL = canvas.toDataURL(\"image/png\");\n                      svgImage.parentElement.removeChild(svgImage);\n                      URL.revokeObjectURL(svgImage.src);\n                      const downloadLink = document.createElement(\"a\");\n                      downloadLink.href = imageDataURL;\n                      downloadLink.download = `icon-${previewSize}.png`;\n                      downloadLink.click();\n                    };\n                    svgImage.src = URL.createObjectURL(\n                      new Blob(\n                        [document.getElementById(`preview-${index}`).outerHTML],\n                        {\n                          type: \"image/svg+xml\",\n                        }\n                      )\n                    );\n                  }}\n                >\n                  download\n                </a>\n              </div>\n            ))}\n          </div>\n\n          <div id=\"bio\">\n            I am a software developer. I am interested in functional\n            programming. I create developer productivity tools in my free time.\n            I created \"arguman.org\" in past. I study sociology in Istanbul\n            University. I research about system engineering and create\n            computational sociology models.\n          </div>\n        </div>\n        <h1 id=\"experiences-label\">Experiences</h1>\n        <div id=\"page\">\n          <div className=\"work-experience\">\n            <h1>EPAM Systems</h1>\n            <h2>Resource Manager &amp; Senior Software Engineer</h2>\n            <p>\n              I was responsible for the UI development of an embedded smart-tv\n              application. I mainly worked on the networking interface of the\n              application. It is a NodeJS application that using Wayland\n              compositor to interact with the backend services.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>EPAM Systems</h1>\n            <h2>Lead Software Engineer</h2>\n            <p>\n              I mainly worked on development of an interactive map for a seat\n              selection in a ticket-selling web site. I worked with React and\n              GraphQL.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Adphorus</h1>\n            <h2>Senior Software Engineer</h2>\n            <p>\n              Adphorus is an intelligent ad and creative management tool. I\n              worked on the development of the UI with React and Redux.\n              Basically the tool allows you to create an ad and publish it on\n              several platforms such as Facebook and Twitter. I was working\n              closely with the Product team to provide users an abstract\n              interface which works for all the platforms.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Hipolabs</h1>\n            <h2>Senior Software Engineer</h2>\n            <p>\n              I worked on the application chroma; which is an attribution editor\n              for collec- tion items and natural species. I worked as a\n              full-stack developer. Backend system built with Python and Tornado\n              web framework and running on AWS. The frontend and the attribution\n              editor is built with AngularJS.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Metglobal</h1>\n            <h2>Senior Software Engineer &amp; Community Manager</h2>\n            <p>\n              Metglobal is a leading travel-tech company in Turkey. I was\n              responsible for the development travel websites and hotel search\n              engines. I also lead the development relationships community and\n              initiated a software development and research lab in the company.\n            </p>\n          </div>\n          <div className=\"work-experience\">\n            <h1>Freelancer</h1>\n            <p>\n              Worked on several projects in both backend and frontend sites.\n              Most of them are not active anymore. I mainly used Django web\n              framework and pure javascript without any framework.\n            </p>\n          </div>\n          <div className=\"languages\">\n            <h1>Languages</h1>\n            <p>\n              Turkish — My Native Language <br />\n              English — Professional working efficiency <br />\n              Polish — I lived in Poland for 4 years.\n            </p>\n          </div>\n          <div className=\"open-source-projects\">\n            <h1>Open-source projects</h1>\n            <p>\n              github.com/inveniosoftware/dictdiffer <br />\n              github.com/arguman/arguman/arguman.org <br />\n              github.com/react-designer/react-designer <br />\n              github.com/fatih-erikli/disease-simulation\n            </p>\n          </div>\n        </div>\n      </div>\n      <footer>Fatih Erikli — 2021 — Creative Commons</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}